addgpl.sh:if [ -d "$DIRECTORY" ]; then 
addgpl.sh:	FILES=`find $DIRECTORY -iname '*.h' -or -iname '*.cpp'`
addgpl.sh:	NUMLINES=`wc -l gpl.txt | cut -f1 -d' '`
addgpl.sh:		HEADER=`head --lines=$NUMLINES $f | diff -w gpl.txt -`
addgpl.sh:		if [ -z "$HEADER" ] ; then 
addgpl.sh:			tail --lines=+$NUMLINES $f.tmp > $f
AddressMapping.cpp:*  Copyright (c) 2010-2011, Elliott Cooper-Balis
AddressMapping.cpp:	uint64_t transactionMask =  transactionSize - 1; //ex: (64 bit bus width) x (8 Burst Length) - 1 = 64 bytes - 1 = 63 = 0x3f mask
AddressMapping.cpp:	// For example: cowLowBits = log2(64bytes) - 3 bits = 3 bits 
AddressMapping.cpp:	unsigned colHighBitWidth = colBitWidth - colLowBitWidth; 
AddressMapping.cpp:		ERROR("== Error - Unknown Address Mapping Scheme");
AddressMapping.cpp:		exit(-1);
AddressMapping.dep:AddressMapping.o: AddressMapping.cpp /usr/include/stdc-predef.h \
AddressMapping.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++config.h \
AddressMapping.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/os_defines.h \
AddressMapping.dep: /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
AddressMapping.dep: /usr/include/x86_64-linux-gnu/bits/wordsize.h \
AddressMapping.dep: /usr/include/x86_64-linux-gnu/gnu/stubs.h \
AddressMapping.dep: /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
AddressMapping.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/cpu_defines.h \
AddressMapping.dep: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdarg.h \
AddressMapping.dep: /usr/include/x86_64-linux-gnu/bits/wchar.h \
AddressMapping.dep: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h \
AddressMapping.dep: /usr/include/xlocale.h /usr/include/x86_64-linux-gnu/bits/wchar2.h \
AddressMapping.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++locale.h \
AddressMapping.dep: /usr/include/x86_64-linux-gnu/bits/locale.h /usr/include/c++/4.8/cctype \
AddressMapping.dep: /usr/include/ctype.h /usr/include/x86_64-linux-gnu/bits/types.h \
AddressMapping.dep: /usr/include/x86_64-linux-gnu/bits/typesizes.h /usr/include/endian.h \
AddressMapping.dep: /usr/include/x86_64-linux-gnu/bits/endian.h \
AddressMapping.dep: /usr/include/x86_64-linux-gnu/bits/byteswap.h \
AddressMapping.dep: /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
AddressMapping.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr.h \
AddressMapping.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr-default.h \
AddressMapping.dep: /usr/include/x86_64-linux-gnu/bits/sched.h \
AddressMapping.dep: /usr/include/x86_64-linux-gnu/bits/time.h \
AddressMapping.dep: /usr/include/x86_64-linux-gnu/bits/timex.h \
AddressMapping.dep: /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
AddressMapping.dep: /usr/include/x86_64-linux-gnu/bits/setjmp.h \
AddressMapping.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/atomic_word.h \
AddressMapping.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++allocator.h \
AddressMapping.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_base.h \
AddressMapping.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_inline.h \
AddressMapping.dep: /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
AddressMapping.dep: /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
AddressMapping.dep: /usr/include/x86_64-linux-gnu/bits/stdio.h \
AddressMapping.dep: /usr/include/x86_64-linux-gnu/bits/stdio2.h \
AddressMapping.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/basic_file.h \
AddressMapping.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++io.h \
AddressMapping.dep: /usr/include/stdlib.h /usr/include/x86_64-linux-gnu/bits/waitflags.h \
AddressMapping.dep: /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
AddressMapping.dep: /usr/include/x86_64-linux-gnu/sys/types.h \
AddressMapping.dep: /usr/include/x86_64-linux-gnu/sys/select.h \
AddressMapping.dep: /usr/include/x86_64-linux-gnu/bits/select.h \
AddressMapping.dep: /usr/include/x86_64-linux-gnu/bits/sigset.h \
AddressMapping.dep: /usr/include/x86_64-linux-gnu/bits/select2.h \
AddressMapping.dep: /usr/include/x86_64-linux-gnu/sys/sysmacros.h /usr/include/alloca.h \
AddressMapping.dep: /usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h \
AddressMapping.dep: /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
AddressMapping.dep: /usr/include/x86_64-linux-gnu/bits/stdlib.h \
AddressMapping.dep: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdint.h /usr/include/stdint.h \
AddressMapping.deppo:AddressMapping.po: AddressMapping.cpp /usr/include/stdc-predef.h \
AddressMapping.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++config.h \
AddressMapping.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/os_defines.h \
AddressMapping.deppo: /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
AddressMapping.deppo: /usr/include/x86_64-linux-gnu/bits/wordsize.h \
AddressMapping.deppo: /usr/include/x86_64-linux-gnu/gnu/stubs.h \
AddressMapping.deppo: /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
AddressMapping.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/cpu_defines.h \
AddressMapping.deppo: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdarg.h \
AddressMapping.deppo: /usr/include/x86_64-linux-gnu/bits/wchar.h \
AddressMapping.deppo: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h \
AddressMapping.deppo: /usr/include/xlocale.h /usr/include/x86_64-linux-gnu/bits/wchar2.h \
AddressMapping.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++locale.h \
AddressMapping.deppo: /usr/include/x86_64-linux-gnu/bits/locale.h /usr/include/c++/4.8/cctype \
AddressMapping.deppo: /usr/include/ctype.h /usr/include/x86_64-linux-gnu/bits/types.h \
AddressMapping.deppo: /usr/include/x86_64-linux-gnu/bits/typesizes.h /usr/include/endian.h \
AddressMapping.deppo: /usr/include/x86_64-linux-gnu/bits/endian.h \
AddressMapping.deppo: /usr/include/x86_64-linux-gnu/bits/byteswap.h \
AddressMapping.deppo: /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
AddressMapping.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr.h \
AddressMapping.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr-default.h \
AddressMapping.deppo: /usr/include/x86_64-linux-gnu/bits/sched.h \
AddressMapping.deppo: /usr/include/x86_64-linux-gnu/bits/time.h \
AddressMapping.deppo: /usr/include/x86_64-linux-gnu/bits/timex.h \
AddressMapping.deppo: /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
AddressMapping.deppo: /usr/include/x86_64-linux-gnu/bits/setjmp.h \
AddressMapping.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/atomic_word.h \
AddressMapping.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++allocator.h \
AddressMapping.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_base.h \
AddressMapping.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_inline.h \
AddressMapping.deppo: /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
AddressMapping.deppo: /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
AddressMapping.deppo: /usr/include/x86_64-linux-gnu/bits/stdio.h \
AddressMapping.deppo: /usr/include/x86_64-linux-gnu/bits/stdio2.h \
AddressMapping.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/basic_file.h \
AddressMapping.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++io.h \
AddressMapping.deppo: /usr/include/stdlib.h /usr/include/x86_64-linux-gnu/bits/waitflags.h \
AddressMapping.deppo: /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
AddressMapping.deppo: /usr/include/x86_64-linux-gnu/sys/types.h \
AddressMapping.deppo: /usr/include/x86_64-linux-gnu/sys/select.h \
AddressMapping.deppo: /usr/include/x86_64-linux-gnu/bits/select.h \
AddressMapping.deppo: /usr/include/x86_64-linux-gnu/bits/sigset.h \
AddressMapping.deppo: /usr/include/x86_64-linux-gnu/bits/select2.h \
AddressMapping.deppo: /usr/include/x86_64-linux-gnu/sys/sysmacros.h /usr/include/alloca.h \
AddressMapping.deppo: /usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h \
AddressMapping.deppo: /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
AddressMapping.deppo: /usr/include/x86_64-linux-gnu/bits/stdlib.h \
AddressMapping.deppo: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdint.h /usr/include/stdint.h \
AddressMapping.h:*  Copyright (c) 2010-2011, Elliott Cooper-Balis
Binary file AddressMapping.o matches
Binary file AddressMapping.po matches
Binary file a.out matches
Bank.cpp:*  Copyright (c) 2010-2011, Elliott Cooper-Balis
Bank.cpp:		if (head->row == row)
Bank.cpp:		head = head->next;
Bank.cpp:	DataStruct *rowHeadNode = rowEntries[busPacket->column];
Bank.cpp:	if ((foundNode = Bank::searchForRow(busPacket->row, rowHeadNode)) == NULL)
Bank.cpp:		//if(SHOW_SIM_OUTPUT) DEBUG("== Warning - Read from previously unwritten row " << busPacket->row);
Bank.cpp:		busPacket->data = garbage;
Bank.cpp:		busPacket->data = foundNode->data;
Bank.cpp:	busPacket->busPacketType = DATA;
Bank.cpp:	if (busPacket->column >= NUM_COLS)
Bank.cpp:		ERROR("== Error - Bus Packet column "<< busPacket->column <<" out of bounds");
Bank.cpp:		exit(-1);
Bank.cpp:	DataStruct *rowHeadNode = rowEntries[busPacket->column];
Bank.cpp:	if ((foundNode = Bank::searchForRow(busPacket->row, rowHeadNode)) == NULL)
Bank.cpp:		newRowNode->row = busPacket->row;
Bank.cpp:		newRowNode->data = busPacket->data;
Bank.cpp:		newRowNode->next = rowHeadNode;
Bank.cpp:		rowEntries[busPacket->column] = newRowNode;
Bank.cpp:		foundNode->data = busPacket->data;
Bank.cpp:			PRINTN(" -- Bank "<<busPacket->bank<<" writing to physical address 0x" << hex << busPacket->physicalAddress<<dec<<":");
Bank.cpp:			busPacket->printData();
Bank.dep:Bank.o: Bank.cpp /usr/include/stdc-predef.h Bank.h SystemConfiguration.h \
Bank.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++config.h \
Bank.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/os_defines.h \
Bank.dep: /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
Bank.dep: /usr/include/x86_64-linux-gnu/bits/wordsize.h \
Bank.dep: /usr/include/x86_64-linux-gnu/gnu/stubs.h \
Bank.dep: /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
Bank.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/cpu_defines.h \
Bank.dep: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdarg.h \
Bank.dep: /usr/include/x86_64-linux-gnu/bits/wchar.h \
Bank.dep: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h \
Bank.dep: /usr/include/xlocale.h /usr/include/x86_64-linux-gnu/bits/wchar2.h \
Bank.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++locale.h \
Bank.dep: /usr/include/x86_64-linux-gnu/bits/locale.h /usr/include/c++/4.8/cctype \
Bank.dep: /usr/include/ctype.h /usr/include/x86_64-linux-gnu/bits/types.h \
Bank.dep: /usr/include/x86_64-linux-gnu/bits/typesizes.h /usr/include/endian.h \
Bank.dep: /usr/include/x86_64-linux-gnu/bits/endian.h \
Bank.dep: /usr/include/x86_64-linux-gnu/bits/byteswap.h \
Bank.dep: /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
Bank.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr.h \
Bank.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr-default.h \
Bank.dep: /usr/include/x86_64-linux-gnu/bits/sched.h \
Bank.dep: /usr/include/x86_64-linux-gnu/bits/time.h \
Bank.dep: /usr/include/x86_64-linux-gnu/bits/timex.h \
Bank.dep: /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
Bank.dep: /usr/include/x86_64-linux-gnu/bits/setjmp.h \
Bank.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/atomic_word.h \
Bank.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++allocator.h \
Bank.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_base.h \
Bank.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_inline.h \
Bank.dep: /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
Bank.dep: /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
Bank.dep: /usr/include/x86_64-linux-gnu/bits/stdio.h \
Bank.dep: /usr/include/x86_64-linux-gnu/bits/stdio2.h \
Bank.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/basic_file.h \
Bank.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++io.h \
Bank.dep: /usr/include/stdlib.h /usr/include/x86_64-linux-gnu/bits/waitflags.h \
Bank.dep: /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
Bank.dep: /usr/include/x86_64-linux-gnu/sys/types.h \
Bank.dep: /usr/include/x86_64-linux-gnu/sys/select.h \
Bank.dep: /usr/include/x86_64-linux-gnu/bits/select.h \
Bank.dep: /usr/include/x86_64-linux-gnu/bits/sigset.h \
Bank.dep: /usr/include/x86_64-linux-gnu/bits/select2.h \
Bank.dep: /usr/include/x86_64-linux-gnu/sys/sysmacros.h /usr/include/alloca.h \
Bank.dep: /usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h \
Bank.dep: /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
Bank.dep: /usr/include/x86_64-linux-gnu/bits/stdlib.h \
Bank.dep: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdint.h /usr/include/stdint.h \
Bank.deppo:Bank.po: Bank.cpp /usr/include/stdc-predef.h Bank.h SystemConfiguration.h \
Bank.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++config.h \
Bank.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/os_defines.h \
Bank.deppo: /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
Bank.deppo: /usr/include/x86_64-linux-gnu/bits/wordsize.h \
Bank.deppo: /usr/include/x86_64-linux-gnu/gnu/stubs.h \
Bank.deppo: /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
Bank.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/cpu_defines.h \
Bank.deppo: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdarg.h \
Bank.deppo: /usr/include/x86_64-linux-gnu/bits/wchar.h \
Bank.deppo: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h \
Bank.deppo: /usr/include/xlocale.h /usr/include/x86_64-linux-gnu/bits/wchar2.h \
Bank.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++locale.h \
Bank.deppo: /usr/include/x86_64-linux-gnu/bits/locale.h /usr/include/c++/4.8/cctype \
Bank.deppo: /usr/include/ctype.h /usr/include/x86_64-linux-gnu/bits/types.h \
Bank.deppo: /usr/include/x86_64-linux-gnu/bits/typesizes.h /usr/include/endian.h \
Bank.deppo: /usr/include/x86_64-linux-gnu/bits/endian.h \
Bank.deppo: /usr/include/x86_64-linux-gnu/bits/byteswap.h \
Bank.deppo: /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
Bank.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr.h \
Bank.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr-default.h \
Bank.deppo: /usr/include/x86_64-linux-gnu/bits/sched.h \
Bank.deppo: /usr/include/x86_64-linux-gnu/bits/time.h \
Bank.deppo: /usr/include/x86_64-linux-gnu/bits/timex.h \
Bank.deppo: /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
Bank.deppo: /usr/include/x86_64-linux-gnu/bits/setjmp.h \
Bank.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/atomic_word.h \
Bank.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++allocator.h \
Bank.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_base.h \
Bank.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_inline.h \
Bank.deppo: /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
Bank.deppo: /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
Bank.deppo: /usr/include/x86_64-linux-gnu/bits/stdio.h \
Bank.deppo: /usr/include/x86_64-linux-gnu/bits/stdio2.h \
Bank.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/basic_file.h \
Bank.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++io.h \
Bank.deppo: /usr/include/stdlib.h /usr/include/x86_64-linux-gnu/bits/waitflags.h \
Bank.deppo: /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
Bank.deppo: /usr/include/x86_64-linux-gnu/sys/types.h \
Bank.deppo: /usr/include/x86_64-linux-gnu/sys/select.h \
Bank.deppo: /usr/include/x86_64-linux-gnu/bits/select.h \
Bank.deppo: /usr/include/x86_64-linux-gnu/bits/sigset.h \
Bank.deppo: /usr/include/x86_64-linux-gnu/bits/select2.h \
Bank.deppo: /usr/include/x86_64-linux-gnu/sys/sysmacros.h /usr/include/alloca.h \
Bank.deppo: /usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h \
Bank.deppo: /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
Bank.deppo: /usr/include/x86_64-linux-gnu/bits/stdlib.h \
Bank.deppo: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdint.h /usr/include/stdint.h \
Bank.h:*  Copyright (c) 2010-2011, Elliott Cooper-Balis
Binary file Bank.o matches
Binary file Bank.po matches
BankState.cpp:*  Copyright (c) 2010-2011, Elliott Cooper-Balis
BankState.dep:BankState.o: BankState.cpp /usr/include/stdc-predef.h BankState.h \
BankState.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++config.h \
BankState.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/os_defines.h \
BankState.dep: /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
BankState.dep: /usr/include/x86_64-linux-gnu/bits/wordsize.h \
BankState.dep: /usr/include/x86_64-linux-gnu/gnu/stubs.h \
BankState.dep: /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
BankState.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/cpu_defines.h \
BankState.dep: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdarg.h \
BankState.dep: /usr/include/x86_64-linux-gnu/bits/wchar.h \
BankState.dep: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h \
BankState.dep: /usr/include/xlocale.h /usr/include/x86_64-linux-gnu/bits/wchar2.h \
BankState.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++locale.h \
BankState.dep: /usr/include/x86_64-linux-gnu/bits/locale.h /usr/include/c++/4.8/cctype \
BankState.dep: /usr/include/ctype.h /usr/include/x86_64-linux-gnu/bits/types.h \
BankState.dep: /usr/include/x86_64-linux-gnu/bits/typesizes.h /usr/include/endian.h \
BankState.dep: /usr/include/x86_64-linux-gnu/bits/endian.h \
BankState.dep: /usr/include/x86_64-linux-gnu/bits/byteswap.h \
BankState.dep: /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
BankState.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr.h \
BankState.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr-default.h \
BankState.dep: /usr/include/x86_64-linux-gnu/bits/sched.h \
BankState.dep: /usr/include/x86_64-linux-gnu/bits/time.h \
BankState.dep: /usr/include/x86_64-linux-gnu/bits/timex.h \
BankState.dep: /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
BankState.dep: /usr/include/x86_64-linux-gnu/bits/setjmp.h \
BankState.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/atomic_word.h \
BankState.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++allocator.h \
BankState.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_base.h \
BankState.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_inline.h \
BankState.dep: /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
BankState.dep: /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
BankState.dep: /usr/include/x86_64-linux-gnu/bits/stdio.h \
BankState.dep: /usr/include/x86_64-linux-gnu/bits/stdio2.h \
BankState.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/basic_file.h \
BankState.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++io.h \
BankState.dep: /usr/include/stdlib.h /usr/include/x86_64-linux-gnu/bits/waitflags.h \
BankState.dep: /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
BankState.dep: /usr/include/x86_64-linux-gnu/sys/types.h \
BankState.dep: /usr/include/x86_64-linux-gnu/sys/select.h \
BankState.dep: /usr/include/x86_64-linux-gnu/bits/select.h \
BankState.dep: /usr/include/x86_64-linux-gnu/bits/sigset.h \
BankState.dep: /usr/include/x86_64-linux-gnu/bits/select2.h \
BankState.dep: /usr/include/x86_64-linux-gnu/sys/sysmacros.h /usr/include/alloca.h \
BankState.dep: /usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h \
BankState.dep: /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
BankState.dep: /usr/include/x86_64-linux-gnu/bits/stdlib.h \
BankState.dep: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdint.h /usr/include/stdint.h \
BankState.deppo:BankState.po: BankState.cpp /usr/include/stdc-predef.h BankState.h \
BankState.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++config.h \
BankState.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/os_defines.h \
BankState.deppo: /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
BankState.deppo: /usr/include/x86_64-linux-gnu/bits/wordsize.h \
BankState.deppo: /usr/include/x86_64-linux-gnu/gnu/stubs.h \
BankState.deppo: /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
BankState.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/cpu_defines.h \
BankState.deppo: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdarg.h \
BankState.deppo: /usr/include/x86_64-linux-gnu/bits/wchar.h \
BankState.deppo: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h \
BankState.deppo: /usr/include/xlocale.h /usr/include/x86_64-linux-gnu/bits/wchar2.h \
BankState.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++locale.h \
BankState.deppo: /usr/include/x86_64-linux-gnu/bits/locale.h /usr/include/c++/4.8/cctype \
BankState.deppo: /usr/include/ctype.h /usr/include/x86_64-linux-gnu/bits/types.h \
BankState.deppo: /usr/include/x86_64-linux-gnu/bits/typesizes.h /usr/include/endian.h \
BankState.deppo: /usr/include/x86_64-linux-gnu/bits/endian.h \
BankState.deppo: /usr/include/x86_64-linux-gnu/bits/byteswap.h \
BankState.deppo: /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
BankState.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr.h \
BankState.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr-default.h \
BankState.deppo: /usr/include/x86_64-linux-gnu/bits/sched.h \
BankState.deppo: /usr/include/x86_64-linux-gnu/bits/time.h \
BankState.deppo: /usr/include/x86_64-linux-gnu/bits/timex.h \
BankState.deppo: /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
BankState.deppo: /usr/include/x86_64-linux-gnu/bits/setjmp.h \
BankState.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/atomic_word.h \
BankState.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++allocator.h \
BankState.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_base.h \
BankState.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_inline.h \
BankState.deppo: /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
BankState.deppo: /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
BankState.deppo: /usr/include/x86_64-linux-gnu/bits/stdio.h \
BankState.deppo: /usr/include/x86_64-linux-gnu/bits/stdio2.h \
BankState.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/basic_file.h \
BankState.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++io.h \
BankState.deppo: /usr/include/stdlib.h /usr/include/x86_64-linux-gnu/bits/waitflags.h \
BankState.deppo: /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
BankState.deppo: /usr/include/x86_64-linux-gnu/sys/types.h \
BankState.deppo: /usr/include/x86_64-linux-gnu/sys/select.h \
BankState.deppo: /usr/include/x86_64-linux-gnu/bits/select.h \
BankState.deppo: /usr/include/x86_64-linux-gnu/bits/sigset.h \
BankState.deppo: /usr/include/x86_64-linux-gnu/bits/select2.h \
BankState.deppo: /usr/include/x86_64-linux-gnu/sys/sysmacros.h /usr/include/alloca.h \
BankState.deppo: /usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h \
BankState.deppo: /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
BankState.deppo: /usr/include/x86_64-linux-gnu/bits/stdlib.h \
BankState.deppo: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdint.h /usr/include/stdint.h \
BankState.h:*  Copyright (c) 2010-2011, Elliott Cooper-Balis
Binary file BankState.o matches
Binary file BankState.po matches
BusPacket.cpp:*  Copyright (c) 2010-2011, Elliott Cooper-Balis
BusPacket.cpp:			exit(-1);
BusPacket.cpp:			exit(-1);
BusPacket.dep:BusPacket.o: BusPacket.cpp /usr/include/stdc-predef.h BusPacket.h \
BusPacket.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++config.h \
BusPacket.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/os_defines.h \
BusPacket.dep: /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
BusPacket.dep: /usr/include/x86_64-linux-gnu/bits/wordsize.h \
BusPacket.dep: /usr/include/x86_64-linux-gnu/gnu/stubs.h \
BusPacket.dep: /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
BusPacket.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/cpu_defines.h \
BusPacket.dep: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdarg.h \
BusPacket.dep: /usr/include/x86_64-linux-gnu/bits/wchar.h \
BusPacket.dep: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h \
BusPacket.dep: /usr/include/xlocale.h /usr/include/x86_64-linux-gnu/bits/wchar2.h \
BusPacket.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++locale.h \
BusPacket.dep: /usr/include/x86_64-linux-gnu/bits/locale.h /usr/include/c++/4.8/cctype \
BusPacket.dep: /usr/include/ctype.h /usr/include/x86_64-linux-gnu/bits/types.h \
BusPacket.dep: /usr/include/x86_64-linux-gnu/bits/typesizes.h /usr/include/endian.h \
BusPacket.dep: /usr/include/x86_64-linux-gnu/bits/endian.h \
BusPacket.dep: /usr/include/x86_64-linux-gnu/bits/byteswap.h \
BusPacket.dep: /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
BusPacket.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr.h \
BusPacket.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr-default.h \
BusPacket.dep: /usr/include/x86_64-linux-gnu/bits/sched.h \
BusPacket.dep: /usr/include/x86_64-linux-gnu/bits/time.h \
BusPacket.dep: /usr/include/x86_64-linux-gnu/bits/timex.h \
BusPacket.dep: /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
BusPacket.dep: /usr/include/x86_64-linux-gnu/bits/setjmp.h \
BusPacket.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/atomic_word.h \
BusPacket.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++allocator.h \
BusPacket.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_base.h \
BusPacket.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_inline.h \
BusPacket.dep: /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
BusPacket.dep: /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
BusPacket.dep: /usr/include/x86_64-linux-gnu/bits/stdio.h \
BusPacket.dep: /usr/include/x86_64-linux-gnu/bits/stdio2.h \
BusPacket.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/basic_file.h \
BusPacket.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++io.h \
BusPacket.dep: /usr/include/stdlib.h /usr/include/x86_64-linux-gnu/bits/waitflags.h \
BusPacket.dep: /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
BusPacket.dep: /usr/include/x86_64-linux-gnu/sys/types.h \
BusPacket.dep: /usr/include/x86_64-linux-gnu/sys/select.h \
BusPacket.dep: /usr/include/x86_64-linux-gnu/bits/select.h \
BusPacket.dep: /usr/include/x86_64-linux-gnu/bits/sigset.h \
BusPacket.dep: /usr/include/x86_64-linux-gnu/bits/select2.h \
BusPacket.dep: /usr/include/x86_64-linux-gnu/sys/sysmacros.h /usr/include/alloca.h \
BusPacket.dep: /usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h \
BusPacket.dep: /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
BusPacket.dep: /usr/include/x86_64-linux-gnu/bits/stdlib.h \
BusPacket.dep: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdint.h /usr/include/stdint.h \
BusPacket.deppo:BusPacket.po: BusPacket.cpp /usr/include/stdc-predef.h BusPacket.h \
BusPacket.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++config.h \
BusPacket.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/os_defines.h \
BusPacket.deppo: /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
BusPacket.deppo: /usr/include/x86_64-linux-gnu/bits/wordsize.h \
BusPacket.deppo: /usr/include/x86_64-linux-gnu/gnu/stubs.h \
BusPacket.deppo: /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
BusPacket.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/cpu_defines.h \
BusPacket.deppo: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdarg.h \
BusPacket.deppo: /usr/include/x86_64-linux-gnu/bits/wchar.h \
BusPacket.deppo: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h \
BusPacket.deppo: /usr/include/xlocale.h /usr/include/x86_64-linux-gnu/bits/wchar2.h \
BusPacket.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++locale.h \
BusPacket.deppo: /usr/include/x86_64-linux-gnu/bits/locale.h /usr/include/c++/4.8/cctype \
BusPacket.deppo: /usr/include/ctype.h /usr/include/x86_64-linux-gnu/bits/types.h \
BusPacket.deppo: /usr/include/x86_64-linux-gnu/bits/typesizes.h /usr/include/endian.h \
BusPacket.deppo: /usr/include/x86_64-linux-gnu/bits/endian.h \
BusPacket.deppo: /usr/include/x86_64-linux-gnu/bits/byteswap.h \
BusPacket.deppo: /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
BusPacket.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr.h \
BusPacket.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr-default.h \
BusPacket.deppo: /usr/include/x86_64-linux-gnu/bits/sched.h \
BusPacket.deppo: /usr/include/x86_64-linux-gnu/bits/time.h \
BusPacket.deppo: /usr/include/x86_64-linux-gnu/bits/timex.h \
BusPacket.deppo: /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
BusPacket.deppo: /usr/include/x86_64-linux-gnu/bits/setjmp.h \
BusPacket.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/atomic_word.h \
BusPacket.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++allocator.h \
BusPacket.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_base.h \
BusPacket.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_inline.h \
BusPacket.deppo: /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
BusPacket.deppo: /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
BusPacket.deppo: /usr/include/x86_64-linux-gnu/bits/stdio.h \
BusPacket.deppo: /usr/include/x86_64-linux-gnu/bits/stdio2.h \
BusPacket.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/basic_file.h \
BusPacket.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++io.h \
BusPacket.deppo: /usr/include/stdlib.h /usr/include/x86_64-linux-gnu/bits/waitflags.h \
BusPacket.deppo: /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
BusPacket.deppo: /usr/include/x86_64-linux-gnu/sys/types.h \
BusPacket.deppo: /usr/include/x86_64-linux-gnu/sys/select.h \
BusPacket.deppo: /usr/include/x86_64-linux-gnu/bits/select.h \
BusPacket.deppo: /usr/include/x86_64-linux-gnu/bits/sigset.h \
BusPacket.deppo: /usr/include/x86_64-linux-gnu/bits/select2.h \
BusPacket.deppo: /usr/include/x86_64-linux-gnu/sys/sysmacros.h /usr/include/alloca.h \
BusPacket.deppo: /usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h \
BusPacket.deppo: /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
BusPacket.deppo: /usr/include/x86_64-linux-gnu/bits/stdlib.h \
BusPacket.deppo: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdint.h /usr/include/stdint.h \
BusPacket.h:*  Copyright (c) 2010-2011, Elliott Cooper-Balis
Binary file BusPacket.o matches
Binary file BusPacket.po matches
Callback.h:*  Copyright (c) 2010-2011, Elliott Cooper-Balis
Callback.h:		return (const_cast<ConsumerT*>(object)->*member)
ClockDomain.cpp:		//cout << "CTOR: callback address: " << (uint64_t)(this->callback) << "\t ratio="<<clock1<<"/"<<clock2<< endl;
ClockDomain.cpp:		for (i = 1; i<MAX_ITER-1; i++)
ClockDomain.cpp:			if (fabs(x - (double)ns[i]/(double)ds[i]) < 0.00005)
ClockDomain.cpp:			zs[i+1] = 1.0f/(zs[i]-(int)floor(zs[i])); // 1/(fractional part of z_i)
ClockDomain.cpp:			ds[i+1] = ds[i]*(int)floor(zs[i+1])+ds[i-1];
ClockDomain.cpp:			double tmp2 = tmp - (int)tmp;
ClockDomain.cpp:		this->clock1=ns[i];
ClockDomain.cpp:		this->clock2=ds[i];
ClockDomain.cpp:		//cout << "CTOR: callback address: " << (uint64_t)(this->callback) << "\t ratio="<<clock1<<"/"<<clock2<< endl;
ClockDomain.cpp:		cout <<"------------------------------------------\n";
ClockDomain.cpp:		cout <<"------------------------------------------\n";
ClockDomain.cpp:		cout <<"------------------------------------------\n";
ClockDomain.dep:ClockDomain.o: ClockDomain.cpp /usr/include/stdc-predef.h ClockDomain.h \
ClockDomain.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++config.h \
ClockDomain.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/os_defines.h \
ClockDomain.dep: /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
ClockDomain.dep: /usr/include/x86_64-linux-gnu/bits/wordsize.h \
ClockDomain.dep: /usr/include/x86_64-linux-gnu/gnu/stubs.h \
ClockDomain.dep: /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
ClockDomain.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/cpu_defines.h \
ClockDomain.dep: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdarg.h \
ClockDomain.dep: /usr/include/x86_64-linux-gnu/bits/wchar.h \
ClockDomain.dep: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h \
ClockDomain.dep: /usr/include/xlocale.h /usr/include/x86_64-linux-gnu/bits/wchar2.h \
ClockDomain.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++locale.h \
ClockDomain.dep: /usr/include/x86_64-linux-gnu/bits/locale.h /usr/include/c++/4.8/cctype \
ClockDomain.dep: /usr/include/ctype.h /usr/include/x86_64-linux-gnu/bits/types.h \
ClockDomain.dep: /usr/include/x86_64-linux-gnu/bits/typesizes.h /usr/include/endian.h \
ClockDomain.dep: /usr/include/x86_64-linux-gnu/bits/endian.h \
ClockDomain.dep: /usr/include/x86_64-linux-gnu/bits/byteswap.h \
ClockDomain.dep: /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
ClockDomain.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr.h \
ClockDomain.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr-default.h \
ClockDomain.dep: /usr/include/x86_64-linux-gnu/bits/sched.h \
ClockDomain.dep: /usr/include/x86_64-linux-gnu/bits/time.h \
ClockDomain.dep: /usr/include/x86_64-linux-gnu/bits/timex.h \
ClockDomain.dep: /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
ClockDomain.dep: /usr/include/x86_64-linux-gnu/bits/setjmp.h \
ClockDomain.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/atomic_word.h \
ClockDomain.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++allocator.h \
ClockDomain.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_base.h \
ClockDomain.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_inline.h \
ClockDomain.dep: /usr/include/math.h /usr/include/x86_64-linux-gnu/bits/huge_val.h \
ClockDomain.dep: /usr/include/x86_64-linux-gnu/bits/huge_valf.h \
ClockDomain.dep: /usr/include/x86_64-linux-gnu/bits/huge_vall.h \
ClockDomain.dep: /usr/include/x86_64-linux-gnu/bits/inf.h \
ClockDomain.dep: /usr/include/x86_64-linux-gnu/bits/nan.h \
ClockDomain.dep: /usr/include/x86_64-linux-gnu/bits/mathdef.h \
ClockDomain.dep: /usr/include/x86_64-linux-gnu/bits/mathcalls.h \
ClockDomain.dep: /usr/include/x86_64-linux-gnu/bits/mathinline.h \
ClockDomain.dep: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdint.h /usr/include/stdint.h
ClockDomain.deppo:ClockDomain.po: ClockDomain.cpp /usr/include/stdc-predef.h ClockDomain.h \
ClockDomain.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++config.h \
ClockDomain.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/os_defines.h \
ClockDomain.deppo: /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
ClockDomain.deppo: /usr/include/x86_64-linux-gnu/bits/wordsize.h \
ClockDomain.deppo: /usr/include/x86_64-linux-gnu/gnu/stubs.h \
ClockDomain.deppo: /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
ClockDomain.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/cpu_defines.h \
ClockDomain.deppo: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdarg.h \
ClockDomain.deppo: /usr/include/x86_64-linux-gnu/bits/wchar.h \
ClockDomain.deppo: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h \
ClockDomain.deppo: /usr/include/xlocale.h /usr/include/x86_64-linux-gnu/bits/wchar2.h \
ClockDomain.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++locale.h \
ClockDomain.deppo: /usr/include/x86_64-linux-gnu/bits/locale.h /usr/include/c++/4.8/cctype \
ClockDomain.deppo: /usr/include/ctype.h /usr/include/x86_64-linux-gnu/bits/types.h \
ClockDomain.deppo: /usr/include/x86_64-linux-gnu/bits/typesizes.h /usr/include/endian.h \
ClockDomain.deppo: /usr/include/x86_64-linux-gnu/bits/endian.h \
ClockDomain.deppo: /usr/include/x86_64-linux-gnu/bits/byteswap.h \
ClockDomain.deppo: /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
ClockDomain.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr.h \
ClockDomain.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr-default.h \
ClockDomain.deppo: /usr/include/x86_64-linux-gnu/bits/sched.h \
ClockDomain.deppo: /usr/include/x86_64-linux-gnu/bits/time.h \
ClockDomain.deppo: /usr/include/x86_64-linux-gnu/bits/timex.h \
ClockDomain.deppo: /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
ClockDomain.deppo: /usr/include/x86_64-linux-gnu/bits/setjmp.h \
ClockDomain.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/atomic_word.h \
ClockDomain.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++allocator.h \
ClockDomain.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_base.h \
ClockDomain.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_inline.h \
ClockDomain.deppo: /usr/include/math.h /usr/include/x86_64-linux-gnu/bits/huge_val.h \
ClockDomain.deppo: /usr/include/x86_64-linux-gnu/bits/huge_valf.h \
ClockDomain.deppo: /usr/include/x86_64-linux-gnu/bits/huge_vall.h \
ClockDomain.deppo: /usr/include/x86_64-linux-gnu/bits/inf.h \
ClockDomain.deppo: /usr/include/x86_64-linux-gnu/bits/nan.h \
ClockDomain.deppo: /usr/include/x86_64-linux-gnu/bits/mathdef.h \
ClockDomain.deppo: /usr/include/x86_64-linux-gnu/bits/mathcalls.h \
ClockDomain.deppo: /usr/include/x86_64-linux-gnu/bits/mathinline.h \
ClockDomain.deppo: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdint.h /usr/include/stdint.h
ClockDomain.h:            return (const_cast<ConsumerT*>(object)->*member)();
Binary file ClockDomain.o matches
Binary file ClockDomain.po matches
CommandQueue.cpp:*  Copyright (c) 2010-2011, Elliott Cooper-Balis
CommandQueue.cpp:		ERROR("== Error - Unknown queuing structure");
CommandQueue.cpp:		//this loop will run only once for per-rank and NUM_BANKS times for per-rank-per-bank
CommandQueue.cpp:	//FOUR-bank activation window
CommandQueue.cpp:	unsigned rank = newBusPacket->rank;
CommandQueue.cpp:	unsigned bank = newBusPacket->bank;
CommandQueue.cpp:			ERROR("== Error - Enqueued more than allowed in command queue");
CommandQueue.cpp:			ERROR("== Error - Enqueued more than allowed in command queue");
CommandQueue.cpp:		ERROR("== Error - Unknown queuing structure");
CommandQueue.cpp:	//deal with tFAW book-keeping
CommandQueue.cpp:			tFAWCountdown[i][j]--;
CommandQueue.cpp:						if (packet->column == bankStates[refreshRank][b].openRowAddress &&
CommandQueue.cpp:								packet->bank == b)
CommandQueue.cpp:							if (packet->busPacketType != ACTIVATE && isIssuable(packet))
CommandQueue.cpp:				refreshRank = -1;
CommandQueue.cpp:								if (i>0 && queue[i-1]->busPacketType==ACTIVATE &&
CommandQueue.cpp:										queue[i-1]->physicalAddress == queue[i]->physicalAddress)
CommandQueue.cpp:				//if we found something, break out of do-while
CommandQueue.cpp:						if (bankStates[refreshRank][b].openRowAddress == packet->column &&
CommandQueue.cpp:								b == packet->bank)
CommandQueue.cpp:							if (packet->busPacketType != ACTIVATE)
CommandQueue.cpp:				refreshRank = -1;
CommandQueue.cpp:								if (prevPacket->busPacketType != ACTIVATE &&
CommandQueue.cpp:										prevPacket->bank == packet->bank &&
CommandQueue.cpp:										prevPacket->column == packet->column)
CommandQueue.cpp:							if (i>0 && queue[i-1]->busPacketType == ACTIVATE)
CommandQueue.cpp:								rowAccessCounters[(*busPacket)->rank][(*busPacket)->bank]++;
CommandQueue.cpp:								// i is being returned, but i-1 is being thrown away, so must delete it here 
CommandQueue.cpp:								delete (queue[i-1]);
CommandQueue.cpp:								// remove both i-1 (the activate) and i (we've saved the pointer in *busPacket)
CommandQueue.cpp:								queue.erase(queue.begin()+i-1,queue.begin()+i+1);
CommandQueue.cpp:				//if we found something, break out of do-while
CommandQueue.cpp:							if (queue[i]->bank == nextBankPRE &&
CommandQueue.cpp:									queue[i]->column == bankStates[nextRankPRE][nextBankPRE].openRowAddress)
CommandQueue.cpp:	//sendAct is flag used for posted-cas
CommandQueue.cpp:	//  posted-cas is enabled when AL>0
CommandQueue.cpp:	if ((*busPacket)->busPacketType==ACTIVATE)
CommandQueue.cpp:		tFAWCountdown[(*busPacket)->rank].push_back(tFAW);
CommandQueue.cpp:	return (CMD_QUEUE_DEPTH - queue.size() >= numberToEnqueue);
CommandQueue.cpp:				queues[i][0][j]->print();
CommandQueue.cpp:					queues[i][j][k]->print();
CommandQueue.cpp:	switch (busPacket->busPacketType)
CommandQueue.cpp:		if ((bankStates[busPacket->rank][busPacket->bank].currentBankState == Idle ||
CommandQueue.cpp:		        bankStates[busPacket->rank][busPacket->bank].currentBankState == Refreshing) &&
CommandQueue.cpp:		        currentClockCycle >= bankStates[busPacket->rank][busPacket->bank].nextActivate &&
CommandQueue.cpp:		        tFAWCountdown[busPacket->rank].size() < 4)
CommandQueue.cpp:		if (bankStates[busPacket->rank][busPacket->bank].currentBankState == RowActive &&
CommandQueue.cpp:		        currentClockCycle >= bankStates[busPacket->rank][busPacket->bank].nextWrite &&
CommandQueue.cpp:		        busPacket->column == bankStates[busPacket->rank][busPacket->bank].openRowAddress &&
CommandQueue.cpp:		        rowAccessCounters[busPacket->rank][busPacket->bank] < TOTAL_ROW_ACCESSES)
CommandQueue.cpp:		if (bankStates[busPacket->rank][busPacket->bank].currentBankState == RowActive &&
CommandQueue.cpp:		        currentClockCycle >= bankStates[busPacket->rank][busPacket->bank].nextRead &&
CommandQueue.cpp:		        busPacket->column == bankStates[busPacket->rank][busPacket->bank].openRowAddress &&
CommandQueue.cpp:		        rowAccessCounters[busPacket->rank][busPacket->bank] < TOTAL_ROW_ACCESSES)
CommandQueue.cpp:		if (bankStates[busPacket->rank][busPacket->bank].currentBankState == RowActive &&
CommandQueue.cpp:		        currentClockCycle >= bankStates[busPacket->rank][busPacket->bank].nextPrecharge)
CommandQueue.cpp:		ERROR("== Error - Trying to issue a crazy bus packet type : ");
CommandQueue.cpp:		busPacket->print();
CommandQueue.cpp:	//bank-then-rank round robin
CommandQueue.cpp:		ERROR("== Error - Unknown scheduling policy");
CommandQueue.cpp~:*  Copyright (c) 2010-2011, Elliott Cooper-Balis
CommandQueue.cpp~:		ERROR("== Error - Unknown queuing structure");
CommandQueue.cpp~:		//this loop will run only once for per-rank and NUM_BANKS times for per-rank-per-bank
CommandQueue.cpp~:	//FOUR-bank activation window
CommandQueue.cpp~:	unsigned rank = newBusPacket->rank;
CommandQueue.cpp~:	unsigned bank = newBusPacket->bank;
CommandQueue.cpp~:			ERROR("== Error - Enqueued more than allowed in command queue");
CommandQueue.cpp~:			ERROR("== Error - Enqueued more than allowed in command queue");
CommandQueue.cpp~:		ERROR("== Error - Unknown queuing structure");
CommandQueue.cpp~:	//deal with tFAW book-keeping
CommandQueue.cpp~:			tFAWCountdown[i][j]--;
CommandQueue.cpp~:						if (packet->column == bankStates[refreshRank][b].openRowAddress &&
CommandQueue.cpp~:								packet->bank == b)
CommandQueue.cpp~:							if (packet->busPacketType != ACTIVATE && isIssuable(packet))
CommandQueue.cpp~:				refreshRank = -1;
CommandQueue.cpp~:								if (i>0 && queue[i-1]->busPacketType==ACTIVATE &&
CommandQueue.cpp~:										queue[i-1]->physicalAddress == queue[i]->physicalAddress)
CommandQueue.cpp~:				//if we found something, break out of do-while
CommandQueue.cpp~:						if (bankStates[refreshRank][b].openRowAddress == packet->column &&
CommandQueue.cpp~:								b == packet->bank)
CommandQueue.cpp~:							if (packet->busPacketType != ACTIVATE)
CommandQueue.cpp~:				refreshRank = -1;
CommandQueue.cpp~:								if (prevPacket->busPacketType != ACTIVATE &&
CommandQueue.cpp~:										prevPacket->bank == packet->bank &&
CommandQueue.cpp~:										prevPacket->column == packet->column)
CommandQueue.cpp~:							if (i>0 && queue[i-1]->busPacketType == ACTIVATE)
CommandQueue.cpp~:								rowAccessCounters[(*busPacket)->rank][(*busPacket)->bank]++;
CommandQueue.cpp~:								// i is being returned, but i-1 is being thrown away, so must delete it here 
CommandQueue.cpp~:								delete (queue[i-1]);
CommandQueue.cpp~:								// remove both i-1 (the activate) and i (we've saved the pointer in *busPacket)
CommandQueue.cpp~:								queue.erase(queue.begin()+i-1,queue.begin()+i+1);
CommandQueue.cpp~:				//if we found something, break out of do-while
CommandQueue.cpp~:							if (queue[i]->bank == nextBankPRE &&
CommandQueue.cpp~:									queue[i]->column == bankStates[nextRankPRE][nextBankPRE].openRowAddress)
CommandQueue.cpp~:	//sendAct is flag used for posted-cas
CommandQueue.cpp~:	//  posted-cas is enabled when AL>0
CommandQueue.cpp~:	if ((*busPacket)->busPacketType==ACTIVATE)
CommandQueue.cpp~:		tFAWCountdown[(*busPacket)->rank].push_back(tFAW);
CommandQueue.cpp~:	return (CMD_QUEUE_DEPTH - queue.size() >= numberToEnqueue);
CommandQueue.cpp~:				queues[i][0][j]->print();
CommandQueue.cpp~:					queues[i][j][k]->print();
CommandQueue.cpp~:	switch (busPacket->busPacketType)
CommandQueue.cpp~:		if ((bankStates[busPacket->rank][busPacket->bank].currentBankState == Idle ||
CommandQueue.cpp~:		        bankStates[busPacket->rank][busPacket->bank].currentBankState == Refreshing) &&
CommandQueue.cpp~:		        currentClockCycle >= bankStates[busPacket->rank][busPacket->bank].nextActivate &&
CommandQueue.cpp~:		        tFAWCountdown[busPacket->rank].size() < 4)
CommandQueue.cpp~:		if (bankStates[busPacket->rank][busPacket->bank].currentBankState == RowActive &&
CommandQueue.cpp~:		        currentClockCycle >= bankStates[busPacket->rank][busPacket->bank].nextWrite &&
CommandQueue.cpp~:		        busPacket->column == bankStates[busPacket->rank][busPacket->bank].openRowAddress &&
CommandQueue.cpp~:		        rowAccessCounters[busPacket->rank][busPacket->bank] < TOTAL_ROW_ACCESSES)
CommandQueue.cpp~:		if (bankStates[busPacket->rank][busPacket->bank].currentBankState == RowActive &&
CommandQueue.cpp~:		        currentClockCycle >= bankStates[busPacket->rank][busPacket->bank].nextRead &&
CommandQueue.cpp~:		        busPacket->column == bankStates[busPacket->rank][busPacket->bank].openRowAddress &&
CommandQueue.cpp~:		        rowAccessCounters[busPacket->rank][busPacket->bank] < TOTAL_ROW_ACCESSES)
CommandQueue.cpp~:		if (bankStates[busPacket->rank][busPacket->bank].currentBankState == RowActive &&
CommandQueue.cpp~:		        currentClockCycle >= bankStates[busPacket->rank][busPacket->bank].nextPrecharge)
CommandQueue.cpp~:		ERROR("== Error - Trying to issue a crazy bus packet type : ");
CommandQueue.cpp~:		busPacket->print();
CommandQueue.cpp~:	//bank-then-rank round robin
CommandQueue.cpp~:		ERROR("== Error - Unknown scheduling policy");
CommandQueue.dep:CommandQueue.o: CommandQueue.cpp /usr/include/stdc-predef.h \
CommandQueue.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++config.h \
CommandQueue.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/os_defines.h \
CommandQueue.dep: /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
CommandQueue.dep: /usr/include/x86_64-linux-gnu/bits/wordsize.h \
CommandQueue.dep: /usr/include/x86_64-linux-gnu/gnu/stubs.h \
CommandQueue.dep: /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
CommandQueue.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/cpu_defines.h \
CommandQueue.dep: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdarg.h \
CommandQueue.dep: /usr/include/x86_64-linux-gnu/bits/wchar.h \
CommandQueue.dep: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h \
CommandQueue.dep: /usr/include/xlocale.h /usr/include/x86_64-linux-gnu/bits/wchar2.h \
CommandQueue.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++locale.h \
CommandQueue.dep: /usr/include/x86_64-linux-gnu/bits/locale.h /usr/include/c++/4.8/cctype \
CommandQueue.dep: /usr/include/ctype.h /usr/include/x86_64-linux-gnu/bits/types.h \
CommandQueue.dep: /usr/include/x86_64-linux-gnu/bits/typesizes.h /usr/include/endian.h \
CommandQueue.dep: /usr/include/x86_64-linux-gnu/bits/endian.h \
CommandQueue.dep: /usr/include/x86_64-linux-gnu/bits/byteswap.h \
CommandQueue.dep: /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
CommandQueue.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr.h \
CommandQueue.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr-default.h \
CommandQueue.dep: /usr/include/x86_64-linux-gnu/bits/sched.h \
CommandQueue.dep: /usr/include/x86_64-linux-gnu/bits/time.h \
CommandQueue.dep: /usr/include/x86_64-linux-gnu/bits/timex.h \
CommandQueue.dep: /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
CommandQueue.dep: /usr/include/x86_64-linux-gnu/bits/setjmp.h \
CommandQueue.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/atomic_word.h \
CommandQueue.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++allocator.h \
CommandQueue.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_base.h \
CommandQueue.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_inline.h \
CommandQueue.dep: /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
CommandQueue.dep: /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
CommandQueue.dep: /usr/include/x86_64-linux-gnu/bits/stdio.h \
CommandQueue.dep: /usr/include/x86_64-linux-gnu/bits/stdio2.h \
CommandQueue.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/basic_file.h \
CommandQueue.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++io.h \
CommandQueue.dep: /usr/include/stdlib.h /usr/include/x86_64-linux-gnu/bits/waitflags.h \
CommandQueue.dep: /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
CommandQueue.dep: /usr/include/x86_64-linux-gnu/sys/types.h \
CommandQueue.dep: /usr/include/x86_64-linux-gnu/sys/select.h \
CommandQueue.dep: /usr/include/x86_64-linux-gnu/bits/select.h \
CommandQueue.dep: /usr/include/x86_64-linux-gnu/bits/sigset.h \
CommandQueue.dep: /usr/include/x86_64-linux-gnu/bits/select2.h \
CommandQueue.dep: /usr/include/x86_64-linux-gnu/sys/sysmacros.h /usr/include/alloca.h \
CommandQueue.dep: /usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h \
CommandQueue.dep: /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
CommandQueue.dep: /usr/include/x86_64-linux-gnu/bits/stdlib.h \
CommandQueue.dep: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdint.h /usr/include/stdint.h \
CommandQueue.dep: /usr/include/x86_64-linux-gnu/bits/string3.h /usr/include/c++/4.8/map \
CommandQueue.deppo:CommandQueue.po: CommandQueue.cpp /usr/include/stdc-predef.h \
CommandQueue.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++config.h \
CommandQueue.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/os_defines.h \
CommandQueue.deppo: /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
CommandQueue.deppo: /usr/include/x86_64-linux-gnu/bits/wordsize.h \
CommandQueue.deppo: /usr/include/x86_64-linux-gnu/gnu/stubs.h \
CommandQueue.deppo: /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
CommandQueue.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/cpu_defines.h \
CommandQueue.deppo: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdarg.h \
CommandQueue.deppo: /usr/include/x86_64-linux-gnu/bits/wchar.h \
CommandQueue.deppo: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h \
CommandQueue.deppo: /usr/include/xlocale.h /usr/include/x86_64-linux-gnu/bits/wchar2.h \
CommandQueue.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++locale.h \
CommandQueue.deppo: /usr/include/x86_64-linux-gnu/bits/locale.h /usr/include/c++/4.8/cctype \
CommandQueue.deppo: /usr/include/ctype.h /usr/include/x86_64-linux-gnu/bits/types.h \
CommandQueue.deppo: /usr/include/x86_64-linux-gnu/bits/typesizes.h /usr/include/endian.h \
CommandQueue.deppo: /usr/include/x86_64-linux-gnu/bits/endian.h \
CommandQueue.deppo: /usr/include/x86_64-linux-gnu/bits/byteswap.h \
CommandQueue.deppo: /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
CommandQueue.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr.h \
CommandQueue.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr-default.h \
CommandQueue.deppo: /usr/include/x86_64-linux-gnu/bits/sched.h \
CommandQueue.deppo: /usr/include/x86_64-linux-gnu/bits/time.h \
CommandQueue.deppo: /usr/include/x86_64-linux-gnu/bits/timex.h \
CommandQueue.deppo: /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
CommandQueue.deppo: /usr/include/x86_64-linux-gnu/bits/setjmp.h \
CommandQueue.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/atomic_word.h \
CommandQueue.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++allocator.h \
CommandQueue.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_base.h \
CommandQueue.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_inline.h \
CommandQueue.deppo: /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
CommandQueue.deppo: /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
CommandQueue.deppo: /usr/include/x86_64-linux-gnu/bits/stdio.h \
CommandQueue.deppo: /usr/include/x86_64-linux-gnu/bits/stdio2.h \
CommandQueue.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/basic_file.h \
CommandQueue.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++io.h \
CommandQueue.deppo: /usr/include/stdlib.h /usr/include/x86_64-linux-gnu/bits/waitflags.h \
CommandQueue.deppo: /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
CommandQueue.deppo: /usr/include/x86_64-linux-gnu/sys/types.h \
CommandQueue.deppo: /usr/include/x86_64-linux-gnu/sys/select.h \
CommandQueue.deppo: /usr/include/x86_64-linux-gnu/bits/select.h \
CommandQueue.deppo: /usr/include/x86_64-linux-gnu/bits/sigset.h \
CommandQueue.deppo: /usr/include/x86_64-linux-gnu/bits/select2.h \
CommandQueue.deppo: /usr/include/x86_64-linux-gnu/sys/sysmacros.h /usr/include/alloca.h \
CommandQueue.deppo: /usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h \
CommandQueue.deppo: /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
CommandQueue.deppo: /usr/include/x86_64-linux-gnu/bits/stdlib.h \
CommandQueue.deppo: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdint.h /usr/include/stdint.h \
CommandQueue.deppo: /usr/include/x86_64-linux-gnu/bits/string3.h /usr/include/c++/4.8/map \
CommandQueue.h:*  Copyright (c) 2010-2011, Elliott Cooper-Balis
Binary file CommandQueue.o matches
Binary file CommandQueue.po matches
comparison_gen.py:Since this uses the command line overrides (-o flag), it needs a fairly recent
comparison_gen.py:dramsim_flags = '-c 2000000 -n -S 8192 -q '
comparison_gen.py:				print "./%s -s system.ini -d ini/%s -t traces/%s -o %s %s -v %s &"%(executable, device, trace, paramOverrides, dramsim_flags, output_file)
comparison_gen.py:print "echo -n waiting"
comparison_gen.py:	print "is_different=`diff -q %s`"%(diff_args)
comparison_gen.py:	print "if [ -n \"$is_different\" ] ; then"	
comparison_gen.py:	print "diff -u %s"%(diff_args); 
CSVWriter.h:*  Copyright (c) 2010-2011, Elliott Cooper-Balis
CSVWriter.h:					exit(-1); 
Binary file DRAMSim matches
DRAMSim.h:*  Copyright (c) 2010-2011, Elliott Cooper-Balis
IniReader.cpp:*  Copyright (c) 2010-2011, Elliott Cooper-Balis
IniReader.cpp:	//DEFINE_UINT_PARAM -- see IniReader.h
IniReader.cpp:					ERROR("could not parse line "<<lineNumber<<" (non-numeric value '"<<valueString<<"')?");
IniReader.cpp:					DEBUG("\t - SETTING "<<configMap[i].iniKey<<"="<<intValue);
IniReader.cpp:					ERROR("could not parse line "<<lineNumber<<" (non-numeric value '"<<valueString<<"')?");
IniReader.cpp:					DEBUG("\t - SETTING "<<configMap[i].iniKey<<"="<<int64Value);
IniReader.cpp:					ERROR("could not parse line "<<lineNumber<<" (non-numeric value '"<<valueString<<"')?");
IniReader.cpp:					DEBUG("\t - SETTING "<<configMap[i].iniKey<<"="<<floatValue);
IniReader.cpp:					DEBUG("\t - SETTING "<<configMap[i].iniKey<<"="<<valueString);
IniReader.cpp:				exit(-1);
IniReader.cpp:			// skip zero-length lines
IniReader.cpp://					DEBUG("Truncating line at comment"<<line[commentIndex-1]);
IniReader.cpp:			valueString = line.substr(equalsIndex+1,strlen-equalsIndex);
IniReader.cpp:	COL_LOW_BIT_WIDTH	= THROW_AWAY_BITS - BYTE_OFFSET_WIDTH;
IniReader.cpp:	OverrideIterator it = map->begin();
IniReader.cpp:	for (it=map->begin(); it != map->end(); it++)
IniReader.cpp:		string key = it->first; 
IniReader.cpp:		string value = it->second; 
IniReader.cpp:		DEBUG("\t'"<< key <<"'->'"<< value<< "'"); 
IniReader.cpp: * Return value: 0 on success, -1 on error
IniReader.cpp:				return -1;				\
IniReader.cpp:		return -1;						\
IniReader.dep:IniReader.o: IniReader.cpp /usr/include/stdc-predef.h IniReader.h \
IniReader.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++config.h \
IniReader.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/os_defines.h \
IniReader.dep: /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
IniReader.dep: /usr/include/x86_64-linux-gnu/bits/wordsize.h \
IniReader.dep: /usr/include/x86_64-linux-gnu/gnu/stubs.h \
IniReader.dep: /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
IniReader.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/cpu_defines.h \
IniReader.dep: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdarg.h \
IniReader.dep: /usr/include/x86_64-linux-gnu/bits/wchar.h \
IniReader.dep: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h \
IniReader.dep: /usr/include/xlocale.h /usr/include/x86_64-linux-gnu/bits/wchar2.h \
IniReader.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++locale.h \
IniReader.dep: /usr/include/x86_64-linux-gnu/bits/locale.h /usr/include/c++/4.8/cctype \
IniReader.dep: /usr/include/ctype.h /usr/include/x86_64-linux-gnu/bits/types.h \
IniReader.dep: /usr/include/x86_64-linux-gnu/bits/typesizes.h /usr/include/endian.h \
IniReader.dep: /usr/include/x86_64-linux-gnu/bits/endian.h \
IniReader.dep: /usr/include/x86_64-linux-gnu/bits/byteswap.h \
IniReader.dep: /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
IniReader.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr.h \
IniReader.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr-default.h \
IniReader.dep: /usr/include/x86_64-linux-gnu/bits/sched.h \
IniReader.dep: /usr/include/x86_64-linux-gnu/bits/time.h \
IniReader.dep: /usr/include/x86_64-linux-gnu/bits/timex.h \
IniReader.dep: /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
IniReader.dep: /usr/include/x86_64-linux-gnu/bits/setjmp.h \
IniReader.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/atomic_word.h \
IniReader.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++allocator.h \
IniReader.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_base.h \
IniReader.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_inline.h \
IniReader.dep: /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
IniReader.dep: /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
IniReader.dep: /usr/include/x86_64-linux-gnu/bits/stdio.h \
IniReader.dep: /usr/include/x86_64-linux-gnu/bits/stdio2.h \
IniReader.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/basic_file.h \
IniReader.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++io.h \
IniReader.dep: /usr/include/stdlib.h /usr/include/x86_64-linux-gnu/bits/waitflags.h \
IniReader.dep: /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
IniReader.dep: /usr/include/x86_64-linux-gnu/sys/types.h \
IniReader.dep: /usr/include/x86_64-linux-gnu/sys/select.h \
IniReader.dep: /usr/include/x86_64-linux-gnu/bits/select.h \
IniReader.dep: /usr/include/x86_64-linux-gnu/bits/sigset.h \
IniReader.dep: /usr/include/x86_64-linux-gnu/bits/select2.h \
IniReader.dep: /usr/include/x86_64-linux-gnu/sys/sysmacros.h /usr/include/alloca.h \
IniReader.dep: /usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h \
IniReader.dep: /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
IniReader.dep: /usr/include/x86_64-linux-gnu/bits/stdlib.h \
IniReader.dep: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdint.h /usr/include/stdint.h \
IniReader.deppo:IniReader.po: IniReader.cpp /usr/include/stdc-predef.h IniReader.h \
IniReader.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++config.h \
IniReader.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/os_defines.h \
IniReader.deppo: /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
IniReader.deppo: /usr/include/x86_64-linux-gnu/bits/wordsize.h \
IniReader.deppo: /usr/include/x86_64-linux-gnu/gnu/stubs.h \
IniReader.deppo: /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
IniReader.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/cpu_defines.h \
IniReader.deppo: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdarg.h \
IniReader.deppo: /usr/include/x86_64-linux-gnu/bits/wchar.h \
IniReader.deppo: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h \
IniReader.deppo: /usr/include/xlocale.h /usr/include/x86_64-linux-gnu/bits/wchar2.h \
IniReader.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++locale.h \
IniReader.deppo: /usr/include/x86_64-linux-gnu/bits/locale.h /usr/include/c++/4.8/cctype \
IniReader.deppo: /usr/include/ctype.h /usr/include/x86_64-linux-gnu/bits/types.h \
IniReader.deppo: /usr/include/x86_64-linux-gnu/bits/typesizes.h /usr/include/endian.h \
IniReader.deppo: /usr/include/x86_64-linux-gnu/bits/endian.h \
IniReader.deppo: /usr/include/x86_64-linux-gnu/bits/byteswap.h \
IniReader.deppo: /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
IniReader.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr.h \
IniReader.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr-default.h \
IniReader.deppo: /usr/include/x86_64-linux-gnu/bits/sched.h \
IniReader.deppo: /usr/include/x86_64-linux-gnu/bits/time.h \
IniReader.deppo: /usr/include/x86_64-linux-gnu/bits/timex.h \
IniReader.deppo: /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
IniReader.deppo: /usr/include/x86_64-linux-gnu/bits/setjmp.h \
IniReader.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/atomic_word.h \
IniReader.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++allocator.h \
IniReader.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_base.h \
IniReader.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_inline.h \
IniReader.deppo: /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
IniReader.deppo: /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
IniReader.deppo: /usr/include/x86_64-linux-gnu/bits/stdio.h \
IniReader.deppo: /usr/include/x86_64-linux-gnu/bits/stdio2.h \
IniReader.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/basic_file.h \
IniReader.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++io.h \
IniReader.deppo: /usr/include/stdlib.h /usr/include/x86_64-linux-gnu/bits/waitflags.h \
IniReader.deppo: /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
IniReader.deppo: /usr/include/x86_64-linux-gnu/sys/types.h \
IniReader.deppo: /usr/include/x86_64-linux-gnu/sys/select.h \
IniReader.deppo: /usr/include/x86_64-linux-gnu/bits/select.h \
IniReader.deppo: /usr/include/x86_64-linux-gnu/bits/sigset.h \
IniReader.deppo: /usr/include/x86_64-linux-gnu/bits/select2.h \
IniReader.deppo: /usr/include/x86_64-linux-gnu/sys/sysmacros.h /usr/include/alloca.h \
IniReader.deppo: /usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h \
IniReader.deppo: /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
IniReader.deppo: /usr/include/x86_64-linux-gnu/bits/stdlib.h \
IniReader.deppo: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdint.h /usr/include/stdint.h \
IniReader.h:*  Copyright (c) 2010-2011, Elliott Cooper-Balis
Binary file IniReader.o matches
Binary file IniReader.po matches
Binary file libdramsim.so matches
log.log:      -Rank   0 : 
log.log:        -Reads  : 0 (0 bytes)
log.log:        -Writes : 0 (0 bytes)
log.log:        -Bandwidth / Latency  (Bank 0): 0.000 GB/s		-nan ns
log.log:        -Bandwidth / Latency  (Bank 1): 0.000 GB/s		-nan ns
log.log:        -Bandwidth / Latency  (Bank 2): 0.000 GB/s		-nan ns
log.log:        -Bandwidth / Latency  (Bank 3): 0.000 GB/s		-nan ns
log.log:        -Bandwidth / Latency  (Bank 4): 0.000 GB/s		-nan ns
log.log:        -Bandwidth / Latency  (Bank 5): 0.000 GB/s		-nan ns
log.log:        -Bandwidth / Latency  (Bank 6): 0.000 GB/s		-nan ns
log.log:        -Bandwidth / Latency  (Bank 7): 0.000 GB/s		-nan ns
log.log:     -Background (watts)     : 0.000
log.log:     -Act/Pre    (watts)     : 0.000
log.log:     -Burst      (watts)     : 0.000
log.log:     -Refresh    (watts)     : 0.000
log.log:== New Transaction - Mapping Address [0x18adb00] (Write)
log.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x18adb00] r[0] b[4] row[197] col[109]
log.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x18adb00] r[0] b[4] row[197] col[109]
log.log:== New Transaction - Mapping Address [0x18adc00] (Write)
log.log: -- MC Issuing On Command Bus : BP [WRITE] pa[0x18adb00] r[0] b[4] row[197] col[109]
log.log:== New Transaction - Mapping Address [0x18adc00] (Read)
log.log: -- R0 Receiving On Bus    : BP [WRITE] pa[0x18adb00] r[0] b[4] row[197] col[109]
log.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x18adc00] r[0] b[0] row[197] col[110]
log.log:== New Transaction - Mapping Address [0x18adb00] (Read)
log.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x18adc00] r[0] b[0] row[197] col[110]
log.log:== New Transaction - Mapping Address [0x18adbc0] (Read)
log.log:== New Transaction - Mapping Address [0x18adb00] (Read)
log.log:== New Transaction - Mapping Address [0x18adc00] (Read)
log.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x18adbc0] r[0] b[7] row[197] col[109]
log.log:== New Transaction - Mapping Address [0x18adb00] (Read)
log.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x18adbc0] r[0] b[7] row[197] col[109]
log.log:== New Transaction - Mapping Address [0x18adbc0] (Read)
log.log:== New Transaction - Mapping Address [0x18adb00] (Read)
log.log:== New Transaction - Mapping Address [0x18adb00] (Write)
log.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x18adb00] r[0] b[4] row[197] col[109] data[0]=NO DATA
log.log:== New Transaction - Mapping Address [0x18adc00] (Write)
log.log:== New Transaction - Mapping Address [0x18adb00] (Write)
log.log: -- MC Issuing On Command Bus : BP [WRITE] pa[0x18adc00] r[0] b[0] row[197] col[110]
log.log:== New Transaction - Mapping Address [0x18adbc0] (Write)
log.log: -- R0 Receiving On Bus    : BP [WRITE] pa[0x18adc00] r[0] b[0] row[197] col[110]
log.log:== New Transaction - Mapping Address [0x18adc00] (Read)
log.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x18adb00] r[0] b[4] row[197] col[109] data[0]=NO DATA
log.log:== New Transaction - Mapping Address [0x18adb00] (Read)
log.log:== New Transaction - Mapping Address [0x18adbc0] (Read)
log.log:== New Transaction - Mapping Address [0x18adb00] (Read)
log.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x18adc00] r[0] b[0] row[197] col[110] data[0]=NO DATA
log.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x18adc00] r[0] b[0] row[197] col[110] data[0]=NO DATA
log.log: -- MC Issuing On Command Bus : BP [READ] pa[0x18adc00] r[0] b[0] row[197] col[110]
log.log:== New Transaction - Mapping Address [0x18adc00] (Read)
log.log: -- R0 Receiving On Bus    : BP [READ] pa[0x18adc00] r[0] b[0] row[197] col[110]
log.log: -- MC Issuing On Command Bus : BP [READ] pa[0x18adb00] r[0] b[4] row[197] col[109]
log.log:== New Transaction - Mapping Address [0x18adb00] (Read)
log.log: -- R0 Receiving On Bus    : BP [READ] pa[0x18adb00] r[0] b[4] row[197] col[109]
log.log: -- MC Issuing On Command Bus : BP [READ] pa[0x18adbc0] r[0] b[7] row[197] col[109]
log.log:== New Transaction - Mapping Address [0x18adbc0] (Read)
log.log: -- R0 Receiving On Bus    : BP [READ] pa[0x18adbc0] r[0] b[7] row[197] col[109]
log.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x18adc00] r[0] b[0] row[197] col[110] data[0]=NO DATA
log.log: -- MC Issuing On Command Bus : BP [READ] pa[0x18adb00] r[0] b[4] row[197] col[109]
log.log:== New Transaction - Mapping Address [0x18adb00] (Read)
log.log: -- R0 Receiving On Bus    : BP [READ] pa[0x18adb00] r[0] b[4] row[197] col[109]
log.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x18adc00] r[0] b[0] row[197] col[110] data[0]=NO DATA
log.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x18adb00] r[0] b[4] row[197] col[109] data[0]=NO DATA
log.log: -- MC Issuing to CPU bus : T [Data] [0x18adc00] [0]
log.log: -- MC Issuing On Command Bus : BP [READ] pa[0x18adc00] r[0] b[0] row[197] col[110]
log.log:== New Transaction - Mapping Address [0x18adb00] (Write)
log.log: -- R0 Receiving On Bus    : BP [READ] pa[0x18adc00] r[0] b[0] row[197] col[110]
log.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x18adb00] r[0] b[4] row[197] col[109] data[0]=NO DATA
log.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x18adbc0] r[0] b[7] row[197] col[109] data[0]=NO DATA
log.log: -- MC Issuing to CPU bus : T [Data] [0x18adb00] [0]
log.log: -- MC Issuing On Command Bus : BP [READ] pa[0x18adb00] r[0] b[4] row[197] col[109]
log.log:== New Transaction - Mapping Address [0x18adc00] (Write)
log.log: -- R0 Receiving On Bus    : BP [READ] pa[0x18adb00] r[0] b[4] row[197] col[109]
log.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x18adbc0] r[0] b[7] row[197] col[109] data[0]=NO DATA
log.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x18adb00] r[0] b[4] row[197] col[109] data[0]=NO DATA
log.log: -- MC Issuing to CPU bus : T [Data] [0x18adbc0] [0]
log.log: -- MC Issuing On Command Bus : BP [READ] pa[0x18adbc0] r[0] b[7] row[197] col[109]
log.log:== New Transaction - Mapping Address [0x18adb00] (Write)
log.log: -- R0 Receiving On Bus    : BP [READ] pa[0x18adbc0] r[0] b[7] row[197] col[109]
log.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x18adb00] r[0] b[4] row[197] col[109] data[0]=NO DATA
log.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x18adc00] r[0] b[0] row[197] col[110] data[0]=NO DATA
log.log: -- MC Issuing to CPU bus : T [Data] [0x18adb00] [0]
log.log: -- MC Issuing On Command Bus : BP [READ] pa[0x18adb00] r[0] b[4] row[197] col[109]
log.log:== New Transaction - Mapping Address [0x18adbc0] (Write)
log.log: -- R0 Receiving On Bus    : BP [READ] pa[0x18adb00] r[0] b[4] row[197] col[109]
log.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x18adc00] r[0] b[0] row[197] col[110] data[0]=NO DATA
log.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x18adb00] r[0] b[4] row[197] col[109] data[0]=NO DATA
log.log: -- MC Issuing to CPU bus : T [Data] [0x18adc00] [0]
log.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[4] row[0] col[0]
log.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[4] row[0] col[0]
log.log: -- MC Issuing On Command Bus : BP [WRITE] pa[0x18adc00] r[0] b[0] row[197] col[110]
log.log:== New Transaction - Mapping Address [0x18adc00] (Read)
log.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x18adb00] r[0] b[4] row[197] col[109] data[0]=NO DATA
log.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x18adbc0] r[0] b[7] row[197] col[109] data[0]=NO DATA
log.log: -- R0 Receiving On Bus    : BP [WRITE] pa[0x18adc00] r[0] b[0] row[197] col[110]
log.log: -- MC Issuing to CPU bus : T [Data] [0x18adb00] [0]
log.log: -- MC Issuing On Command Bus : BP [WRITE] pa[0x18adbc0] r[0] b[7] row[197] col[109]
log.log:== New Transaction - Mapping Address [0x18adb00] (Read)
log.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x18adbc0] r[0] b[7] row[197] col[109] data[0]=NO DATA
log.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x18adb00] r[0] b[4] row[197] col[109] data[0]=NO DATA
log.log: -- R0 Receiving On Bus    : BP [WRITE] pa[0x18adbc0] r[0] b[7] row[197] col[109]
log.log: -- MC Issuing to CPU bus : T [Data] [0x18adbc0] [0]
log.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x18adb00] r[0] b[4] row[197] col[109] data[0]=NO DATA
log.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x18adc00] r[0] b[0] row[197] col[110] data[0]=NO DATA
log.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x18adb00] r[0] b[4] row[197] col[109]
log.log: -- MC Issuing to CPU bus : T [Data] [0x18adb00] [0]
log.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x18adb00] r[0] b[4] row[197] col[109]
log.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x18adc00] r[0] b[0] row[197] col[110] data[0]=NO DATA
log.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x18adbc0] r[0] b[7] row[197] col[109] data[0]=NO DATA
log.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x18adbc0] r[0] b[7] row[197] col[109] data[0]=NO DATA
log.log: -- MC Issuing On Command Bus : BP [WRITE] pa[0x18adb00] r[0] b[4] row[197] col[109]
log.log:== New Transaction - Mapping Address [0x18adbc0] (Read)
log.log: -- R0 Receiving On Bus    : BP [WRITE] pa[0x18adb00] r[0] b[4] row[197] col[109]
log.log: -- MC Issuing On Command Bus : BP [WRITE] pa[0x18adb00] r[0] b[4] row[197] col[109]
log.log:== New Transaction - Mapping Address [0x18adb00] (Read)
log.log: -- R0 Receiving On Bus    : BP [WRITE] pa[0x18adb00] r[0] b[4] row[197] col[109]
log.log:      -Rank   0 : 
log.log:        -Reads  : 8 (512 bytes)
log.log:        -Writes : 4 (256 bytes)
log.log:        -Bandwidth / Latency  (Bank 0): 1.589 GB/s		75.000 ns
log.log:        -Bandwidth / Latency  (Bank 1): 0.000 GB/s		-nan ns
log.log:        -Bandwidth / Latency  (Bank 2): 0.000 GB/s		-nan ns
log.log:        -Bandwidth / Latency  (Bank 3): 0.000 GB/s		-nan ns
log.log:        -Bandwidth / Latency  (Bank 4): 1.987 GB/s		84.000 ns
log.log:        -Bandwidth / Latency  (Bank 5): 0.000 GB/s		-nan ns
log.log:        -Bandwidth / Latency  (Bank 6): 0.000 GB/s		-nan ns
log.log:        -Bandwidth / Latency  (Bank 7): 1.192 GB/s		84.000 ns
log.log:     -Background (watts)     : 2.155
log.log:     -Act/Pre    (watts)     : 0.518
log.log:     -Burst      (watts)     : 2.026
log.log:     -Refresh    (watts)     : 0.000
log.log: ---  Latency list (3)
log.log:       [40-49] : 2
log.log:       [50-59] : 4
log.log:       [60-69] : 2
Makefile:CXXFLAGS=-DNO_STORAGE -Wall -DDEBUG_BUILD 
Makefile:#CXXFLAGS=-Wall -DDEBUG_BUILD 
Makefile:OPTFLAGS=-O3 
Makefile:OPTFLAGS= -O0 -g
Makefile:LIB_SRC := $(filter-out TraceBasedSim.cpp,$(SRC))
Makefile:#build portable objects (i.e. with -fPIC)
Makefile:	$(CXX) $(CXXFLAGS) -o $@ $^ 
Makefile:	g++ -g -shared -Wl,-soname,$@ -o $@ $^
Makefile:	g++ -dynamiclib -o $@ $^
Makefile:-include $(OBJ:.o=.dep)
Makefile:-include $(POBJ:.po=.deppo)
Makefile:# build dependency list via gcc -M and save to a .dep file
Makefile:	@$(CXX) -M $(CXXFLAGS) $< > $@
Makefile:	@$(CXX) -M $(CXXFLAGS) -MT"$*.po" $< > $@
Makefile:	g++ $(CXXFLAGS) -o $@ -c $<
Makefile:	g++ $(CXXFLAGS) -DLOG_OUTPUT -fPIC -o $@ -c $<
Makefile:	-rm -f $(REBUILDABLES) *.dep *.deppo
MemoryController.cpp:*  Copyright (c) 2010-2011, Elliott Cooper-Balis
MemoryController.cpp:	if (bpacket->busPacketType != DATA)
MemoryController.cpp:		ERROR("== Error - Memory Controller received a non-DATA bus packet from rank");
MemoryController.cpp:		bpacket->print();
MemoryController.cpp:		PRINTN(" -- MC Receiving From Data Bus : ");
MemoryController.cpp:		bpacket->print();
MemoryController.cpp:	returnTransaction.push_back(new Transaction(RETURN_DATA, bpacket->physicalAddress, bpacket->data));
MemoryController.cpp:	totalReadsPerBank[SEQUENTIAL(bpacket->rank,bpacket->bank)]++;
MemoryController.cpp:	if (parentMemorySystem->ReturnReadData!=NULL)
MemoryController.cpp:		(*parentMemorySystem->ReturnReadData)(parentMemorySystem->systemID, trans->address, currentClockCycle);
MemoryController.cpp:	this->ranks = ranks;
MemoryController.cpp:	//PRINT(" ------------------------- [" << currentClockCycle << "] -------------------------");
MemoryController.cpp:				bankStates[i][j].stateChangeCountdown--;
MemoryController.cpp:		cmdCyclesLeft--;
MemoryController.cpp:			(*ranks)[outgoingCmdPacket->rank]->receiveFromBus(outgoingCmdPacket);
MemoryController.cpp:		dataCyclesLeft--;
MemoryController.cpp:			if (parentMemorySystem->WriteDataDone!=NULL)
MemoryController.cpp:				(*parentMemorySystem->WriteDataDone)(parentMemorySystem->systemID,outgoingDataPacket->physicalAddress, currentClockCycle);
MemoryController.cpp:			(*ranks)[outgoingDataPacket->rank]->receiveFromBus(outgoingDataPacket);
MemoryController.cpp:			writeDataCountdown[i]--;
MemoryController.cpp:				PRINTN(" -- MC Issuing On Data Bus    : ");
MemoryController.cpp:				writeDataToSend[0]->print();
MemoryController.cpp:				ERROR("== Error - Data Bus Collision");
MemoryController.cpp:				exit(-1);
MemoryController.cpp:			totalWritesPerBank[SEQUENTIAL(writeDataToSend[0]->rank,writeDataToSend[0]->bank)]++;
MemoryController.cpp:		(*ranks)[refreshRank]->refreshWaiting = true;
MemoryController.cpp:		(*ranks)[refreshRank]->refreshWaiting = true;
MemoryController.cpp:		if (poppedBusPacket->busPacketType == WRITE || poppedBusPacket->busPacketType == WRITE_P)
MemoryController.cpp:			writeDataToSend.push_back(new BusPacket(DATA, poppedBusPacket->physicalAddress, poppedBusPacket->column,
MemoryController.cpp:			                                    poppedBusPacket->row, poppedBusPacket->rank, poppedBusPacket->bank,
MemoryController.cpp:			                                    poppedBusPacket->data, dramsim_log));
MemoryController.cpp:		unsigned rank = poppedBusPacket->rank;
MemoryController.cpp:		unsigned bank = poppedBusPacket->bank;
MemoryController.cpp:		switch (poppedBusPacket->busPacketType)
MemoryController.cpp:				burstEnergy[rank] += (IDD4R - IDD3N) * BL/2 * NUM_DEVICES;
MemoryController.cpp:				if (poppedBusPacket->busPacketType == READ_P) 
MemoryController.cpp:				else if (poppedBusPacket->busPacketType == READ)
MemoryController.cpp:						if (i!=poppedBusPacket->rank)
MemoryController.cpp:				if (poppedBusPacket->busPacketType == READ_P)
MemoryController.cpp:					//  auto-precharge associated with this command
MemoryController.cpp:				if (poppedBusPacket->busPacketType == WRITE_P) 
MemoryController.cpp:				else if (poppedBusPacket->busPacketType == WRITE)
MemoryController.cpp:				burstEnergy[rank] += (IDD4W - IDD3N) * BL/2 * NUM_DEVICES;
MemoryController.cpp:						if (i!=poppedBusPacket->rank)
MemoryController.cpp:				//  auto-precharge associated with this command
MemoryController.cpp:				if (poppedBusPacket->busPacketType == WRITE_P)
MemoryController.cpp:				actpreEnergy[rank] += ((IDD0 * tRC) - ((IDD3N * tRAS) + (IDD2N * (tRC - tRAS)))) * NUM_DEVICES;
MemoryController.cpp:				bankStates[rank][bank].openRowAddress = poppedBusPacket->column;
MemoryController.cpp:				//if we are using posted-CAS, the next column access can be sooner than normal operation
MemoryController.cpp:				bankStates[rank][bank].nextRead = max(currentClockCycle + (tRCD-AL), bankStates[rank][bank].nextRead);
MemoryController.cpp:				bankStates[rank][bank].nextWrite = max(currentClockCycle + (tRCD-AL), bankStates[rank][bank].nextWrite);
MemoryController.cpp:					if (i!=poppedBusPacket->bank)
MemoryController.cpp:				refreshEnergy[rank] += (IDD5 - IDD3N) * tRFC * NUM_DEVICES;
MemoryController.cpp:				ERROR("== Error - Popped a command we shouldn't have of type : " << poppedBusPacket->busPacketType);
MemoryController.cpp:			PRINTN(" -- MC Issuing On Command Bus : ");
MemoryController.cpp:			poppedBusPacket->print();
MemoryController.cpp:			ERROR("== Error - Command Bus Collision");
MemoryController.cpp:			exit(-1);
MemoryController.cpp:		addressMapping(transaction->address, newTransactionChan, newTransactionRank, newTransactionBank, newTransactionRow, newTransactionColumn);
MemoryController.cpp:				PRINTN("== New Transaction - Mapping Address [0x" << hex << transaction->address << dec << "]");
MemoryController.cpp:				if (transaction->transactionType == DATA_READ) 
MemoryController.cpp:			BusPacket *ACTcommand = new BusPacket(ACTIVATE, transaction->address,
MemoryController.cpp:			BusPacketType bpType = transaction->getBusPacketType();
MemoryController.cpp:			BusPacket *command = new BusPacket(bpType, transaction->address,
MemoryController.cpp:					newTransactionBank, transaction->data, dramsim_log);
MemoryController.cpp:			if (transaction->transactionType == DATA_READ)
MemoryController.cpp:			/* only allow one transaction to be scheduled per cycle -- this should
MemoryController.cpp:			//PRINT( "== Warning - No room in command queue" << endl;
MemoryController.cpp:	//  this is done on a per-rank basis, since power characterization is done per device (not per bank)
MemoryController.cpp:			if (commandQueue.isEmpty(i) && !(*ranks)[i]->refreshWaiting)
MemoryController.cpp:					(*ranks)[i]->powerDown();
MemoryController.cpp:				(*ranks)[i]->powerUp();
MemoryController.cpp:			//if we're in power-down mode, use the correct current
MemoryController.cpp:			PRINTN(" -- MC Issuing to CPU bus : " << *returnTransaction[0]);
MemoryController.cpp:			if (pendingReadTransactions[i]->address == returnTransaction[0]->address)
MemoryController.cpp:				//if(currentClockCycle - pendingReadTransactions[i]->timeAdded > 2000)
MemoryController.cpp:				//		pendingReadTransactions[i]->print();
MemoryController.cpp:				addressMapping(returnTransaction[0]->address,chan,rank,bank,row,col);
MemoryController.cpp:				insertHistogram(currentClockCycle-pendingReadTransactions[i]->timeAdded,rank,bank);
MemoryController.cpp:			ERROR("Can't find a matching transaction for 0x"<<hex<<returnTransaction[0]->address<<dec);
MemoryController.cpp:		refreshCountdown[i]--;
MemoryController.cpp:		trans->timeAdded = currentClockCycle;
MemoryController.cpp:	unsigned myChannel = parentMemorySystem->systemID;
MemoryController.cpp:	double secondsThisEpoch = (double)cyclesElapsed * tCK * 1E-9;
MemoryController.cpp:	PRINT( " ============== Printing Statistics [id:"<<parentMemorySystem->systemID<<"]==============" );
MemoryController.cpp:		PRINT( "      -Rank   "<<r<<" : ");
MemoryController.cpp:		PRINTN( "        -Reads  : " << totalReadsPerRank[r]);
MemoryController.cpp:		PRINTN( "        -Writes : " << totalWritesPerRank[r]);
MemoryController.cpp:			PRINT( "        -Bandwidth / Latency  (Bank " <<j<<"): " <<bandwidth[SEQUENTIAL(r,j)] << " GB/s\t\t" <<averageLatency[SEQUENTIAL(r,j)] << " ns");
MemoryController.cpp:		if ((*parentMemorySystem->ReportPower)!=NULL)
MemoryController.cpp:			(*parentMemorySystem->ReportPower)(backgroundPower[r],burstPower[r],refreshPower[r],actprePower[r]);
MemoryController.cpp:		PRINT( "     -Background (watts)     : " << backgroundPower[r] );
MemoryController.cpp:		PRINT( "     -Act/Pre    (watts)     : " << actprePower[r] );
MemoryController.cpp:		PRINT( "     -Burst      (watts)     : " << burstPower[r]);
MemoryController.cpp:		PRINT( "     -Refresh    (watts)     : " << refreshPower[r] );
MemoryController.cpp:		PRINT( " ---  Latency list ("<<latencies.size()<<")");
MemoryController.cpp:			PRINT( "       ["<< it->first <<"-"<<it->first+(HISTOGRAM_BIN_SIZE-1)<<"] : "<< it->second );
MemoryController.cpp:				csvOut.getOutputStream() << it->first <<"="<< it->second << endl;
MemoryController.cpp:			PRINT( " --- Grand Total Bank usage list");
MemoryController.cpp:			PRINT( i << "] I've been waiting for "<<currentClockCycle-pendingReadTransactions[i].timeAdded<<endl;
MemoryController.cpp~:*  Copyright (c) 2010-2011, Elliott Cooper-Balis
MemoryController.cpp~:	if (bpacket->busPacketType != DATA)
MemoryController.cpp~:		ERROR("== Error - Memory Controller received a non-DATA bus packet from rank");
MemoryController.cpp~:		bpacket->print();
MemoryController.cpp~:		PRINTN(" -- MC Receiving From Data Bus : ");
MemoryController.cpp~:		bpacket->print();
MemoryController.cpp~:	returnTransaction.push_back(new Transaction(RETURN_DATA, bpacket->physicalAddress, bpacket->data));
MemoryController.cpp~:	totalReadsPerBank[SEQUENTIAL(bpacket->rank,bpacket->bank)]++;
MemoryController.cpp~:	if (parentMemorySystem->ReturnReadData!=NULL)
MemoryController.cpp~:		(*parentMemorySystem->ReturnReadData)(parentMemorySystem->systemID, trans->address, currentClockCycle);
MemoryController.cpp~:	this->ranks = ranks;
MemoryController.cpp~:	//PRINT(" ------------------------- [" << currentClockCycle << "] -------------------------");
MemoryController.cpp~:				bankStates[i][j].stateChangeCountdown--;
MemoryController.cpp~:		cmdCyclesLeft--;
MemoryController.cpp~:			(*ranks)[outgoingCmdPacket->rank]->receiveFromBus(outgoingCmdPacket);
MemoryController.cpp~:		dataCyclesLeft--;
MemoryController.cpp~:			if (parentMemorySystem->WriteDataDone!=NULL)
MemoryController.cpp~:				(*parentMemorySystem->WriteDataDone)(parentMemorySystem->systemID,outgoingDataPacket->physicalAddress, currentClockCycle);
MemoryController.cpp~:			(*ranks)[outgoingDataPacket->rank]->receiveFromBus(outgoingDataPacket);
MemoryController.cpp~:			writeDataCountdown[i]--;
MemoryController.cpp~:				PRINTN(" -- MC Issuing On Data Bus    : ");
MemoryController.cpp~:				writeDataToSend[0]->print();
MemoryController.cpp~:				ERROR("== Error - Data Bus Collision");
MemoryController.cpp~:				exit(-1);
MemoryController.cpp~:			totalWritesPerBank[SEQUENTIAL(writeDataToSend[0]->rank,writeDataToSend[0]->bank)]++;
MemoryController.cpp~:		(*ranks)[refreshRank]->refreshWaiting = true;
MemoryController.cpp~:		(*ranks)[refreshRank]->refreshWaiting = true;
MemoryController.cpp~:		if (poppedBusPacket->busPacketType == WRITE || poppedBusPacket->busPacketType == WRITE_P)
MemoryController.cpp~:			writeDataToSend.push_back(new BusPacket(DATA, poppedBusPacket->physicalAddress, poppedBusPacket->column,
MemoryController.cpp~:			                                    poppedBusPacket->row, poppedBusPacket->rank, poppedBusPacket->bank,
MemoryController.cpp~:			                                    poppedBusPacket->data, dramsim_log));
MemoryController.cpp~:		unsigned rank = poppedBusPacket->rank;
MemoryController.cpp~:		unsigned bank = poppedBusPacket->bank;
MemoryController.cpp~:		switch (poppedBusPacket->busPacketType)
MemoryController.cpp~:				burstEnergy[rank] += (IDD4R - IDD3N) * BL/2 * NUM_DEVICES;
MemoryController.cpp~:				if (poppedBusPacket->busPacketType == READ_P) 
MemoryController.cpp~:				else if (poppedBusPacket->busPacketType == READ)
MemoryController.cpp~:						if (i!=poppedBusPacket->rank)
MemoryController.cpp~:				if (poppedBusPacket->busPacketType == READ_P)
MemoryController.cpp~:					//  auto-precharge associated with this command
MemoryController.cpp~:				if (poppedBusPacket->busPacketType == WRITE_P) 
MemoryController.cpp~:				else if (poppedBusPacket->busPacketType == WRITE)
MemoryController.cpp~:				burstEnergy[rank] += (IDD4W - IDD3N) * BL/2 * NUM_DEVICES;
MemoryController.cpp~:						if (i!=poppedBusPacket->rank)
MemoryController.cpp~:				//  auto-precharge associated with this command
MemoryController.cpp~:				if (poppedBusPacket->busPacketType == WRITE_P)
MemoryController.cpp~:				actpreEnergy[rank] += ((IDD0 * tRC) - ((IDD3N * tRAS) + (IDD2N * (tRC - tRAS)))) * NUM_DEVICES;
MemoryController.cpp~:				bankStates[rank][bank].openRowAddress = poppedBusPacket->row;
MemoryController.cpp~:				//if we are using posted-CAS, the next column access can be sooner than normal operation
MemoryController.cpp~:				bankStates[rank][bank].nextRead = max(currentClockCycle + (tRCD-AL), bankStates[rank][bank].nextRead);
MemoryController.cpp~:				bankStates[rank][bank].nextWrite = max(currentClockCycle + (tRCD-AL), bankStates[rank][bank].nextWrite);
MemoryController.cpp~:					if (i!=poppedBusPacket->bank)
MemoryController.cpp~:				refreshEnergy[rank] += (IDD5 - IDD3N) * tRFC * NUM_DEVICES;
MemoryController.cpp~:				ERROR("== Error - Popped a command we shouldn't have of type : " << poppedBusPacket->busPacketType);
MemoryController.cpp~:			PRINTN(" -- MC Issuing On Command Bus : ");
MemoryController.cpp~:			poppedBusPacket->print();
MemoryController.cpp~:			ERROR("== Error - Command Bus Collision");
MemoryController.cpp~:			exit(-1);
MemoryController.cpp~:		addressMapping(transaction->address, newTransactionChan, newTransactionRank, newTransactionBank, newTransactionRow, newTransactionColumn);
MemoryController.cpp~:				PRINTN("== New Transaction - Mapping Address [0x" << hex << transaction->address << dec << "]");
MemoryController.cpp~:				if (transaction->transactionType == DATA_READ) 
MemoryController.cpp~:			BusPacket *ACTcommand = new BusPacket(ACTIVATE, transaction->address,
MemoryController.cpp~:			BusPacketType bpType = transaction->getBusPacketType();
MemoryController.cpp~:			BusPacket *command = new BusPacket(bpType, transaction->address,
MemoryController.cpp~:					newTransactionBank, transaction->data, dramsim_log);
MemoryController.cpp~:			if (transaction->transactionType == DATA_READ)
MemoryController.cpp~:			/* only allow one transaction to be scheduled per cycle -- this should
MemoryController.cpp~:			//PRINT( "== Warning - No room in command queue" << endl;
MemoryController.cpp~:	//  this is done on a per-rank basis, since power characterization is done per device (not per bank)
MemoryController.cpp~:			if (commandQueue.isEmpty(i) && !(*ranks)[i]->refreshWaiting)
MemoryController.cpp~:					(*ranks)[i]->powerDown();
MemoryController.cpp~:				(*ranks)[i]->powerUp();
MemoryController.cpp~:			//if we're in power-down mode, use the correct current
MemoryController.cpp~:			PRINTN(" -- MC Issuing to CPU bus : " << *returnTransaction[0]);
MemoryController.cpp~:			if (pendingReadTransactions[i]->address == returnTransaction[0]->address)
MemoryController.cpp~:				//if(currentClockCycle - pendingReadTransactions[i]->timeAdded > 2000)
MemoryController.cpp~:				//		pendingReadTransactions[i]->print();
MemoryController.cpp~:				addressMapping(returnTransaction[0]->address,chan,rank,bank,row,col);
MemoryController.cpp~:				insertHistogram(currentClockCycle-pendingReadTransactions[i]->timeAdded,rank,bank);
MemoryController.cpp~:			ERROR("Can't find a matching transaction for 0x"<<hex<<returnTransaction[0]->address<<dec);
MemoryController.cpp~:		refreshCountdown[i]--;
MemoryController.cpp~:		trans->timeAdded = currentClockCycle;
MemoryController.cpp~:	unsigned myChannel = parentMemorySystem->systemID;
MemoryController.cpp~:	double secondsThisEpoch = (double)cyclesElapsed * tCK * 1E-9;
MemoryController.cpp~:	PRINT( " ============== Printing Statistics [id:"<<parentMemorySystem->systemID<<"]==============" );
MemoryController.cpp~:		PRINT( "      -Rank   "<<r<<" : ");
MemoryController.cpp~:		PRINTN( "        -Reads  : " << totalReadsPerRank[r]);
MemoryController.cpp~:		PRINTN( "        -Writes : " << totalWritesPerRank[r]);
MemoryController.cpp~:			PRINT( "        -Bandwidth / Latency  (Bank " <<j<<"): " <<bandwidth[SEQUENTIAL(r,j)] << " GB/s\t\t" <<averageLatency[SEQUENTIAL(r,j)] << " ns");
MemoryController.cpp~:		if ((*parentMemorySystem->ReportPower)!=NULL)
MemoryController.cpp~:			(*parentMemorySystem->ReportPower)(backgroundPower[r],burstPower[r],refreshPower[r],actprePower[r]);
MemoryController.cpp~:		PRINT( "     -Background (watts)     : " << backgroundPower[r] );
MemoryController.cpp~:		PRINT( "     -Act/Pre    (watts)     : " << actprePower[r] );
MemoryController.cpp~:		PRINT( "     -Burst      (watts)     : " << burstPower[r]);
MemoryController.cpp~:		PRINT( "     -Refresh    (watts)     : " << refreshPower[r] );
MemoryController.cpp~:		PRINT( " ---  Latency list ("<<latencies.size()<<")");
MemoryController.cpp~:			PRINT( "       ["<< it->first <<"-"<<it->first+(HISTOGRAM_BIN_SIZE-1)<<"] : "<< it->second );
MemoryController.cpp~:				csvOut.getOutputStream() << it->first <<"="<< it->second << endl;
MemoryController.cpp~:			PRINT( " --- Grand Total Bank usage list");
MemoryController.cpp~:			PRINT( i << "] I've been waiting for "<<currentClockCycle-pendingReadTransactions[i].timeAdded<<endl;
MemoryController.dep:MemoryController.o: MemoryController.cpp /usr/include/stdc-predef.h \
MemoryController.dep: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdint.h /usr/include/stdint.h \
MemoryController.dep: /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
MemoryController.dep: /usr/include/x86_64-linux-gnu/bits/wordsize.h \
MemoryController.dep: /usr/include/x86_64-linux-gnu/gnu/stubs.h \
MemoryController.dep: /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
MemoryController.dep: /usr/include/x86_64-linux-gnu/bits/wchar.h Transaction.h \
MemoryController.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++config.h \
MemoryController.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/os_defines.h \
MemoryController.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/cpu_defines.h \
MemoryController.dep: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdarg.h \
MemoryController.dep: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h \
MemoryController.dep: /usr/include/xlocale.h /usr/include/x86_64-linux-gnu/bits/wchar2.h \
MemoryController.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++locale.h \
MemoryController.dep: /usr/include/x86_64-linux-gnu/bits/locale.h /usr/include/c++/4.8/cctype \
MemoryController.dep: /usr/include/ctype.h /usr/include/x86_64-linux-gnu/bits/types.h \
MemoryController.dep: /usr/include/x86_64-linux-gnu/bits/typesizes.h /usr/include/endian.h \
MemoryController.dep: /usr/include/x86_64-linux-gnu/bits/endian.h \
MemoryController.dep: /usr/include/x86_64-linux-gnu/bits/byteswap.h \
MemoryController.dep: /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
MemoryController.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr.h \
MemoryController.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr-default.h \
MemoryController.dep: /usr/include/x86_64-linux-gnu/bits/sched.h \
MemoryController.dep: /usr/include/x86_64-linux-gnu/bits/time.h \
MemoryController.dep: /usr/include/x86_64-linux-gnu/bits/timex.h \
MemoryController.dep: /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
MemoryController.dep: /usr/include/x86_64-linux-gnu/bits/setjmp.h \
MemoryController.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/atomic_word.h \
MemoryController.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++allocator.h \
MemoryController.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_base.h \
MemoryController.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_inline.h \
MemoryController.dep: /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
MemoryController.dep: /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
MemoryController.dep: /usr/include/x86_64-linux-gnu/bits/stdio.h \
MemoryController.dep: /usr/include/x86_64-linux-gnu/bits/stdio2.h \
MemoryController.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/basic_file.h \
MemoryController.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++io.h \
MemoryController.dep: /usr/include/stdlib.h /usr/include/x86_64-linux-gnu/bits/waitflags.h \
MemoryController.dep: /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
MemoryController.dep: /usr/include/x86_64-linux-gnu/sys/types.h \
MemoryController.dep: /usr/include/x86_64-linux-gnu/sys/select.h \
MemoryController.dep: /usr/include/x86_64-linux-gnu/bits/select.h \
MemoryController.dep: /usr/include/x86_64-linux-gnu/bits/sigset.h \
MemoryController.dep: /usr/include/x86_64-linux-gnu/bits/select2.h \
MemoryController.dep: /usr/include/x86_64-linux-gnu/sys/sysmacros.h /usr/include/alloca.h \
MemoryController.dep: /usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h \
MemoryController.dep: /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
MemoryController.dep: /usr/include/x86_64-linux-gnu/bits/stdlib.h PrintMacros.h BusPacket.h \
MemoryController.dep: /usr/include/string.h /usr/include/x86_64-linux-gnu/bits/string3.h \
MemoryController.deppo:MemoryController.po: MemoryController.cpp /usr/include/stdc-predef.h \
MemoryController.deppo: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdint.h /usr/include/stdint.h \
MemoryController.deppo: /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
MemoryController.deppo: /usr/include/x86_64-linux-gnu/bits/wordsize.h \
MemoryController.deppo: /usr/include/x86_64-linux-gnu/gnu/stubs.h \
MemoryController.deppo: /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
MemoryController.deppo: /usr/include/x86_64-linux-gnu/bits/wchar.h Transaction.h \
MemoryController.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++config.h \
MemoryController.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/os_defines.h \
MemoryController.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/cpu_defines.h \
MemoryController.deppo: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdarg.h \
MemoryController.deppo: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h \
MemoryController.deppo: /usr/include/xlocale.h /usr/include/x86_64-linux-gnu/bits/wchar2.h \
MemoryController.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++locale.h \
MemoryController.deppo: /usr/include/x86_64-linux-gnu/bits/locale.h /usr/include/c++/4.8/cctype \
MemoryController.deppo: /usr/include/ctype.h /usr/include/x86_64-linux-gnu/bits/types.h \
MemoryController.deppo: /usr/include/x86_64-linux-gnu/bits/typesizes.h /usr/include/endian.h \
MemoryController.deppo: /usr/include/x86_64-linux-gnu/bits/endian.h \
MemoryController.deppo: /usr/include/x86_64-linux-gnu/bits/byteswap.h \
MemoryController.deppo: /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
MemoryController.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr.h \
MemoryController.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr-default.h \
MemoryController.deppo: /usr/include/x86_64-linux-gnu/bits/sched.h \
MemoryController.deppo: /usr/include/x86_64-linux-gnu/bits/time.h \
MemoryController.deppo: /usr/include/x86_64-linux-gnu/bits/timex.h \
MemoryController.deppo: /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
MemoryController.deppo: /usr/include/x86_64-linux-gnu/bits/setjmp.h \
MemoryController.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/atomic_word.h \
MemoryController.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++allocator.h \
MemoryController.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_base.h \
MemoryController.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_inline.h \
MemoryController.deppo: /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
MemoryController.deppo: /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
MemoryController.deppo: /usr/include/x86_64-linux-gnu/bits/stdio.h \
MemoryController.deppo: /usr/include/x86_64-linux-gnu/bits/stdio2.h \
MemoryController.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/basic_file.h \
MemoryController.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++io.h \
MemoryController.deppo: /usr/include/stdlib.h /usr/include/x86_64-linux-gnu/bits/waitflags.h \
MemoryController.deppo: /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
MemoryController.deppo: /usr/include/x86_64-linux-gnu/sys/types.h \
MemoryController.deppo: /usr/include/x86_64-linux-gnu/sys/select.h \
MemoryController.deppo: /usr/include/x86_64-linux-gnu/bits/select.h \
MemoryController.deppo: /usr/include/x86_64-linux-gnu/bits/sigset.h \
MemoryController.deppo: /usr/include/x86_64-linux-gnu/bits/select2.h \
MemoryController.deppo: /usr/include/x86_64-linux-gnu/sys/sysmacros.h /usr/include/alloca.h \
MemoryController.deppo: /usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h \
MemoryController.deppo: /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
MemoryController.deppo: /usr/include/x86_64-linux-gnu/bits/stdlib.h PrintMacros.h BusPacket.h \
MemoryController.deppo: /usr/include/string.h /usr/include/x86_64-linux-gnu/bits/string3.h \
MemoryController.h:*  Copyright (c) 2010-2011, Elliott Cooper-Balis
MemoryController.h:	map<unsigned,unsigned> latencies; // latencyValue -> latencyCount
MemoryController.h:	// energy values are per rank -- SST uses these directly, so make these public 
Binary file MemoryController.o matches
Binary file MemoryController.po matches
MemorySystem.cpp:*  Copyright (c) 2010-2011, Elliott Cooper-Balis
MemorySystem.cpp:	So one could compute this in reverse -- compute NUM_DEVICES,
MemorySystem.cpp:		r->setId(i);
MemorySystem.cpp:		r->attachMemoryController(memoryController);
MemorySystem.cpp:		ranks->push_back(r);
MemorySystem.cpp:	memoryController->attachRanks(ranks);
MemorySystem.cpp:	ranks->clear();
MemorySystem.cpp:	return memoryController->WillAcceptTransaction();
MemorySystem.cpp:	if (memoryController->WillAcceptTransaction()) 
MemorySystem.cpp:		return memoryController->addTransaction(trans);
MemorySystem.cpp:	return memoryController->addTransaction(trans);
MemorySystem.cpp:	memoryController->printStats(finalStats);
MemorySystem.cpp:	//PRINT(" ----------------- Memory System Update ------------------");
MemorySystem.cpp:	// NOTE - do not change order
MemorySystem.cpp:		(*ranks)[i]->update();
MemorySystem.cpp:	if (pendingTransactions.size() > 0 && memoryController->WillAcceptTransaction())
MemorySystem.cpp:		memoryController->addTransaction(pendingTransactions.front());
MemorySystem.cpp:	memoryController->update();
MemorySystem.cpp:		(*ranks)[i]->step();
MemorySystem.cpp:	memoryController->step();
MemorySystem.cpp:	this->step();
MemorySystem.dep:MemorySystem.o: MemorySystem.cpp /usr/include/stdc-predef.h \
MemorySystem.dep: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdint.h /usr/include/stdint.h \
MemorySystem.dep: /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
MemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/wordsize.h \
MemorySystem.dep: /usr/include/x86_64-linux-gnu/gnu/stubs.h \
MemorySystem.dep: /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
MemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/wchar.h SystemConfiguration.h \
MemorySystem.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++config.h \
MemorySystem.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/os_defines.h \
MemorySystem.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/cpu_defines.h \
MemorySystem.dep: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdarg.h \
MemorySystem.dep: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h \
MemorySystem.dep: /usr/include/xlocale.h /usr/include/x86_64-linux-gnu/bits/wchar2.h \
MemorySystem.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++locale.h \
MemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/locale.h /usr/include/c++/4.8/cctype \
MemorySystem.dep: /usr/include/ctype.h /usr/include/x86_64-linux-gnu/bits/types.h \
MemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/typesizes.h /usr/include/endian.h \
MemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/endian.h \
MemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/byteswap.h \
MemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
MemorySystem.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr.h \
MemorySystem.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr-default.h \
MemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/sched.h \
MemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/time.h \
MemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/timex.h \
MemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
MemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/setjmp.h \
MemorySystem.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/atomic_word.h \
MemorySystem.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++allocator.h \
MemorySystem.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_base.h \
MemorySystem.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_inline.h \
MemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
MemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
MemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/stdio.h \
MemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/stdio2.h \
MemorySystem.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/basic_file.h \
MemorySystem.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++io.h \
MemorySystem.dep: /usr/include/stdlib.h /usr/include/x86_64-linux-gnu/bits/waitflags.h \
MemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
MemorySystem.dep: /usr/include/x86_64-linux-gnu/sys/types.h \
MemorySystem.dep: /usr/include/x86_64-linux-gnu/sys/select.h \
MemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/select.h \
MemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/sigset.h \
MemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/select2.h \
MemorySystem.dep: /usr/include/x86_64-linux-gnu/sys/sysmacros.h /usr/include/alloca.h \
MemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h \
MemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
MemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/stdlib.h PrintMacros.h \
MemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/string3.h /usr/include/c++/4.8/map \
MemorySystem.dep: /usr/include/unistd.h /usr/include/x86_64-linux-gnu/bits/posix_opt.h \
MemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/environments.h \
MemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/confname.h /usr/include/getopt.h \
MemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/unistd.h
MemorySystem.deppo:MemorySystem.po: MemorySystem.cpp /usr/include/stdc-predef.h \
MemorySystem.deppo: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdint.h /usr/include/stdint.h \
MemorySystem.deppo: /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
MemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/wordsize.h \
MemorySystem.deppo: /usr/include/x86_64-linux-gnu/gnu/stubs.h \
MemorySystem.deppo: /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
MemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/wchar.h SystemConfiguration.h \
MemorySystem.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++config.h \
MemorySystem.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/os_defines.h \
MemorySystem.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/cpu_defines.h \
MemorySystem.deppo: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdarg.h \
MemorySystem.deppo: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h \
MemorySystem.deppo: /usr/include/xlocale.h /usr/include/x86_64-linux-gnu/bits/wchar2.h \
MemorySystem.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++locale.h \
MemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/locale.h /usr/include/c++/4.8/cctype \
MemorySystem.deppo: /usr/include/ctype.h /usr/include/x86_64-linux-gnu/bits/types.h \
MemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/typesizes.h /usr/include/endian.h \
MemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/endian.h \
MemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/byteswap.h \
MemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
MemorySystem.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr.h \
MemorySystem.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr-default.h \
MemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/sched.h \
MemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/time.h \
MemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/timex.h \
MemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
MemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/setjmp.h \
MemorySystem.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/atomic_word.h \
MemorySystem.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++allocator.h \
MemorySystem.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_base.h \
MemorySystem.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_inline.h \
MemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
MemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
MemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/stdio.h \
MemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/stdio2.h \
MemorySystem.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/basic_file.h \
MemorySystem.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++io.h \
MemorySystem.deppo: /usr/include/stdlib.h /usr/include/x86_64-linux-gnu/bits/waitflags.h \
MemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
MemorySystem.deppo: /usr/include/x86_64-linux-gnu/sys/types.h \
MemorySystem.deppo: /usr/include/x86_64-linux-gnu/sys/select.h \
MemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/select.h \
MemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/sigset.h \
MemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/select2.h \
MemorySystem.deppo: /usr/include/x86_64-linux-gnu/sys/sysmacros.h /usr/include/alloca.h \
MemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h \
MemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
MemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/stdlib.h PrintMacros.h \
MemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/string3.h /usr/include/c++/4.8/map \
MemorySystem.deppo: /usr/include/unistd.h /usr/include/x86_64-linux-gnu/bits/posix_opt.h \
MemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/environments.h \
MemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/confname.h /usr/include/getopt.h \
MemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/unistd.h
MemorySystem.h:*  Copyright (c) 2010-2011, Elliott Cooper-Balis
Binary file MemorySystem.o matches
Binary file MemorySystem.po matches
MultiChannelMemorySystem.cpp:*  Copyright (c) 2010-2011, Elliott Cooper-Balis
MultiChannelMemorySystem.cpp:		printf("CC VISFILENAME=%s\n",visFilename->c_str());
MultiChannelMemorySystem.cpp:		exit(-1);
MultiChannelMemorySystem.cpp:	uint64_t dramsimClkFreqHz = (uint64_t)(1.0/(tCK*1e-9));
MultiChannelMemorySystem.cpp: * 	- The .log file if LOG_OUTPUT is set
MultiChannelMemorySystem.cpp: * 	- the .vis file where csv data for each epoch will go
MultiChannelMemorySystem.cpp: * 	- the .tmp file if verification output is enabled
MultiChannelMemorySystem.cpp:			if (deviceIniFilename.substr(deviceIniFilenameLength-4) == ".ini")
MultiChannelMemorySystem.cpp:				deviceName = deviceIniFilename.substr(0,deviceIniFilenameLength-4);
MultiChannelMemorySystem.cpp:				deviceIniFilenameLength -= 4;
MultiChannelMemorySystem.cpp:				deviceName = deviceName.substr(lastSlash+1,deviceIniFilenameLength-lastSlash-1);
MultiChannelMemorySystem.cpp:				traceFilename = traceFilename.substr(lastSlash+1,traceFilename.length()-lastSlash-1);
MultiChannelMemorySystem.cpp:			exit(-1);
MultiChannelMemorySystem.cpp:	//	exit(-1); 
MultiChannelMemorySystem.cpp:			// set permissions dwxr-xr-x on the results directories
MultiChannelMemorySystem.cpp:		(*csvOut) << "ms" <<currentClockCycle * tCK * 1E-6; 
MultiChannelMemorySystem.cpp:			channels[i]->printStats(false); 
MultiChannelMemorySystem.cpp:		csvOut->finalize();
MultiChannelMemorySystem.cpp:		channels[i]->update(); 
MultiChannelMemorySystem.cpp:	unsigned channelNumber = findChannelNumber(trans->address); 
MultiChannelMemorySystem.cpp:	return channels[channelNumber]->addTransaction(trans); 
MultiChannelMemorySystem.cpp:	return channels[channelNumber]->addTransaction(isWrite, addr); 
MultiChannelMemorySystem.cpp:	return channels[chan]->WillAcceptTransaction(); 
MultiChannelMemorySystem.cpp:		if (!channels[c]->WillAcceptTransaction())
MultiChannelMemorySystem.cpp:	(*csvOut) << "ms" <<currentClockCycle * tCK * 1E-6; 
MultiChannelMemorySystem.cpp:		channels[i]->printStats(finalStats); 
MultiChannelMemorySystem.cpp:	csvOut->finalize();
MultiChannelMemorySystem.cpp:		channels[i]->RegisterCallbacks(readDone, writeDone, reportPower); 
MultiChannelMemorySystem.cpp: * Return value: 0 on success, -1 on error
MultiChannelMemorySystem.cpp:		exit(-1);
MultiChannelMemorySystem.cpp:		exit(-1);
MultiChannelMemorySystem.cpp:		exit(-1);
MultiChannelMemorySystem.cpp:		exit(-1);
MultiChannelMemorySystem.dep: /usr/include/stdc-predef.h /usr/include/errno.h /usr/include/features.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/sys/cdefs.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/wordsize.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/gnu/stubs.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/errno.h /usr/include/linux/errno.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/asm/errno.h \
MultiChannelMemorySystem.dep: /usr/include/asm-generic/errno.h /usr/include/asm-generic/errno-base.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++config.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/os_defines.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/cpu_defines.h \
MultiChannelMemorySystem.dep: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdarg.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/wchar.h \
MultiChannelMemorySystem.dep: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h \
MultiChannelMemorySystem.dep: /usr/include/xlocale.h /usr/include/x86_64-linux-gnu/bits/wchar2.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++locale.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/locale.h /usr/include/c++/4.8/cctype \
MultiChannelMemorySystem.dep: /usr/include/ctype.h /usr/include/x86_64-linux-gnu/bits/types.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/typesizes.h /usr/include/endian.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/endian.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/byteswap.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr-default.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/sched.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/time.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/timex.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/setjmp.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/atomic_word.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++allocator.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_base.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_inline.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/waitflags.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/sys/types.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/sys/select.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/select.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/sigset.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/select2.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/sys/sysmacros.h /usr/include/alloca.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/stdlib.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/sys/stat.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/stat.h MultiChannelMemorySystem.h \
MultiChannelMemorySystem.dep: SimulatorObject.h /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdint.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/stdio.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/stdio2.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/basic_file.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++io.h \
MultiChannelMemorySystem.dep: /usr/include/string.h /usr/include/x86_64-linux-gnu/bits/string3.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/huge_val.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/huge_valf.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/huge_vall.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/inf.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/nan.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/mathdef.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/mathcalls.h \
MultiChannelMemorySystem.dep: /usr/include/x86_64-linux-gnu/bits/mathinline.h AddressMapping.h
MultiChannelMemorySystem.deppo: /usr/include/stdc-predef.h /usr/include/errno.h /usr/include/features.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/sys/cdefs.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/wordsize.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/gnu/stubs.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/errno.h /usr/include/linux/errno.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/asm/errno.h \
MultiChannelMemorySystem.deppo: /usr/include/asm-generic/errno.h /usr/include/asm-generic/errno-base.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++config.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/os_defines.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/cpu_defines.h \
MultiChannelMemorySystem.deppo: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdarg.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/wchar.h \
MultiChannelMemorySystem.deppo: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h \
MultiChannelMemorySystem.deppo: /usr/include/xlocale.h /usr/include/x86_64-linux-gnu/bits/wchar2.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++locale.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/locale.h /usr/include/c++/4.8/cctype \
MultiChannelMemorySystem.deppo: /usr/include/ctype.h /usr/include/x86_64-linux-gnu/bits/types.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/typesizes.h /usr/include/endian.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/endian.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/byteswap.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr-default.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/sched.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/time.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/timex.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/setjmp.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/atomic_word.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++allocator.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_base.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_inline.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/waitflags.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/sys/types.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/sys/select.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/select.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/sigset.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/select2.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/sys/sysmacros.h /usr/include/alloca.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/stdlib.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/sys/stat.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/stat.h MultiChannelMemorySystem.h \
MultiChannelMemorySystem.deppo: SimulatorObject.h /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdint.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/stdio.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/stdio2.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/basic_file.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++io.h \
MultiChannelMemorySystem.deppo: /usr/include/string.h /usr/include/x86_64-linux-gnu/bits/string3.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/huge_val.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/huge_valf.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/huge_vall.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/inf.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/nan.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/mathdef.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/mathcalls.h \
MultiChannelMemorySystem.deppo: /usr/include/x86_64-linux-gnu/bits/mathinline.h AddressMapping.h
MultiChannelMemorySystem.h:*  Copyright (c) 2010-2011, Elliott Cooper-Balis
Binary file MultiChannelMemorySystem.o matches
Binary file MultiChannelMemorySystem.po matches
PrintMacros.dep:PrintMacros.o: PrintMacros.cpp /usr/include/stdc-predef.h PrintMacros.h \
PrintMacros.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++config.h \
PrintMacros.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/os_defines.h \
PrintMacros.dep: /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
PrintMacros.dep: /usr/include/x86_64-linux-gnu/bits/wordsize.h \
PrintMacros.dep: /usr/include/x86_64-linux-gnu/gnu/stubs.h \
PrintMacros.dep: /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
PrintMacros.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/cpu_defines.h \
PrintMacros.dep: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdarg.h \
PrintMacros.dep: /usr/include/x86_64-linux-gnu/bits/wchar.h \
PrintMacros.dep: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h \
PrintMacros.dep: /usr/include/xlocale.h /usr/include/x86_64-linux-gnu/bits/wchar2.h \
PrintMacros.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++locale.h \
PrintMacros.dep: /usr/include/x86_64-linux-gnu/bits/locale.h /usr/include/c++/4.8/cctype \
PrintMacros.dep: /usr/include/ctype.h /usr/include/x86_64-linux-gnu/bits/types.h \
PrintMacros.dep: /usr/include/x86_64-linux-gnu/bits/typesizes.h /usr/include/endian.h \
PrintMacros.dep: /usr/include/x86_64-linux-gnu/bits/endian.h \
PrintMacros.dep: /usr/include/x86_64-linux-gnu/bits/byteswap.h \
PrintMacros.dep: /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
PrintMacros.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr.h \
PrintMacros.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr-default.h \
PrintMacros.dep: /usr/include/x86_64-linux-gnu/bits/sched.h \
PrintMacros.dep: /usr/include/x86_64-linux-gnu/bits/time.h \
PrintMacros.dep: /usr/include/x86_64-linux-gnu/bits/timex.h \
PrintMacros.dep: /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
PrintMacros.dep: /usr/include/x86_64-linux-gnu/bits/setjmp.h \
PrintMacros.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/atomic_word.h \
PrintMacros.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++allocator.h \
PrintMacros.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_base.h \
PrintMacros.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_inline.h \
PrintMacros.deppo:PrintMacros.po: PrintMacros.cpp /usr/include/stdc-predef.h PrintMacros.h \
PrintMacros.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++config.h \
PrintMacros.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/os_defines.h \
PrintMacros.deppo: /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
PrintMacros.deppo: /usr/include/x86_64-linux-gnu/bits/wordsize.h \
PrintMacros.deppo: /usr/include/x86_64-linux-gnu/gnu/stubs.h \
PrintMacros.deppo: /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
PrintMacros.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/cpu_defines.h \
PrintMacros.deppo: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdarg.h \
PrintMacros.deppo: /usr/include/x86_64-linux-gnu/bits/wchar.h \
PrintMacros.deppo: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h \
PrintMacros.deppo: /usr/include/xlocale.h /usr/include/x86_64-linux-gnu/bits/wchar2.h \
PrintMacros.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++locale.h \
PrintMacros.deppo: /usr/include/x86_64-linux-gnu/bits/locale.h /usr/include/c++/4.8/cctype \
PrintMacros.deppo: /usr/include/ctype.h /usr/include/x86_64-linux-gnu/bits/types.h \
PrintMacros.deppo: /usr/include/x86_64-linux-gnu/bits/typesizes.h /usr/include/endian.h \
PrintMacros.deppo: /usr/include/x86_64-linux-gnu/bits/endian.h \
PrintMacros.deppo: /usr/include/x86_64-linux-gnu/bits/byteswap.h \
PrintMacros.deppo: /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
PrintMacros.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr.h \
PrintMacros.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr-default.h \
PrintMacros.deppo: /usr/include/x86_64-linux-gnu/bits/sched.h \
PrintMacros.deppo: /usr/include/x86_64-linux-gnu/bits/time.h \
PrintMacros.deppo: /usr/include/x86_64-linux-gnu/bits/timex.h \
PrintMacros.deppo: /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
PrintMacros.deppo: /usr/include/x86_64-linux-gnu/bits/setjmp.h \
PrintMacros.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/atomic_word.h \
PrintMacros.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++allocator.h \
PrintMacros.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_base.h \
PrintMacros.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_inline.h \
PrintMacros.h:*  Copyright (c) 2010-2011, Elliott Cooper-Balis
Binary file PrintMacros.o matches
Binary file PrintMacros.po matches
Rank.cpp:*  Copyright (c) 2010-2011, Elliott Cooper-Balis
Rank.cpp:	id(-1),
Rank.cpp:	this->id = id;
Rank.cpp:	this->memoryController = memoryController;
Rank.cpp:		PRINTN(" -- R" << this->id << " Receiving On Bus    : ");
Rank.cpp:		packet->print();
Rank.cpp:		packet->print(currentClockCycle,false);
Rank.cpp:	switch (packet->busPacketType)
Rank.cpp:		if (bankStates[packet->bank].currentBankState != RowActive ||
Rank.cpp:		        currentClockCycle < bankStates[packet->bank].nextRead ||
Rank.cpp:		        packet->column != bankStates[packet->bank].openRowAddress)
Rank.cpp:			packet->print();
Rank.cpp:			ERROR("== Error - Rank " << id << " received a READ when not allowed");
Rank.cpp:		bankStates[packet->bank].nextPrecharge = max(bankStates[packet->bank].nextPrecharge, currentClockCycle + READ_TO_PRE_DELAY);
Rank.cpp:		banks[packet->bank].read(packet);
Rank.cpp:		packet->busPacketType = DATA;
Rank.cpp:		if (bankStates[packet->bank].currentBankState != RowActive ||
Rank.cpp:		        currentClockCycle < bankStates[packet->bank].nextRead ||
Rank.cpp:		        packet->column != bankStates[packet->bank].openRowAddress)
Rank.cpp:			ERROR("== Error - Rank " << id << " received a READ_P when not allowed");
Rank.cpp:			exit(-1);
Rank.cpp:		bankStates[packet->bank].currentBankState = Idle;
Rank.cpp:		bankStates[packet->bank].nextActivate = max(bankStates[packet->bank].nextActivate, currentClockCycle + READ_AUTOPRE_DELAY);
Rank.cpp:			//will set next read/write for all banks - including current (which shouldnt matter since its now idle)
Rank.cpp:		banks[packet->bank].read(packet);
Rank.cpp:		packet->busPacketType = DATA;
Rank.cpp:		if (bankStates[packet->bank].currentBankState != RowActive ||
Rank.cpp:		        currentClockCycle < bankStates[packet->bank].nextWrite ||
Rank.cpp:		        packet->column != bankStates[packet->bank].openRowAddress)
Rank.cpp:			ERROR("== Error - Rank " << id << " received a WRITE when not allowed");
Rank.cpp:			bankStates[packet->bank].print();
Rank.cpp:		bankStates[packet->bank].nextPrecharge = max(bankStates[packet->bank].nextPrecharge, currentClockCycle + WRITE_TO_PRE_DELAY);
Rank.cpp:		incomingWriteBank = packet->bank;
Rank.cpp:		incomingWriteRow = packet->row;
Rank.cpp:		incomingWriteColumn = packet->column;
Rank.cpp:		if (bankStates[packet->bank].currentBankState != RowActive ||
Rank.cpp:		        currentClockCycle < bankStates[packet->bank].nextWrite ||
Rank.cpp:		        packet->column != bankStates[packet->bank].openRowAddress)
Rank.cpp:			ERROR("== Error - Rank " << id << " received a WRITE_P when not allowed");
Rank.cpp:		bankStates[packet->bank].currentBankState = Idle;
Rank.cpp:		bankStates[packet->bank].nextActivate = max(bankStates[packet->bank].nextActivate, currentClockCycle + WRITE_AUTOPRE_DELAY);
Rank.cpp:		incomingWriteBank = packet->bank;
Rank.cpp:		incomingWriteRow = packet->row;
Rank.cpp:		incomingWriteColumn = packet->column;
Rank.cpp:		if (bankStates[packet->bank].currentBankState != Idle ||
Rank.cpp:		        currentClockCycle < bankStates[packet->bank].nextActivate)
Rank.cpp:			ERROR("== Error - Rank " << id << " received an ACT when not allowed");
Rank.cpp:			packet->print();
Rank.cpp:			bankStates[packet->bank].print();
Rank.cpp:		bankStates[packet->bank].currentBankState = RowActive;
Rank.cpp:		bankStates[packet->bank].nextActivate = currentClockCycle + tRC;
Rank.cpp:		bankStates[packet->bank].openRowAddress = packet->column;
Rank.cpp:		//if AL is greater than one, then posted-cas is enabled - handle accordingly
Rank.cpp:			bankStates[packet->bank].nextWrite = currentClockCycle + (tRCD-AL);
Rank.cpp:			bankStates[packet->bank].nextRead = currentClockCycle + (tRCD-AL);
Rank.cpp:			bankStates[packet->bank].nextWrite = currentClockCycle + (tRCD-AL);
Rank.cpp:			bankStates[packet->bank].nextRead = currentClockCycle + (tRCD-AL);
Rank.cpp:		bankStates[packet->bank].nextPrecharge = currentClockCycle + tRAS;
Rank.cpp:			if (i != packet->bank)
Rank.cpp:		if (bankStates[packet->bank].currentBankState != RowActive ||
Rank.cpp:		        currentClockCycle < bankStates[packet->bank].nextPrecharge)
Rank.cpp:			ERROR("== Error - Rank " << id << " received a PRE when not allowed");
Rank.cpp:		bankStates[packet->bank].currentBankState = Idle;
Rank.cpp:		bankStates[packet->bank].nextActivate = max(bankStates[packet->bank].nextActivate, currentClockCycle + tRP);
Rank.cpp:				ERROR("== Error - Rank " << id << " received a REF when not allowed");
Rank.cpp:		if(packet->bank != incomingWriteBank ||
Rank.cpp:			 packet->row != incomingWriteRow ||
Rank.cpp:			 packet->column != incomingWriteColumn)
Rank.cpp:				cout << "== Error - Rank " << id << " received a DATA packet to the wrong place" << endl;
Rank.cpp:				packet->print();
Rank.cpp:				bankStates[packet->bank].print();
Rank.cpp:		banks[packet->bank].write(packet);
Rank.cpp:		ERROR("== Error - Unknown BusPacketType trying to be sent to Bank");
Rank.cpp:	return this->id;
Rank.cpp:		dataCyclesLeft--;
Rank.cpp:			memoryController->receiveFromBus(outgoingDataPacket);
Rank.cpp:		readReturnCountdown[i]--;
Rank.cpp:			PRINTN(" -- R" << this->id << " Issuing On Data Bus : ");
Rank.cpp:			outgoingDataPacket->print();
Rank.cpp:			ERROR("== Error - Trying to power down rank " << id << " while not all banks are idle");
Rank.cpp:		ERROR("== Error - Trying to power up rank " << id << " while it is not already powered down");
Rank.cpp:			ERROR("== Error - Trying to power up rank " << id << " before we're allowed to");
Rank.cpp~:*  Copyright (c) 2010-2011, Elliott Cooper-Balis
Rank.cpp~:	id(-1),
Rank.cpp~:	this->id = id;
Rank.cpp~:	this->memoryController = memoryController;
Rank.cpp~:		PRINTN(" -- R" << this->id << " Receiving On Bus    : ");
Rank.cpp~:		packet->print();
Rank.cpp~:		packet->print(currentClockCycle,false);
Rank.cpp~:	switch (packet->busPacketType)
Rank.cpp~:		if (bankStates[packet->bank].currentBankState != RowActive ||
Rank.cpp~:		        currentClockCycle < bankStates[packet->bank].nextRead ||
Rank.cpp~:		        packet->row != bankStates[packet->bank].openRowAddress)
Rank.cpp~:			packet->print();
Rank.cpp~:			ERROR("== Error - Rank " << id << " received a READ when not allowed");
Rank.cpp~:		bankStates[packet->bank].nextPrecharge = max(bankStates[packet->bank].nextPrecharge, currentClockCycle + READ_TO_PRE_DELAY);
Rank.cpp~:		banks[packet->bank].read(packet);
Rank.cpp~:		packet->busPacketType = DATA;
Rank.cpp~:		if (bankStates[packet->bank].currentBankState != RowActive ||
Rank.cpp~:		        currentClockCycle < bankStates[packet->bank].nextRead ||
Rank.cpp~:		        packet->row != bankStates[packet->bank].openRowAddress)
Rank.cpp~:			ERROR("== Error - Rank " << id << " received a READ_P when not allowed");
Rank.cpp~:			exit(-1);
Rank.cpp~:		bankStates[packet->bank].currentBankState = Idle;
Rank.cpp~:		bankStates[packet->bank].nextActivate = max(bankStates[packet->bank].nextActivate, currentClockCycle + READ_AUTOPRE_DELAY);
Rank.cpp~:			//will set next read/write for all banks - including current (which shouldnt matter since its now idle)
Rank.cpp~:		banks[packet->bank].read(packet);
Rank.cpp~:		packet->busPacketType = DATA;
Rank.cpp~:		if (bankStates[packet->bank].currentBankState != RowActive ||
Rank.cpp~:		        currentClockCycle < bankStates[packet->bank].nextWrite ||
Rank.cpp~:		        packet->row != bankStates[packet->bank].openRowAddress)
Rank.cpp~:			ERROR("== Error - Rank " << id << " received a WRITE when not allowed");
Rank.cpp~:			bankStates[packet->bank].print();
Rank.cpp~:		bankStates[packet->bank].nextPrecharge = max(bankStates[packet->bank].nextPrecharge, currentClockCycle + WRITE_TO_PRE_DELAY);
Rank.cpp~:		incomingWriteBank = packet->bank;
Rank.cpp~:		incomingWriteRow = packet->row;
Rank.cpp~:		incomingWriteColumn = packet->column;
Rank.cpp~:		if (bankStates[packet->bank].currentBankState != RowActive ||
Rank.cpp~:		        currentClockCycle < bankStates[packet->bank].nextWrite ||
Rank.cpp~:		        packet->row != bankStates[packet->bank].openRowAddress)
Rank.cpp~:			ERROR("== Error - Rank " << id << " received a WRITE_P when not allowed");
Rank.cpp~:		bankStates[packet->bank].currentBankState = Idle;
Rank.cpp~:		bankStates[packet->bank].nextActivate = max(bankStates[packet->bank].nextActivate, currentClockCycle + WRITE_AUTOPRE_DELAY);
Rank.cpp~:		incomingWriteBank = packet->bank;
Rank.cpp~:		incomingWriteRow = packet->row;
Rank.cpp~:		incomingWriteColumn = packet->column;
Rank.cpp~:		if (bankStates[packet->bank].currentBankState != Idle ||
Rank.cpp~:		        currentClockCycle < bankStates[packet->bank].nextActivate)
Rank.cpp~:			ERROR("== Error - Rank " << id << " received an ACT when not allowed");
Rank.cpp~:			packet->print();
Rank.cpp~:			bankStates[packet->bank].print();
Rank.cpp~:		bankStates[packet->bank].currentBankState = RowActive;
Rank.cpp~:		bankStates[packet->bank].nextActivate = currentClockCycle + tRC;
Rank.cpp~:		bankStates[packet->bank].openRowAddress = packet->row;
Rank.cpp~:		//if AL is greater than one, then posted-cas is enabled - handle accordingly
Rank.cpp~:			bankStates[packet->bank].nextWrite = currentClockCycle + (tRCD-AL);
Rank.cpp~:			bankStates[packet->bank].nextRead = currentClockCycle + (tRCD-AL);
Rank.cpp~:			bankStates[packet->bank].nextWrite = currentClockCycle + (tRCD-AL);
Rank.cpp~:			bankStates[packet->bank].nextRead = currentClockCycle + (tRCD-AL);
Rank.cpp~:		bankStates[packet->bank].nextPrecharge = currentClockCycle + tRAS;
Rank.cpp~:			if (i != packet->bank)
Rank.cpp~:		if (bankStates[packet->bank].currentBankState != RowActive ||
Rank.cpp~:		        currentClockCycle < bankStates[packet->bank].nextPrecharge)
Rank.cpp~:			ERROR("== Error - Rank " << id << " received a PRE when not allowed");
Rank.cpp~:		bankStates[packet->bank].currentBankState = Idle;
Rank.cpp~:		bankStates[packet->bank].nextActivate = max(bankStates[packet->bank].nextActivate, currentClockCycle + tRP);
Rank.cpp~:				ERROR("== Error - Rank " << id << " received a REF when not allowed");
Rank.cpp~:		if(packet->bank != incomingWriteBank ||
Rank.cpp~:			 packet->row != incomingWriteRow ||
Rank.cpp~:			 packet->column != incomingWriteColumn)
Rank.cpp~:				cout << "== Error - Rank " << id << " received a DATA packet to the wrong place" << endl;
Rank.cpp~:				packet->print();
Rank.cpp~:				bankStates[packet->bank].print();
Rank.cpp~:		banks[packet->bank].write(packet);
Rank.cpp~:		ERROR("== Error - Unknown BusPacketType trying to be sent to Bank");
Rank.cpp~:	return this->id;
Rank.cpp~:		dataCyclesLeft--;
Rank.cpp~:			memoryController->receiveFromBus(outgoingDataPacket);
Rank.cpp~:		readReturnCountdown[i]--;
Rank.cpp~:			PRINTN(" -- R" << this->id << " Issuing On Data Bus : ");
Rank.cpp~:			outgoingDataPacket->print();
Rank.cpp~:			ERROR("== Error - Trying to power down rank " << id << " while not all banks are idle");
Rank.cpp~:		ERROR("== Error - Trying to power up rank " << id << " while it is not already powered down");
Rank.cpp~:			ERROR("== Error - Trying to power up rank " << id << " before we're allowed to");
Rank.dep:Rank.o: Rank.cpp /usr/include/stdc-predef.h Rank.h SimulatorObject.h \
Rank.dep: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdint.h /usr/include/stdint.h \
Rank.dep: /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
Rank.dep: /usr/include/x86_64-linux-gnu/bits/wordsize.h \
Rank.dep: /usr/include/x86_64-linux-gnu/gnu/stubs.h \
Rank.dep: /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
Rank.dep: /usr/include/x86_64-linux-gnu/bits/wchar.h BusPacket.h \
Rank.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++config.h \
Rank.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/os_defines.h \
Rank.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/cpu_defines.h \
Rank.dep: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdarg.h \
Rank.dep: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h \
Rank.dep: /usr/include/xlocale.h /usr/include/x86_64-linux-gnu/bits/wchar2.h \
Rank.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++locale.h \
Rank.dep: /usr/include/x86_64-linux-gnu/bits/locale.h /usr/include/c++/4.8/cctype \
Rank.dep: /usr/include/ctype.h /usr/include/x86_64-linux-gnu/bits/types.h \
Rank.dep: /usr/include/x86_64-linux-gnu/bits/typesizes.h /usr/include/endian.h \
Rank.dep: /usr/include/x86_64-linux-gnu/bits/endian.h \
Rank.dep: /usr/include/x86_64-linux-gnu/bits/byteswap.h \
Rank.dep: /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
Rank.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr.h \
Rank.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr-default.h \
Rank.dep: /usr/include/x86_64-linux-gnu/bits/sched.h \
Rank.dep: /usr/include/x86_64-linux-gnu/bits/time.h \
Rank.dep: /usr/include/x86_64-linux-gnu/bits/timex.h \
Rank.dep: /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
Rank.dep: /usr/include/x86_64-linux-gnu/bits/setjmp.h \
Rank.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/atomic_word.h \
Rank.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++allocator.h \
Rank.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_base.h \
Rank.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_inline.h \
Rank.dep: /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
Rank.dep: /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
Rank.dep: /usr/include/x86_64-linux-gnu/bits/stdio.h \
Rank.dep: /usr/include/x86_64-linux-gnu/bits/stdio2.h \
Rank.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/basic_file.h \
Rank.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++io.h \
Rank.dep: /usr/include/stdlib.h /usr/include/x86_64-linux-gnu/bits/waitflags.h \
Rank.dep: /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
Rank.dep: /usr/include/x86_64-linux-gnu/sys/types.h \
Rank.dep: /usr/include/x86_64-linux-gnu/sys/select.h \
Rank.dep: /usr/include/x86_64-linux-gnu/bits/select.h \
Rank.dep: /usr/include/x86_64-linux-gnu/bits/sigset.h \
Rank.dep: /usr/include/x86_64-linux-gnu/bits/select2.h \
Rank.dep: /usr/include/x86_64-linux-gnu/sys/sysmacros.h /usr/include/alloca.h \
Rank.dep: /usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h \
Rank.dep: /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
Rank.dep: /usr/include/x86_64-linux-gnu/bits/stdlib.h PrintMacros.h Bank.h \
Rank.dep: /usr/include/string.h /usr/include/x86_64-linux-gnu/bits/string3.h \
Rank.deppo:Rank.po: Rank.cpp /usr/include/stdc-predef.h Rank.h SimulatorObject.h \
Rank.deppo: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdint.h /usr/include/stdint.h \
Rank.deppo: /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
Rank.deppo: /usr/include/x86_64-linux-gnu/bits/wordsize.h \
Rank.deppo: /usr/include/x86_64-linux-gnu/gnu/stubs.h \
Rank.deppo: /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
Rank.deppo: /usr/include/x86_64-linux-gnu/bits/wchar.h BusPacket.h \
Rank.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++config.h \
Rank.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/os_defines.h \
Rank.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/cpu_defines.h \
Rank.deppo: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdarg.h \
Rank.deppo: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h \
Rank.deppo: /usr/include/xlocale.h /usr/include/x86_64-linux-gnu/bits/wchar2.h \
Rank.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++locale.h \
Rank.deppo: /usr/include/x86_64-linux-gnu/bits/locale.h /usr/include/c++/4.8/cctype \
Rank.deppo: /usr/include/ctype.h /usr/include/x86_64-linux-gnu/bits/types.h \
Rank.deppo: /usr/include/x86_64-linux-gnu/bits/typesizes.h /usr/include/endian.h \
Rank.deppo: /usr/include/x86_64-linux-gnu/bits/endian.h \
Rank.deppo: /usr/include/x86_64-linux-gnu/bits/byteswap.h \
Rank.deppo: /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
Rank.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr.h \
Rank.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr-default.h \
Rank.deppo: /usr/include/x86_64-linux-gnu/bits/sched.h \
Rank.deppo: /usr/include/x86_64-linux-gnu/bits/time.h \
Rank.deppo: /usr/include/x86_64-linux-gnu/bits/timex.h \
Rank.deppo: /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
Rank.deppo: /usr/include/x86_64-linux-gnu/bits/setjmp.h \
Rank.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/atomic_word.h \
Rank.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++allocator.h \
Rank.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_base.h \
Rank.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_inline.h \
Rank.deppo: /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
Rank.deppo: /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
Rank.deppo: /usr/include/x86_64-linux-gnu/bits/stdio.h \
Rank.deppo: /usr/include/x86_64-linux-gnu/bits/stdio2.h \
Rank.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/basic_file.h \
Rank.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++io.h \
Rank.deppo: /usr/include/stdlib.h /usr/include/x86_64-linux-gnu/bits/waitflags.h \
Rank.deppo: /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
Rank.deppo: /usr/include/x86_64-linux-gnu/sys/types.h \
Rank.deppo: /usr/include/x86_64-linux-gnu/sys/select.h \
Rank.deppo: /usr/include/x86_64-linux-gnu/bits/select.h \
Rank.deppo: /usr/include/x86_64-linux-gnu/bits/sigset.h \
Rank.deppo: /usr/include/x86_64-linux-gnu/bits/select2.h \
Rank.deppo: /usr/include/x86_64-linux-gnu/sys/sysmacros.h /usr/include/alloca.h \
Rank.deppo: /usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h \
Rank.deppo: /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
Rank.deppo: /usr/include/x86_64-linux-gnu/bits/stdlib.h PrintMacros.h Bank.h \
Rank.deppo: /usr/include/string.h /usr/include/x86_64-linux-gnu/bits/string3.h \
Rank.h:*  Copyright (c) 2010-2011, Elliott Cooper-Balis
Rank.h:	//these are vectors so that each element is per-bank
Binary file Rank.o matches
Binary file Rank.po matches
README:1. About DRAMSim ---------------------------------------------------------
README:	portable, and accurate. The simulator core has a well-defined interface
README:2. Building DRAMSim ---------------------------------------------------------
README:	trace-based simulation. 
README:3. Running DRAMSim -----------------------------------------------------------
README:	./DRAMSim -t traces/k6_aoe_02_short.trc -s system.ini -d ini/DDR3_micron_64M_8B_x4_sg15.ini -c 10000
README:4. DRAMSim Output -------------------------------------------------------------
README:-------------------------------------------------------------
README: ----------------- Memory System Update ------------------
README: ---------- Memory Controller Update Starting ------------ [8]
README: -- R0 Receiving On Bus    : BP [ACT] pa[0x5dec7f0] r[0] b[3] row[1502] col[799]
README: -- MC Issuing On Data Bus    : BP [DATA] pa[0x7edc7e0] r[0] b[2] row[2029] col[799] data[0]=
README: -- MC Issuing On Command Bus : BP [READ_P] pa[0x5dec7f8] r[1] b[3] row[1502] col[799]
README:== New Transaction - Mapping Address [0x5dec800]
README:-----------------------------------------------------
README:  Lines beginning with " -- " indicate bus traffic, ie, 
README:     -- R0 Receiving On Bus       : BP [ACT] pa[0x5dec7f0] r[0] b[3] row[1502] col[799]
README:     -- MC Issuing On Data Bus    : BP [DATA] pa[0x7edc7e0] r[0] b[2] row[2029] col[799] data[0]=
README:     -- MC Issuing On Command Bus : BP [READ_P] pa[0x5dec7f8] r[1] b[3] row[1502] col[799]
README:  draw is used.  for further detail about each current, see micron data-
README:			== New Transaction - Mapping Address [0x5dec800]
README:  the command queue.  For example, per-rank/per-bank queues are 
Binary file README.pdf matches
README.tex:\author{Elliott Cooper-Balis \\
README.tex:by the performance of DRAM-based memory systems. As a result, there is great
README.tex:the fact that DRAM-system performance depends on many
README.tex:and request sequence, memory-system architecture, memory-system configuration, DRAM
README.tex:performance-enhancing feature, since the performance impact of that feature typically 
README.tex:depends on the characteristics of specific workloads, memory-system architecture, 
README.tex:memory-system configuration, DRAM access protocol and DRAM device timing parameters. 
README.tex:the fact that the simulated memory system uses a closed-page policy and 
README.tex:Our DRAM-system simulation work enables system architects not
README.tex:	To build an optimized standalone trace-based simulator called \texttt{DRAMSim} simply type:
README.tex:\subsection{Trace-Based Simulation}
README.tex:traces should first be pre-processed before running through the simulator. 
README.tex:./DRAMSim -t traces/k6_aoe_02_short.trc -s system.ini -d ini/DDR3_micron_64M_8B_x4_sg15.ini -c 1000
README.tex:	the specified DDR3 part. The -s, -d, and -t flags are required to run a simulation.
README.tex:$ ./DRAMSim --help
README.tex:DRAMSim -t tracefile -s system.ini -d ini/device.ini [-c #] [-p pwd] -q
README.tex:	-t, --tracefile=FILENAME 	specify a tracefile to run  
README.tex:	-s, --systemini=FILENAME 	specify an ini file that describes the memory system parameters  
README.tex:	-d, --deviceini=FILENAME 	specify an ini file that describes the device-level parameters
README.tex:	-c, --numcycles=# 		specify number of cycles to run the simulation for [default=30] 
README.tex:	-q, --quiet 			flag to suppress simulation output (except final stats) [default=no]
README.tex:	-o, --option=OPTION_A=234			overwrite any ini file option from the command line
README.tex:	-p, --pwd=DIRECTORY		Set the working directory
README.tex: ----------------- Memory System Update ------------------
README.tex: ---------- Memory Controller Update Starting ------------ [8]
README.tex: -- R0 Receiving On Bus    : BP [ACT] pa[0x5dec7f0] r[0] b[3] row[1502] col[799]
README.tex: -- MC Issuing On Data Bus    : BP [DATA] pa[0x7edc7e0] r[0] b[2] row[2029] col[799] data[0]=
README.tex: -- MC Issuing On Command Bus : BP [READ_P] pa[0x5dec7f8] r[1] b[3] row[1502] col[799]
README.tex:== New Transaction - Mapping Address [0x5dec800] (read)
README.tex:Lines beginning with " -- " indicate bus traffic, ie, 
README.tex:     -- R0 Receiving On Bus       : BP [ACT] pa[0x5dec7f0] r[0] b[3] row[1502] col[799]
README.tex:     -- MC Issuing On Data Bus    : BP [DATA] pa[0x7edc7e0] r[0] b[2] row[2029] col[799] data[0]=
README.tex:     -- MC Issuing On Command Bus : BP [READ_P] pa[0x5dec7f8] r[1] b[3] row[1502] col[799]
README.tex:	== New Transaction - Mapping Address [0x5dec800] (read)
README.tex:the command queue.  For example, per-rank/per-bank queues are 
README.tex:We are currently working on DRAMVis, which is a cross-platform viewer which parses the vis file and generates graphs that can be used
README.txt:Elliott Cooper-Balis
README.txt:1 About DRAMSim2 --------------------------------------------------------------------------------
README.txt:2 Getting DRAMSim2--------------------------------------------------------------------------------
README.txt:3 Building DRAMSim2--------------------------------------------------------------------------------
README.txt:To build an optimized standalone trace-based simulator called DRAMSim simply type:
README.txt:4 Running DRAMSim2--------------------------------------------------------------------------------
README.txt:4.1 Trace-Based Simulation--------------------------------------------------------------------------------
README.txt:We've provided a few small sample traces in the traces/ directory. These gzipped traces should first be pre-
README.txt:./DRAMSim -t traces/k6_aoe_02_short.trc -s system.ini -d ini/DDR3_micron_64M_8B_x4_sg15.ini -c 1000
README.txt:This will run a 1000 cycle simulation of the k6aoe02short trace using the specified DDR3 part. The -s,
README.txt:-d, and -t flags are required to run a simulation.
README.txt:$ ./DRAMSim --help
README.txt:DRAMSim -t tracefile -s system.ini -d ini/device.ini [-c #] [-p pwd] -q
README.txt:  -t, --tracefile=FILENAME specify a tracefile to run
README.txt:  -s, --systemini=FILENAME specify an ini file that describes the memory system parameters
README.txt:  -d, --deviceini=FILENAME specify an ini file that describes the device-level parameters
README.txt:  -c, --numcycles=# specify number of cycles to run the simulation for [default=30]
README.txt:  -q, --quiet flag to suppress simulation output (except final stats) [default=no]
README.txt:  -o, --option=OPTION_A=234 overwrite any ini file option from the command line
README.txt:  -p, --pwd=DIRECTORY Set the working directory
README.txt:4.2 Library Interface--------------------------------------------------------------------------------
README.txt: ----------------- Memory System Update ------------------
README.txt: ---------- Memory Controller Update Starting ------------ [8]
README.txt: -- R0 Receiving On Bus : BP [ACT] pa[0x5dec7f0] r[0] b[3] row[1502] col[799]
README.txt: -- MC Issuing On Data Bus : BP [DATA] pa[0x7edc7e0] r[0] b[2] row[2029] col[799] data[0]=
README.txt: -- MC Issuing On Command Bus : BP [READ_P] pa[0x5dec7f8] r[1] b[3] row[1502] col[799]
README.txt:== New Transaction - Mapping Address [0x5dec800] (read)
README.txt:Lines beginning with " -- " indicate bus traffic, ie,
README.txt:      -- R0 Receiving On Bus : BP [ACT] pa[0x5dec7f0] r[0] b[3] row[1502] col[799]
README.txt:      -- MC Issuing On Data Bus : BP [DATA] pa[0x7edc7e0] r[0] b[2] row[2029] col[799] data[0]=
README.txt:      -- MC Issuing On Command Bus : BP [READ_P] pa[0x5dec7f8] r[1] b[3] row[1502] col[799]
README.txt:  == New Transaction - Mapping Address [0x5dec800] (read)
README.txt:designated structure for the command queue. For example, per-rank/per-bank queues are shown below:
README.txt:6 Results Output--------------------------------------------------------------------------------
README.txt:We are currently working on DRAMVis, which is a cross-platform viewer which parses the vis file and generates
run1.log:      -Rank   0 : 
run1.log:        -Reads  : 0 (0 bytes)
run1.log:        -Writes : 0 (0 bytes)
run1.log:        -Bandwidth / Latency  (Bank 0): 0.000 GB/s		-nan ns
run1.log:        -Bandwidth / Latency  (Bank 1): 0.000 GB/s		-nan ns
run1.log:        -Bandwidth / Latency  (Bank 2): 0.000 GB/s		-nan ns
run1.log:        -Bandwidth / Latency  (Bank 3): 0.000 GB/s		-nan ns
run1.log:        -Bandwidth / Latency  (Bank 4): 0.000 GB/s		-nan ns
run1.log:        -Bandwidth / Latency  (Bank 5): 0.000 GB/s		-nan ns
run1.log:        -Bandwidth / Latency  (Bank 6): 0.000 GB/s		-nan ns
run1.log:        -Bandwidth / Latency  (Bank 7): 0.000 GB/s		-nan ns
run1.log:     -Background (watts)     : 0.000
run1.log:     -Act/Pre    (watts)     : 0.000
run1.log:     -Burst      (watts)     : 0.000
run1.log:     -Refresh    (watts)     : 0.000
run1.log:== New Transaction - Mapping Address [0x18adb00] (Write)
run1.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x18adb00] r[0] b[4] row[197] col[109]
run1.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x18adb00] r[0] b[4] row[197] col[109]
run1.log:== New Transaction - Mapping Address [0x18adb00] (Write)
run1.log: -- MC Issuing On Command Bus : BP [WRITE] pa[0x18adb00] r[0] b[4] row[197] col[109]
run1.log: -- R0 Receiving On Bus    : BP [WRITE] pa[0x18adb00] r[0] b[4] row[197] col[109]
run1.log: -- MC Issuing On Command Bus : BP [WRITE] pa[0x18adb00] r[0] b[4] row[197] col[109]
run1.log: -- R0 Receiving On Bus    : BP [WRITE] pa[0x18adb00] r[0] b[4] row[197] col[109]
run1.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x18adb00] r[0] b[4] row[197] col[109] data[0]=NO DATA
run1.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x18adb00] r[0] b[4] row[197] col[109] data[0]=NO DATA
run1.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x18adb00] r[0] b[4] row[197] col[109] data[0]=NO DATA
run1.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x18adb00] r[0] b[4] row[197] col[109] data[0]=NO DATA
run1.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[4] row[0] col[0]
run1.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[4] row[0] col[0]
run1.log:== New Transaction - Mapping Address [0x1a5db40] (Read)
run1.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run1.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run1.log:== New Transaction - Mapping Address [0x1a5db40] (Read)
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run1.log:== New Transaction - Mapping Address [0x1a5db40] (Read)
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run1.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[5] row[0] col[0]
run1.log:== New Transaction - Mapping Address [0x1a5db40] (Read)
run1.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run1.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[5] row[0] col[0]
run1.log: -- MC Issuing to CPU bus : T [Data] [0x1a5db40] [0]
run1.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run1.log: -- MC Issuing to CPU bus : T [Data] [0x1a5db40] [0]
run1.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run1.log: -- MC Issuing to CPU bus : T [Data] [0x1a5db40] [0]
run1.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run1.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run1.log:== New Transaction - Mapping Address [0x1a5db40] (Read)
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run1.log:== New Transaction - Mapping Address [0x1a5db40] (Read)
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run1.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run1.log: -- MC Issuing to CPU bus : T [Data] [0x1a5db40] [0]
run1.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[5] row[0] col[0]
run1.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[5] row[0] col[0]
run1.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run1.log: -- MC Issuing to CPU bus : T [Data] [0x1a5db40] [0]
run1.log:== New Transaction - Mapping Address [0x1a5db40] (Read)
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run1.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run1.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run1.log: -- MC Issuing to CPU bus : T [Data] [0x1a5db40] [0]
run1.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run1.log:== New Transaction - Mapping Address [0x1a5db40] (Read)
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run1.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[5] row[0] col[0]
run1.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run1.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[5] row[0] col[0]
run1.log: -- MC Issuing to CPU bus : T [Data] [0x1a5db40] [0]
run1.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run1.log: -- MC Issuing to CPU bus : T [Data] [0x1a5db40] [0]
run1.log:== New Transaction - Mapping Address [0x196cf80] (Read)
run1.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x196cf80] r[0] b[6] row[203] col[103]
run1.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x196cf80] r[0] b[6] row[203] col[103]
run1.log:== New Transaction - Mapping Address [0x196cf80] (Read)
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x196cf80] r[0] b[6] row[203] col[103]
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x196cf80] r[0] b[6] row[203] col[103]
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x196cf80] r[0] b[6] row[203] col[103]
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x196cf80] r[0] b[6] row[203] col[103]
run1.log:== New Transaction - Mapping Address [0x196cf80] (Read)
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x196cf80] r[0] b[6] row[203] col[103]
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x196cf80] r[0] b[6] row[203] col[103]
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run1.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[6] row[0] col[0]
run1.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run1.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[6] row[0] col[0]
run1.log: -- MC Issuing to CPU bus : T [Data] [0x196cf80] [0]
run1.log:== New Transaction - Mapping Address [0x196cf80] (Read)
run1.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run1.log: -- MC Issuing to CPU bus : T [Data] [0x196cf80] [0]
run1.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run1.log: -- MC Issuing to CPU bus : T [Data] [0x196cf80] [0]
run1.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x196cf80] r[0] b[6] row[203] col[103]
run1.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x196cf80] r[0] b[6] row[203] col[103]
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x196cf80] r[0] b[6] row[203] col[103]
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x196cf80] r[0] b[6] row[203] col[103]
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run1.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[6] row[0] col[0]
run1.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run1.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[6] row[0] col[0]
run1.log: -- MC Issuing to CPU bus : T [Data] [0x196cf80] [0]
run1.log:== New Transaction - Mapping Address [0x14957c0] (Read)
run1.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x14957c0] r[0] b[7] row[164] col[171]
run1.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x14957c0] r[0] b[7] row[164] col[171]
run1.log:== New Transaction - Mapping Address [0x14957c0] (Read)
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x14957c0] r[0] b[7] row[164] col[171]
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x14957c0] r[0] b[7] row[164] col[171]
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x14957c0] r[0] b[7] row[164] col[171]
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x14957c0] r[0] b[7] row[164] col[171]
run1.log:== New Transaction - Mapping Address [0x14957c0] (Read)
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x14957c0] r[0] b[7] row[164] col[171]
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x14957c0] r[0] b[7] row[164] col[171]
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run1.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[7] row[0] col[0]
run1.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run1.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[7] row[0] col[0]
run1.log: -- MC Issuing to CPU bus : T [Data] [0x14957c0] [0]
run1.log:== New Transaction - Mapping Address [0x14957c0] (Read)
run1.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run1.log: -- MC Issuing to CPU bus : T [Data] [0x14957c0] [0]
run1.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run1.log: -- MC Issuing to CPU bus : T [Data] [0x14957c0] [0]
run1.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x14957c0] r[0] b[7] row[164] col[171]
run1.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x14957c0] r[0] b[7] row[164] col[171]
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x14957c0] r[0] b[7] row[164] col[171]
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x14957c0] r[0] b[7] row[164] col[171]
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run1.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[7] row[0] col[0]
run1.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run1.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[7] row[0] col[0]
run1.log: -- MC Issuing to CPU bus : T [Data] [0x14957c0] [0]
run1.log:== New Transaction - Mapping Address [0x14957c0] (Read)
run1.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x14957c0] r[0] b[7] row[164] col[171]
run1.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x14957c0] r[0] b[7] row[164] col[171]
run1.log:== New Transaction - Mapping Address [0x14957c0] (Read)
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x14957c0] r[0] b[7] row[164] col[171]
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x14957c0] r[0] b[7] row[164] col[171]
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x14957c0] r[0] b[7] row[164] col[171]
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x14957c0] r[0] b[7] row[164] col[171]
run1.log:== New Transaction - Mapping Address [0x14957c0] (Read)
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x14957c0] r[0] b[7] row[164] col[171]
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x14957c0] r[0] b[7] row[164] col[171]
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run1.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[7] row[0] col[0]
run1.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run1.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[7] row[0] col[0]
run1.log:== New Transaction - Mapping Address [0x14957c0] (Read)
run1.log: -- MC Issuing to CPU bus : T [Data] [0x14957c0] [0]
run1.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run1.log: -- MC Issuing to CPU bus : T [Data] [0x14957c0] [0]
run1.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run1.log: -- MC Issuing to CPU bus : T [Data] [0x14957c0] [0]
run1.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x14957c0] r[0] b[7] row[164] col[171]
run1.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x14957c0] r[0] b[7] row[164] col[171]
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x14957c0] r[0] b[7] row[164] col[171]
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x14957c0] r[0] b[7] row[164] col[171]
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run1.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[7] row[0] col[0]
run1.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run1.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[7] row[0] col[0]
run1.log: -- MC Issuing to CPU bus : T [Data] [0x14957c0] [0]
run1.log:== New Transaction - Mapping Address [0x196cf80] (Read)
run1.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x196cf80] r[0] b[6] row[203] col[103]
run1.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x196cf80] r[0] b[6] row[203] col[103]
run1.log:== New Transaction - Mapping Address [0x196cf80] (Read)
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x196cf80] r[0] b[6] row[203] col[103]
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x196cf80] r[0] b[6] row[203] col[103]
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x196cf80] r[0] b[6] row[203] col[103]
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x196cf80] r[0] b[6] row[203] col[103]
run1.log:== New Transaction - Mapping Address [0x196cf80] (Read)
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x196cf80] r[0] b[6] row[203] col[103]
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x196cf80] r[0] b[6] row[203] col[103]
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run1.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[6] row[0] col[0]
run1.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run1.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[6] row[0] col[0]
run1.log: -- MC Issuing to CPU bus : T [Data] [0x196cf80] [0]
run1.log:== New Transaction - Mapping Address [0x196cf80] (Read)
run1.log:== New Transaction - Mapping Address [0x1bff240] (Read)
run1.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x1bff240] r[0] b[1] row[223] col[249]
run1.log:== New Transaction - Mapping Address [0x1bff240] (Read)
run1.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run1.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x1bff240] r[0] b[1] row[223] col[249]
run1.log:== New Transaction - Mapping Address [0x1bff240] (Read)
run1.log: -- MC Issuing to CPU bus : T [Data] [0x196cf80] [0]
run1.log:== New Transaction - Mapping Address [0x1bff240] (Read)
run1.log:== New Transaction - Mapping Address [0x1bff240] (Read)
run1.log:== New Transaction - Mapping Address [0x1bff240] (Read)
run1.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run1.log:== New Transaction - Mapping Address [0x1bff240] (Read)
run1.log: -- MC Issuing to CPU bus : T [Data] [0x196cf80] [0]
run1.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x196cf80] r[0] b[6] row[203] col[103]
run1.log:== New Transaction - Mapping Address [0x1bff240] (Read)
run1.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x196cf80] r[0] b[6] row[203] col[103]
run1.log:== New Transaction - Mapping Address [0x6332140] (Read)
run1.log:== New Transaction - Mapping Address [0x6332140] (Read)
run1.log:== New Transaction - Mapping Address [0x6332140] (Read)
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1bff240] r[0] b[1] row[223] col[249]
run1.log:== New Transaction - Mapping Address [0x6332140] (Read)
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1bff240] r[0] b[1] row[223] col[249]
run1.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x6332140] r[0] b[5] row[793] col[144]
run1.log:== New Transaction - Mapping Address [0x6332180] (Read)
run1.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x6332140] r[0] b[5] row[793] col[144]
run1.log:== New Transaction - Mapping Address [0x6332180] (Read)
run1.log:== New Transaction - Mapping Address [0x6332180] (Read)
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1bff240] r[0] b[1] row[223] col[249]
run1.log:== New Transaction - Mapping Address [0x6332180] (Read)
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1bff240] r[0] b[1] row[223] col[249]
run1.log:== New Transaction - Mapping Address [0x6332180] (Read)
run1.log:== New Transaction - Mapping Address [0x6332180] (Read)
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x196cf80] r[0] b[6] row[203] col[103]
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x196cf80] r[0] b[6] row[203] col[103]
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1bff240] r[0] b[1] row[223] col[249] data[0]=NO DATA
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1bff240] r[0] b[1] row[223] col[249]
run1.log:== New Transaction - Mapping Address [0x6332180] (Read)
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1bff240] r[0] b[1] row[223] col[249]
run1.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1bff240] r[0] b[1] row[223] col[249] data[0]=NO DATA
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1bff240] r[0] b[1] row[223] col[249] data[0]=NO DATA
run1.log: -- MC Issuing to CPU bus : T [Data] [0x1bff240] [0]
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1bff240] r[0] b[1] row[223] col[249]
run1.log:== New Transaction - Mapping Address [0x6332180] (Read)
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1bff240] r[0] b[1] row[223] col[249]
run1.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1bff240] r[0] b[1] row[223] col[249] data[0]=NO DATA
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run1.log: -- MC Issuing to CPU bus : T [Data] [0x1bff240] [0]
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1bff240] r[0] b[1] row[223] col[249]
run1.log:== New Transaction - Mapping Address [0x1495800] (Read)
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1bff240] r[0] b[1] row[223] col[249]
run1.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x1495800] r[0] b[0] row[164] col[172]
run1.log:== New Transaction - Mapping Address [0x1495800] (Read)
run1.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x1495800] r[0] b[0] row[164] col[172]
run1.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[6] row[0] col[0]
run1.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1bff240] r[0] b[1] row[223] col[249] data[0]=NO DATA
run1.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[6] row[0] col[0]
run1.log: -- MC Issuing to CPU bus : T [Data] [0x196cf80] [0]
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x6332140] r[0] b[5] row[793] col[144]
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x6332140] r[0] b[5] row[793] col[144]
run1.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[1] row[0] col[0]
run1.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[1] row[0] col[0]
run1.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1bff240] r[0] b[1] row[223] col[249] data[0]=NO DATA
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1bff240] r[0] b[1] row[223] col[249] data[0]=NO DATA
run1.log: -- MC Issuing to CPU bus : T [Data] [0x1bff240] [0]
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x6332140] r[0] b[5] row[793] col[144]
run1.log:== New Transaction - Mapping Address [0x1495800] (Read)
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x6332140] r[0] b[5] row[793] col[144]
run1.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1bff240] r[0] b[1] row[223] col[249] data[0]=NO DATA
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1bff240] r[0] b[1] row[223] col[249] data[0]=NO DATA
run1.log: -- MC Issuing to CPU bus : T [Data] [0x1bff240] [0]
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x6332140] r[0] b[5] row[793] col[144]
run1.log:== New Transaction - Mapping Address [0x1495800] (Read)
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x6332140] r[0] b[5] row[793] col[144]
run1.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x6332180] r[0] b[6] row[793] col[144]
run1.log:== New Transaction - Mapping Address [0x1495800] (Read)
run1.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x6332180] r[0] b[6] row[793] col[144]
run1.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1bff240] r[0] b[1] row[223] col[249] data[0]=NO DATA
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x6332140] r[0] b[5] row[793] col[144] data[0]=NO DATA
run1.log: -- MC Issuing to CPU bus : T [Data] [0x1bff240] [0]
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x6332140] r[0] b[5] row[793] col[144]
run1.log:== New Transaction - Mapping Address [0x1495800] (Read)
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x6332140] r[0] b[5] row[793] col[144]
run1.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x1bff240] r[0] b[1] row[223] col[249]
run1.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x1bff240] r[0] b[1] row[223] col[249]
run1.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x6332140] r[0] b[5] row[793] col[144] data[0]=NO DATA
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x6332140] r[0] b[5] row[793] col[144] data[0]=NO DATA
run1.log: -- MC Issuing to CPU bus : T [Data] [0x6332140] [0]
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1495800] r[0] b[0] row[164] col[172]
run1.log:== New Transaction - Mapping Address [0x1495800] (Read)
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1495800] r[0] b[0] row[164] col[172]
run1.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[5] row[0] col[0]
run1.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[5] row[0] col[0]
run1.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x6332140] r[0] b[5] row[793] col[144] data[0]=NO DATA
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x6332140] r[0] b[5] row[793] col[144] data[0]=NO DATA
run1.log: -- MC Issuing to CPU bus : T [Data] [0x6332140] [0]
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x6332180] r[0] b[6] row[793] col[144]
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x6332180] r[0] b[6] row[793] col[144]
run1.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x6332140] r[0] b[5] row[793] col[144] data[0]=NO DATA
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x6332140] r[0] b[5] row[793] col[144] data[0]=NO DATA
run1.log: -- MC Issuing to CPU bus : T [Data] [0x6332140] [0]
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1bff240] r[0] b[1] row[223] col[249]
run1.log:== New Transaction - Mapping Address [0x1495800] (Read)
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1bff240] r[0] b[1] row[223] col[249]
run1.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x6332140] r[0] b[5] row[793] col[144] data[0]=NO DATA
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1495800] r[0] b[0] row[164] col[172] data[0]=NO DATA
run1.log: -- MC Issuing to CPU bus : T [Data] [0x6332140] [0]
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1bff240] r[0] b[1] row[223] col[249]
run1.log:== New Transaction - Mapping Address [0x1ee0e80] (Read)
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1bff240] r[0] b[1] row[223] col[249]
run1.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x1ee0e80] r[0] b[2] row[247] col[7]
run1.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x1ee0e80] r[0] b[2] row[247] col[7]
run1.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1495800] r[0] b[0] row[164] col[172] data[0]=NO DATA
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x6332180] r[0] b[6] row[793] col[144] data[0]=NO DATA
run1.log: -- MC Issuing to CPU bus : T [Data] [0x1495800] [0]
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1bff240] r[0] b[1] row[223] col[249]
run1.log:== New Transaction - Mapping Address [0x1ee0e80] (Read)
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1bff240] r[0] b[1] row[223] col[249]
run1.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x6332180] r[0] b[6] row[793] col[144] data[0]=NO DATA
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1bff240] r[0] b[1] row[223] col[249] data[0]=NO DATA
run1.log: -- MC Issuing to CPU bus : T [Data] [0x6332180] [0]
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x6332180] r[0] b[6] row[793] col[144]
run1.log:== New Transaction - Mapping Address [0x1ee0e80] (Read)
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x6332180] r[0] b[6] row[793] col[144]
run1.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[1] row[0] col[0]
run1.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[1] row[0] col[0]
run1.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1bff240] r[0] b[1] row[223] col[249] data[0]=NO DATA
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1bff240] r[0] b[1] row[223] col[249] data[0]=NO DATA
run1.log: -- MC Issuing to CPU bus : T [Data] [0x1bff240] [0]
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x6332180] r[0] b[6] row[793] col[144]
run1.log:== New Transaction - Mapping Address [0x1ee0e80] (Read)
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x6332180] r[0] b[6] row[793] col[144]
run1.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1bff240] r[0] b[1] row[223] col[249] data[0]=NO DATA
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1bff240] r[0] b[1] row[223] col[249] data[0]=NO DATA
run1.log: -- MC Issuing to CPU bus : T [Data] [0x1bff240] [0]
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x6332180] r[0] b[6] row[793] col[144]
run1.log:== New Transaction - Mapping Address [0x1ee0e80] (Read)
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x6332180] r[0] b[6] row[793] col[144]
run1.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1bff240] r[0] b[1] row[223] col[249] data[0]=NO DATA
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x6332180] r[0] b[6] row[793] col[144] data[0]=NO DATA
run1.log: -- MC Issuing to CPU bus : T [Data] [0x1bff240] [0]
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x6332180] r[0] b[6] row[793] col[144]
run1.log:== New Transaction - Mapping Address [0x1ee0e80] (Read)
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x6332180] r[0] b[6] row[793] col[144]
run1.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x6332180] r[0] b[6] row[793] col[144] data[0]=NO DATA
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x6332180] r[0] b[6] row[793] col[144] data[0]=NO DATA
run1.log: -- MC Issuing to CPU bus : T [Data] [0x6332180] [0]
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1495800] r[0] b[0] row[164] col[172]
run1.log:== New Transaction - Mapping Address [0x1ee0e80] (Read)
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1495800] r[0] b[0] row[164] col[172]
run1.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[6] row[0] col[0]
run1.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[6] row[0] col[0]
run1.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x6332180] r[0] b[6] row[793] col[144] data[0]=NO DATA
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x6332180] r[0] b[6] row[793] col[144] data[0]=NO DATA
run1.log: -- MC Issuing to CPU bus : T [Data] [0x6332180] [0]
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1495800] r[0] b[0] row[164] col[172]
run1.log:== New Transaction - Mapping Address [0x1ee0e80] (Read)
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1495800] r[0] b[0] row[164] col[172]
run1.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x6332180] r[0] b[6] row[793] col[144] data[0]=NO DATA
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x6332180] r[0] b[6] row[793] col[144] data[0]=NO DATA
run1.log: -- MC Issuing to CPU bus : T [Data] [0x6332180] [0]
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1495800] r[0] b[0] row[164] col[172]
run1.log:== New Transaction - Mapping Address [0x63321c0] (Read)
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1495800] r[0] b[0] row[164] col[172]
run1.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x63321c0] r[0] b[7] row[793] col[144]
run1.log:== New Transaction - Mapping Address [0x63321c0] (Read)
run1.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x63321c0] r[0] b[7] row[793] col[144]
run1.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x6332180] r[0] b[6] row[793] col[144] data[0]=NO DATA
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1495800] r[0] b[0] row[164] col[172] data[0]=NO DATA
run1.log: -- MC Issuing to CPU bus : T [Data] [0x6332180] [0]
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1495800] r[0] b[0] row[164] col[172]
run1.log:== New Transaction - Mapping Address [0x63321c0] (Read)
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1495800] r[0] b[0] row[164] col[172]
run1.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x6332180] r[0] b[6] row[793] col[144]
run1.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x6332180] r[0] b[6] row[793] col[144]
run1.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1495800] r[0] b[0] row[164] col[172] data[0]=NO DATA
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1495800] r[0] b[0] row[164] col[172] data[0]=NO DATA
run1.log: -- MC Issuing to CPU bus : T [Data] [0x1495800] [0]
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1ee0e80] r[0] b[2] row[247] col[7]
run1.log:== New Transaction - Mapping Address [0x63321c0] (Read)
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1ee0e80] r[0] b[2] row[247] col[7]
run1.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run1.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run1.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1495800] r[0] b[0] row[164] col[172] data[0]=NO DATA
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1495800] r[0] b[0] row[164] col[172] data[0]=NO DATA
run1.log: -- MC Issuing to CPU bus : T [Data] [0x1495800] [0]
run1.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1ee0e80] r[0] b[2] row[247] col[7]
run1.log:== New Transaction - Mapping Address [0x1495780] (Read)
run1.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1ee0e80] r[0] b[2] row[247] col[7]
run1.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1495800] r[0] b[0] row[164] col[172] data[0]=NO DATA
run1.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1495800] r[0] b[0] row[164] col[172] data[0]=NO DATA
run1.log: -- MC Issuing to CPU bus : T [Data] [0x1495800] [0]
run1.log:      -Rank   0 : 
run1.log:        -Reads  : 45 (2880 bytes)
run1.log:        -Writes : 2 (128 bytes)
run1.log:        -Bandwidth / Latency  (Bank 0): 0.159 GB/s		111.750 ns
run1.log:        -Bandwidth / Latency  (Bank 1): 0.318 GB/s		72.750 ns
run1.log:        -Bandwidth / Latency  (Bank 2): 0.000 GB/s		-nan ns
run1.log:        -Bandwidth / Latency  (Bank 3): 0.000 GB/s		-nan ns
run1.log:        -Bandwidth / Latency  (Bank 4): 0.079 GB/s		-nan ns
run1.log:        -Bandwidth / Latency  (Bank 5): 0.477 GB/s		48.500 ns
run1.log:        -Bandwidth / Latency  (Bank 6): 0.517 GB/s		66.231 ns
run1.log:        -Bandwidth / Latency  (Bank 7): 0.318 GB/s		38.625 ns
run1.log:     -Background (watts)     : 1.167
run1.log:     -Act/Pre    (watts)     : 0.259
run1.log:     -Burst      (watts)     : 0.677
run1.log:     -Refresh    (watts)     : 0.000
run1.log: ---  Latency list (8)
run1.log:       [10-19] : 7
run1.log:       [20-29] : 12
run1.log:       [30-39] : 9
run1.log:       [40-49] : 5
run1.log:       [50-59] : 2
run1.log:       [60-69] : 1
run1.log:       [70-79] : 5
run1.log:       [80-89] : 4
run1_test3_symm.log:      -Rank   0 : 
run1_test3_symm.log:        -Reads  : 0 (0 bytes)
run1_test3_symm.log:        -Writes : 0 (0 bytes)
run1_test3_symm.log:        -Bandwidth / Latency  (Bank 0): 0.000 GB/s		-nan ns
run1_test3_symm.log:        -Bandwidth / Latency  (Bank 1): 0.000 GB/s		-nan ns
run1_test3_symm.log:        -Bandwidth / Latency  (Bank 2): 0.000 GB/s		-nan ns
run1_test3_symm.log:        -Bandwidth / Latency  (Bank 3): 0.000 GB/s		-nan ns
run1_test3_symm.log:        -Bandwidth / Latency  (Bank 4): 0.000 GB/s		-nan ns
run1_test3_symm.log:        -Bandwidth / Latency  (Bank 5): 0.000 GB/s		-nan ns
run1_test3_symm.log:        -Bandwidth / Latency  (Bank 6): 0.000 GB/s		-nan ns
run1_test3_symm.log:        -Bandwidth / Latency  (Bank 7): 0.000 GB/s		-nan ns
run1_test3_symm.log:     -Background (watts)     : 0.000
run1_test3_symm.log:     -Act/Pre    (watts)     : 0.000
run1_test3_symm.log:     -Burst      (watts)     : 0.000
run1_test3_symm.log:     -Refresh    (watts)     : 0.000
run1_test3_symm.log:== New Transaction - Mapping Address [0x0] (Write)
run1_test3_symm.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x0] r[0] b[0] row[0] col[0]
run1_test3_symm.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x0] r[0] b[0] row[0] col[0]
run1_test3_symm.log:== New Transaction - Mapping Address [0x20000] (Write)
run1_test3_symm.log: -- MC Issuing On Command Bus : BP [WRITE] pa[0x0] r[0] b[0] row[0] col[0]
run1_test3_symm.log: -- R0 Receiving On Bus    : BP [WRITE] pa[0x0] r[0] b[0] row[0] col[0]
run1_test3_symm.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x0] r[0] b[0] row[0] col[0] data[0]=NO DATA
run1_test3_symm.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x0] r[0] b[0] row[0] col[0] data[0]=NO DATA
run1_test3_symm.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run1_test3_symm.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run1_test3_symm.log:== New Transaction - Mapping Address [0x40000] (Write)
run1_test3_symm.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x20000] r[0] b[0] row[1] col[0]
run1_test3_symm.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x20000] r[0] b[0] row[1] col[0]
run1_test3_symm.log: -- MC Issuing On Command Bus : BP [WRITE] pa[0x20000] r[0] b[0] row[1] col[0]
run1_test3_symm.log: -- R0 Receiving On Bus    : BP [WRITE] pa[0x20000] r[0] b[0] row[1] col[0]
run1_test3_symm.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x20000] r[0] b[0] row[1] col[0] data[0]=NO DATA
run1_test3_symm.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x20000] r[0] b[0] row[1] col[0] data[0]=NO DATA
run1_test3_symm.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run1_test3_symm.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run1_test3_symm.log:== New Transaction - Mapping Address [0x60000] (Write)
run1_test3_symm.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x40000] r[0] b[0] row[2] col[0]
run1_test3_symm.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x40000] r[0] b[0] row[2] col[0]
run1_test3_symm.log: -- MC Issuing On Command Bus : BP [WRITE] pa[0x40000] r[0] b[0] row[2] col[0]
run1_test3_symm.log: -- R0 Receiving On Bus    : BP [WRITE] pa[0x40000] r[0] b[0] row[2] col[0]
run1_test3_symm.log:== New Transaction - Mapping Address [0x0] (Read)
run1_test3_symm.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x40000] r[0] b[0] row[2] col[0] data[0]=NO DATA
run1_test3_symm.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x40000] r[0] b[0] row[2] col[0] data[0]=NO DATA
run1_test3_symm.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run1_test3_symm.log:== New Transaction - Mapping Address [0x20000] (Read)
run1_test3_symm.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run1_test3_symm.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x60000] r[0] b[0] row[3] col[0]
run1_test3_symm.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x60000] r[0] b[0] row[3] col[0]
run1_test3_symm.log: -- MC Issuing On Command Bus : BP [WRITE] pa[0x60000] r[0] b[0] row[3] col[0]
run1_test3_symm.log:== New Transaction - Mapping Address [0x40000] (Read)
run1_test3_symm.log: -- R0 Receiving On Bus    : BP [WRITE] pa[0x60000] r[0] b[0] row[3] col[0]
run1_test3_symm.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x60000] r[0] b[0] row[3] col[0] data[0]=NO DATA
run1_test3_symm.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x60000] r[0] b[0] row[3] col[0] data[0]=NO DATA
run1_test3_symm.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run1_test3_symm.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run1_test3_symm.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x0] r[0] b[0] row[0] col[0]
run1_test3_symm.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x0] r[0] b[0] row[0] col[0]
run1_test3_symm.log:== New Transaction - Mapping Address [0x60000] (Read)
run1_test3_symm.log: -- MC Issuing On Command Bus : BP [READ] pa[0x0] r[0] b[0] row[0] col[0]
run1_test3_symm.log: -- R0 Receiving On Bus    : BP [READ] pa[0x0] r[0] b[0] row[0] col[0]
run1_test3_symm.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x0] r[0] b[0] row[0] col[0] data[0]=NO DATA
run1_test3_symm.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run1_test3_symm.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x0] r[0] b[0] row[0] col[0] data[0]=NO DATA
run1_test3_symm.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run1_test3_symm.log: -- MC Issuing to CPU bus : T [Data] [0x0] [0]
run1_test3_symm.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x20000] r[0] b[0] row[1] col[0]
run1_test3_symm.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x20000] r[0] b[0] row[1] col[0]
run1_test3_symm.log: -- MC Issuing On Command Bus : BP [READ] pa[0x20000] r[0] b[0] row[1] col[0]
run1_test3_symm.log: -- R0 Receiving On Bus    : BP [READ] pa[0x20000] r[0] b[0] row[1] col[0]
run1_test3_symm.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x20000] r[0] b[0] row[1] col[0] data[0]=NO DATA
run1_test3_symm.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run1_test3_symm.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x20000] r[0] b[0] row[1] col[0] data[0]=NO DATA
run1_test3_symm.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run1_test3_symm.log: -- MC Issuing to CPU bus : T [Data] [0x20000] [0]
run1_test3_symm.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x40000] r[0] b[0] row[2] col[0]
run1_test3_symm.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x40000] r[0] b[0] row[2] col[0]
run1_test3_symm.log: -- MC Issuing On Command Bus : BP [READ] pa[0x40000] r[0] b[0] row[2] col[0]
run1_test3_symm.log: -- R0 Receiving On Bus    : BP [READ] pa[0x40000] r[0] b[0] row[2] col[0]
run1_test3_symm.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x40000] r[0] b[0] row[2] col[0] data[0]=NO DATA
run1_test3_symm.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run1_test3_symm.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x40000] r[0] b[0] row[2] col[0] data[0]=NO DATA
run1_test3_symm.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run1_test3_symm.log: -- MC Issuing to CPU bus : T [Data] [0x40000] [0]
run1_test3_symm.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x60000] r[0] b[0] row[3] col[0]
run1_test3_symm.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x60000] r[0] b[0] row[3] col[0]
run1_test3_symm.log: -- MC Issuing On Command Bus : BP [READ] pa[0x60000] r[0] b[0] row[3] col[0]
run1_test3_symm.log: -- R0 Receiving On Bus    : BP [READ] pa[0x60000] r[0] b[0] row[3] col[0]
run1_test3_symm.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x60000] r[0] b[0] row[3] col[0] data[0]=NO DATA
run1_test3_symm.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run1_test3_symm.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x60000] r[0] b[0] row[3] col[0] data[0]=NO DATA
run1_test3_symm.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run1_test3_symm.log: -- MC Issuing to CPU bus : T [Data] [0x60000] [0]
run1_test3_symm.log:      -Rank   0 : 
run1_test3_symm.log:        -Reads  : 4 (256 bytes)
run1_test3_symm.log:        -Writes : 4 (256 bytes)
run1_test3_symm.log:        -Bandwidth / Latency  (Bank 0): 0.318 GB/s		171.000 ns
run1_test3_symm.log:        -Bandwidth / Latency  (Bank 1): 0.000 GB/s		-nan ns
run1_test3_symm.log:        -Bandwidth / Latency  (Bank 2): 0.000 GB/s		-nan ns
run1_test3_symm.log:        -Bandwidth / Latency  (Bank 3): 0.000 GB/s		-nan ns
run1_test3_symm.log:        -Bandwidth / Latency  (Bank 4): 0.000 GB/s		-nan ns
run1_test3_symm.log:        -Bandwidth / Latency  (Bank 5): 0.000 GB/s		-nan ns
run1_test3_symm.log:        -Bandwidth / Latency  (Bank 6): 0.000 GB/s		-nan ns
run1_test3_symm.log:        -Bandwidth / Latency  (Bank 7): 0.000 GB/s		-nan ns
run1_test3_symm.log:     -Background (watts)     : 0.794
run1_test3_symm.log:     -Act/Pre    (watts)     : 0.104
run1_test3_symm.log:     -Burst      (watts)     : 0.117
run1_test3_symm.log:     -Refresh    (watts)     : 0.000
run1_test3_symm.log: ---  Latency list (3)
run1_test3_symm.log:       [90-99] : 1
run1_test3_symm.log:       [110-119] : 1
run1_test3_symm.log:       [120-129] : 2
run2.log:      -Rank   0 : 
run2.log:        -Reads  : 0 (0 bytes)
run2.log:        -Writes : 0 (0 bytes)
run2.log:        -Bandwidth / Latency  (Bank 0): 0.000 GB/s		-nan ns
run2.log:        -Bandwidth / Latency  (Bank 1): 0.000 GB/s		-nan ns
run2.log:        -Bandwidth / Latency  (Bank 2): 0.000 GB/s		-nan ns
run2.log:        -Bandwidth / Latency  (Bank 3): 0.000 GB/s		-nan ns
run2.log:        -Bandwidth / Latency  (Bank 4): 0.000 GB/s		-nan ns
run2.log:        -Bandwidth / Latency  (Bank 5): 0.000 GB/s		-nan ns
run2.log:        -Bandwidth / Latency  (Bank 6): 0.000 GB/s		-nan ns
run2.log:        -Bandwidth / Latency  (Bank 7): 0.000 GB/s		-nan ns
run2.log:     -Background (watts)     : 0.000
run2.log:     -Act/Pre    (watts)     : 0.000
run2.log:     -Burst      (watts)     : 0.000
run2.log:     -Refresh    (watts)     : 0.000
run2.log:== New Transaction - Mapping Address [0x18adb00] (Write)
run2.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x18adb00] r[0] b[4] row[197] col[109]
run2.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x18adb00] r[0] b[4] row[197] col[109]
run2.log:== New Transaction - Mapping Address [0x18adb00] (Write)
run2.log: -- MC Issuing On Command Bus : BP [WRITE] pa[0x18adb00] r[0] b[4] row[197] col[109]
run2.log: -- R0 Receiving On Bus    : BP [WRITE] pa[0x18adb00] r[0] b[4] row[197] col[109]
run2.log: -- MC Issuing On Command Bus : BP [WRITE] pa[0x18adb00] r[0] b[4] row[197] col[109]
run2.log: -- R0 Receiving On Bus    : BP [WRITE] pa[0x18adb00] r[0] b[4] row[197] col[109]
run2.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x18adb00] r[0] b[4] row[197] col[109] data[0]=NO DATA
run2.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x18adb00] r[0] b[4] row[197] col[109] data[0]=NO DATA
run2.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x18adb00] r[0] b[4] row[197] col[109] data[0]=NO DATA
run2.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x18adb00] r[0] b[4] row[197] col[109] data[0]=NO DATA
run2.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[4] row[0] col[0]
run2.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[4] row[0] col[0]
run2.log:== New Transaction - Mapping Address [0x1a5db40] (Read)
run2.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run2.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run2.log:== New Transaction - Mapping Address [0x1a5db40] (Read)
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run2.log:== New Transaction - Mapping Address [0x1a5db40] (Read)
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run2.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[5] row[0] col[0]
run2.log:== New Transaction - Mapping Address [0x1a5db40] (Read)
run2.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run2.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[5] row[0] col[0]
run2.log: -- MC Issuing to CPU bus : T [Data] [0x1a5db40] [0]
run2.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run2.log: -- MC Issuing to CPU bus : T [Data] [0x1a5db40] [0]
run2.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run2.log: -- MC Issuing to CPU bus : T [Data] [0x1a5db40] [0]
run2.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run2.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run2.log:== New Transaction - Mapping Address [0x1a5db40] (Read)
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run2.log:== New Transaction - Mapping Address [0x1a5db40] (Read)
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run2.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run2.log: -- MC Issuing to CPU bus : T [Data] [0x1a5db40] [0]
run2.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[5] row[0] col[0]
run2.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[5] row[0] col[0]
run2.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run2.log: -- MC Issuing to CPU bus : T [Data] [0x1a5db40] [0]
run2.log:== New Transaction - Mapping Address [0x1a5db40] (Read)
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run2.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run2.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run2.log: -- MC Issuing to CPU bus : T [Data] [0x1a5db40] [0]
run2.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run2.log:== New Transaction - Mapping Address [0x1a5db40] (Read)
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run2.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[5] row[0] col[0]
run2.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run2.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[5] row[0] col[0]
run2.log: -- MC Issuing to CPU bus : T [Data] [0x1a5db40] [0]
run2.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run2.log: -- MC Issuing to CPU bus : T [Data] [0x1a5db40] [0]
run2.log:== New Transaction - Mapping Address [0x196cf80] (Read)
run2.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x196cf80] r[0] b[6] row[203] col[103]
run2.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x196cf80] r[0] b[6] row[203] col[103]
run2.log:== New Transaction - Mapping Address [0x196cf80] (Read)
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x196cf80] r[0] b[6] row[203] col[103]
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x196cf80] r[0] b[6] row[203] col[103]
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x196cf80] r[0] b[6] row[203] col[103]
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x196cf80] r[0] b[6] row[203] col[103]
run2.log:== New Transaction - Mapping Address [0x196cf80] (Read)
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x196cf80] r[0] b[6] row[203] col[103]
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x196cf80] r[0] b[6] row[203] col[103]
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run2.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[6] row[0] col[0]
run2.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run2.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[6] row[0] col[0]
run2.log: -- MC Issuing to CPU bus : T [Data] [0x196cf80] [0]
run2.log:== New Transaction - Mapping Address [0x196cf80] (Read)
run2.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run2.log: -- MC Issuing to CPU bus : T [Data] [0x196cf80] [0]
run2.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run2.log: -- MC Issuing to CPU bus : T [Data] [0x196cf80] [0]
run2.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x196cf80] r[0] b[6] row[203] col[103]
run2.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x196cf80] r[0] b[6] row[203] col[103]
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x196cf80] r[0] b[6] row[203] col[103]
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x196cf80] r[0] b[6] row[203] col[103]
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run2.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[6] row[0] col[0]
run2.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run2.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[6] row[0] col[0]
run2.log: -- MC Issuing to CPU bus : T [Data] [0x196cf80] [0]
run2.log:== New Transaction - Mapping Address [0x14957c0] (Read)
run2.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x14957c0] r[0] b[7] row[164] col[171]
run2.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x14957c0] r[0] b[7] row[164] col[171]
run2.log:== New Transaction - Mapping Address [0x14957c0] (Read)
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x14957c0] r[0] b[7] row[164] col[171]
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x14957c0] r[0] b[7] row[164] col[171]
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x14957c0] r[0] b[7] row[164] col[171]
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x14957c0] r[0] b[7] row[164] col[171]
run2.log:== New Transaction - Mapping Address [0x14957c0] (Read)
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x14957c0] r[0] b[7] row[164] col[171]
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x14957c0] r[0] b[7] row[164] col[171]
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run2.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[7] row[0] col[0]
run2.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run2.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[7] row[0] col[0]
run2.log: -- MC Issuing to CPU bus : T [Data] [0x14957c0] [0]
run2.log:== New Transaction - Mapping Address [0x14957c0] (Read)
run2.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run2.log: -- MC Issuing to CPU bus : T [Data] [0x14957c0] [0]
run2.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run2.log: -- MC Issuing to CPU bus : T [Data] [0x14957c0] [0]
run2.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x14957c0] r[0] b[7] row[164] col[171]
run2.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x14957c0] r[0] b[7] row[164] col[171]
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x14957c0] r[0] b[7] row[164] col[171]
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x14957c0] r[0] b[7] row[164] col[171]
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run2.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[7] row[0] col[0]
run2.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run2.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[7] row[0] col[0]
run2.log: -- MC Issuing to CPU bus : T [Data] [0x14957c0] [0]
run2.log:== New Transaction - Mapping Address [0x14957c0] (Read)
run2.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x14957c0] r[0] b[7] row[164] col[171]
run2.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x14957c0] r[0] b[7] row[164] col[171]
run2.log:== New Transaction - Mapping Address [0x14957c0] (Read)
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x14957c0] r[0] b[7] row[164] col[171]
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x14957c0] r[0] b[7] row[164] col[171]
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x14957c0] r[0] b[7] row[164] col[171]
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x14957c0] r[0] b[7] row[164] col[171]
run2.log:== New Transaction - Mapping Address [0x14957c0] (Read)
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x14957c0] r[0] b[7] row[164] col[171]
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x14957c0] r[0] b[7] row[164] col[171]
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run2.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[7] row[0] col[0]
run2.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run2.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[7] row[0] col[0]
run2.log:== New Transaction - Mapping Address [0x14957c0] (Read)
run2.log: -- MC Issuing to CPU bus : T [Data] [0x14957c0] [0]
run2.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run2.log: -- MC Issuing to CPU bus : T [Data] [0x14957c0] [0]
run2.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run2.log: -- MC Issuing to CPU bus : T [Data] [0x14957c0] [0]
run2.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x14957c0] r[0] b[7] row[164] col[171]
run2.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x14957c0] r[0] b[7] row[164] col[171]
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x14957c0] r[0] b[7] row[164] col[171]
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x14957c0] r[0] b[7] row[164] col[171]
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run2.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[7] row[0] col[0]
run2.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run2.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[7] row[0] col[0]
run2.log: -- MC Issuing to CPU bus : T [Data] [0x14957c0] [0]
run2.log:== New Transaction - Mapping Address [0x196cf80] (Read)
run2.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x196cf80] r[0] b[6] row[203] col[103]
run2.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x196cf80] r[0] b[6] row[203] col[103]
run2.log:== New Transaction - Mapping Address [0x196cf80] (Read)
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x196cf80] r[0] b[6] row[203] col[103]
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x196cf80] r[0] b[6] row[203] col[103]
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x196cf80] r[0] b[6] row[203] col[103]
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x196cf80] r[0] b[6] row[203] col[103]
run2.log:== New Transaction - Mapping Address [0x196cf80] (Read)
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x196cf80] r[0] b[6] row[203] col[103]
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x196cf80] r[0] b[6] row[203] col[103]
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run2.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[6] row[0] col[0]
run2.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run2.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[6] row[0] col[0]
run2.log: -- MC Issuing to CPU bus : T [Data] [0x196cf80] [0]
run2.log:== New Transaction - Mapping Address [0x196cf80] (Read)
run2.log:== New Transaction - Mapping Address [0x1bff240] (Read)
run2.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x1bff240] r[0] b[1] row[223] col[249]
run2.log:== New Transaction - Mapping Address [0x1bff240] (Read)
run2.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run2.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x1bff240] r[0] b[1] row[223] col[249]
run2.log:== New Transaction - Mapping Address [0x1bff240] (Read)
run2.log: -- MC Issuing to CPU bus : T [Data] [0x196cf80] [0]
run2.log:== New Transaction - Mapping Address [0x1bff240] (Read)
run2.log:== New Transaction - Mapping Address [0x1bff240] (Read)
run2.log:== New Transaction - Mapping Address [0x1bff240] (Read)
run2.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run2.log:== New Transaction - Mapping Address [0x1bff240] (Read)
run2.log: -- MC Issuing to CPU bus : T [Data] [0x196cf80] [0]
run2.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x196cf80] r[0] b[6] row[203] col[103]
run2.log:== New Transaction - Mapping Address [0x1bff240] (Read)
run2.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x196cf80] r[0] b[6] row[203] col[103]
run2.log:== New Transaction - Mapping Address [0x6332140] (Read)
run2.log:== New Transaction - Mapping Address [0x6332140] (Read)
run2.log:== New Transaction - Mapping Address [0x6332140] (Read)
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1bff240] r[0] b[1] row[223] col[249]
run2.log:== New Transaction - Mapping Address [0x6332140] (Read)
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1bff240] r[0] b[1] row[223] col[249]
run2.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x6332140] r[0] b[5] row[793] col[144]
run2.log:== New Transaction - Mapping Address [0x6332180] (Read)
run2.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x6332140] r[0] b[5] row[793] col[144]
run2.log:== New Transaction - Mapping Address [0x6332180] (Read)
run2.log:== New Transaction - Mapping Address [0x6332180] (Read)
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1bff240] r[0] b[1] row[223] col[249]
run2.log:== New Transaction - Mapping Address [0x6332180] (Read)
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1bff240] r[0] b[1] row[223] col[249]
run2.log:== New Transaction - Mapping Address [0x6332180] (Read)
run2.log:== New Transaction - Mapping Address [0x6332180] (Read)
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x196cf80] r[0] b[6] row[203] col[103]
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x196cf80] r[0] b[6] row[203] col[103]
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1bff240] r[0] b[1] row[223] col[249] data[0]=NO DATA
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1bff240] r[0] b[1] row[223] col[249]
run2.log:== New Transaction - Mapping Address [0x6332180] (Read)
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1bff240] r[0] b[1] row[223] col[249]
run2.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1bff240] r[0] b[1] row[223] col[249] data[0]=NO DATA
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1bff240] r[0] b[1] row[223] col[249] data[0]=NO DATA
run2.log: -- MC Issuing to CPU bus : T [Data] [0x1bff240] [0]
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1bff240] r[0] b[1] row[223] col[249]
run2.log:== New Transaction - Mapping Address [0x6332180] (Read)
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1bff240] r[0] b[1] row[223] col[249]
run2.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1bff240] r[0] b[1] row[223] col[249] data[0]=NO DATA
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run2.log: -- MC Issuing to CPU bus : T [Data] [0x1bff240] [0]
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1bff240] r[0] b[1] row[223] col[249]
run2.log:== New Transaction - Mapping Address [0x1495800] (Read)
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1bff240] r[0] b[1] row[223] col[249]
run2.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x1495800] r[0] b[0] row[164] col[172]
run2.log:== New Transaction - Mapping Address [0x1495800] (Read)
run2.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x1495800] r[0] b[0] row[164] col[172]
run2.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[6] row[0] col[0]
run2.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1bff240] r[0] b[1] row[223] col[249] data[0]=NO DATA
run2.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[6] row[0] col[0]
run2.log: -- MC Issuing to CPU bus : T [Data] [0x196cf80] [0]
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x6332140] r[0] b[5] row[793] col[144]
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x6332140] r[0] b[5] row[793] col[144]
run2.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[1] row[0] col[0]
run2.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[1] row[0] col[0]
run2.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1bff240] r[0] b[1] row[223] col[249] data[0]=NO DATA
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1bff240] r[0] b[1] row[223] col[249] data[0]=NO DATA
run2.log: -- MC Issuing to CPU bus : T [Data] [0x1bff240] [0]
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x6332140] r[0] b[5] row[793] col[144]
run2.log:== New Transaction - Mapping Address [0x1495800] (Read)
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x6332140] r[0] b[5] row[793] col[144]
run2.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1bff240] r[0] b[1] row[223] col[249] data[0]=NO DATA
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1bff240] r[0] b[1] row[223] col[249] data[0]=NO DATA
run2.log: -- MC Issuing to CPU bus : T [Data] [0x1bff240] [0]
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x6332140] r[0] b[5] row[793] col[144]
run2.log:== New Transaction - Mapping Address [0x1495800] (Read)
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x6332140] r[0] b[5] row[793] col[144]
run2.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x6332180] r[0] b[6] row[793] col[144]
run2.log:== New Transaction - Mapping Address [0x1495800] (Read)
run2.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x6332180] r[0] b[6] row[793] col[144]
run2.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1bff240] r[0] b[1] row[223] col[249] data[0]=NO DATA
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x6332140] r[0] b[5] row[793] col[144] data[0]=NO DATA
run2.log: -- MC Issuing to CPU bus : T [Data] [0x1bff240] [0]
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x6332140] r[0] b[5] row[793] col[144]
run2.log:== New Transaction - Mapping Address [0x1495800] (Read)
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x6332140] r[0] b[5] row[793] col[144]
run2.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x1bff240] r[0] b[1] row[223] col[249]
run2.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x1bff240] r[0] b[1] row[223] col[249]
run2.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x6332140] r[0] b[5] row[793] col[144] data[0]=NO DATA
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x6332140] r[0] b[5] row[793] col[144] data[0]=NO DATA
run2.log: -- MC Issuing to CPU bus : T [Data] [0x6332140] [0]
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1495800] r[0] b[0] row[164] col[172]
run2.log:== New Transaction - Mapping Address [0x1495800] (Read)
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1495800] r[0] b[0] row[164] col[172]
run2.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[5] row[0] col[0]
run2.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[5] row[0] col[0]
run2.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x6332140] r[0] b[5] row[793] col[144] data[0]=NO DATA
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x6332140] r[0] b[5] row[793] col[144] data[0]=NO DATA
run2.log: -- MC Issuing to CPU bus : T [Data] [0x6332140] [0]
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x6332180] r[0] b[6] row[793] col[144]
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x6332180] r[0] b[6] row[793] col[144]
run2.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x6332140] r[0] b[5] row[793] col[144] data[0]=NO DATA
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x6332140] r[0] b[5] row[793] col[144] data[0]=NO DATA
run2.log: -- MC Issuing to CPU bus : T [Data] [0x6332140] [0]
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1bff240] r[0] b[1] row[223] col[249]
run2.log:== New Transaction - Mapping Address [0x1495800] (Read)
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1bff240] r[0] b[1] row[223] col[249]
run2.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x6332140] r[0] b[5] row[793] col[144] data[0]=NO DATA
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1495800] r[0] b[0] row[164] col[172] data[0]=NO DATA
run2.log: -- MC Issuing to CPU bus : T [Data] [0x6332140] [0]
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1bff240] r[0] b[1] row[223] col[249]
run2.log:== New Transaction - Mapping Address [0x1ee0e80] (Read)
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1bff240] r[0] b[1] row[223] col[249]
run2.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x1ee0e80] r[0] b[2] row[247] col[7]
run2.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x1ee0e80] r[0] b[2] row[247] col[7]
run2.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1495800] r[0] b[0] row[164] col[172] data[0]=NO DATA
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x6332180] r[0] b[6] row[793] col[144] data[0]=NO DATA
run2.log: -- MC Issuing to CPU bus : T [Data] [0x1495800] [0]
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1bff240] r[0] b[1] row[223] col[249]
run2.log:== New Transaction - Mapping Address [0x1ee0e80] (Read)
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1bff240] r[0] b[1] row[223] col[249]
run2.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x6332180] r[0] b[6] row[793] col[144] data[0]=NO DATA
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1bff240] r[0] b[1] row[223] col[249] data[0]=NO DATA
run2.log: -- MC Issuing to CPU bus : T [Data] [0x6332180] [0]
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x6332180] r[0] b[6] row[793] col[144]
run2.log:== New Transaction - Mapping Address [0x1ee0e80] (Read)
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x6332180] r[0] b[6] row[793] col[144]
run2.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[1] row[0] col[0]
run2.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[1] row[0] col[0]
run2.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1bff240] r[0] b[1] row[223] col[249] data[0]=NO DATA
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1bff240] r[0] b[1] row[223] col[249] data[0]=NO DATA
run2.log: -- MC Issuing to CPU bus : T [Data] [0x1bff240] [0]
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x6332180] r[0] b[6] row[793] col[144]
run2.log:== New Transaction - Mapping Address [0x1ee0e80] (Read)
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x6332180] r[0] b[6] row[793] col[144]
run2.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1bff240] r[0] b[1] row[223] col[249] data[0]=NO DATA
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1bff240] r[0] b[1] row[223] col[249] data[0]=NO DATA
run2.log: -- MC Issuing to CPU bus : T [Data] [0x1bff240] [0]
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x6332180] r[0] b[6] row[793] col[144]
run2.log:== New Transaction - Mapping Address [0x1ee0e80] (Read)
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x6332180] r[0] b[6] row[793] col[144]
run2.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1bff240] r[0] b[1] row[223] col[249] data[0]=NO DATA
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x6332180] r[0] b[6] row[793] col[144] data[0]=NO DATA
run2.log: -- MC Issuing to CPU bus : T [Data] [0x1bff240] [0]
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x6332180] r[0] b[6] row[793] col[144]
run2.log:== New Transaction - Mapping Address [0x1ee0e80] (Read)
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x6332180] r[0] b[6] row[793] col[144]
run2.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x6332180] r[0] b[6] row[793] col[144] data[0]=NO DATA
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x6332180] r[0] b[6] row[793] col[144] data[0]=NO DATA
run2.log: -- MC Issuing to CPU bus : T [Data] [0x6332180] [0]
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1495800] r[0] b[0] row[164] col[172]
run2.log:== New Transaction - Mapping Address [0x1ee0e80] (Read)
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1495800] r[0] b[0] row[164] col[172]
run2.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[6] row[0] col[0]
run2.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[6] row[0] col[0]
run2.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x6332180] r[0] b[6] row[793] col[144] data[0]=NO DATA
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x6332180] r[0] b[6] row[793] col[144] data[0]=NO DATA
run2.log: -- MC Issuing to CPU bus : T [Data] [0x6332180] [0]
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1495800] r[0] b[0] row[164] col[172]
run2.log:== New Transaction - Mapping Address [0x1ee0e80] (Read)
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1495800] r[0] b[0] row[164] col[172]
run2.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x6332180] r[0] b[6] row[793] col[144] data[0]=NO DATA
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x6332180] r[0] b[6] row[793] col[144] data[0]=NO DATA
run2.log: -- MC Issuing to CPU bus : T [Data] [0x6332180] [0]
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1495800] r[0] b[0] row[164] col[172]
run2.log:== New Transaction - Mapping Address [0x63321c0] (Read)
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1495800] r[0] b[0] row[164] col[172]
run2.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x63321c0] r[0] b[7] row[793] col[144]
run2.log:== New Transaction - Mapping Address [0x63321c0] (Read)
run2.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x63321c0] r[0] b[7] row[793] col[144]
run2.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x6332180] r[0] b[6] row[793] col[144] data[0]=NO DATA
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1495800] r[0] b[0] row[164] col[172] data[0]=NO DATA
run2.log: -- MC Issuing to CPU bus : T [Data] [0x6332180] [0]
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1495800] r[0] b[0] row[164] col[172]
run2.log:== New Transaction - Mapping Address [0x63321c0] (Read)
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1495800] r[0] b[0] row[164] col[172]
run2.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x6332180] r[0] b[6] row[793] col[144]
run2.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x6332180] r[0] b[6] row[793] col[144]
run2.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1495800] r[0] b[0] row[164] col[172] data[0]=NO DATA
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1495800] r[0] b[0] row[164] col[172] data[0]=NO DATA
run2.log: -- MC Issuing to CPU bus : T [Data] [0x1495800] [0]
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1ee0e80] r[0] b[2] row[247] col[7]
run2.log:== New Transaction - Mapping Address [0x63321c0] (Read)
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1ee0e80] r[0] b[2] row[247] col[7]
run2.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run2.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run2.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1495800] r[0] b[0] row[164] col[172] data[0]=NO DATA
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1495800] r[0] b[0] row[164] col[172] data[0]=NO DATA
run2.log: -- MC Issuing to CPU bus : T [Data] [0x1495800] [0]
run2.log: -- MC Issuing On Command Bus : BP [READ] pa[0x1ee0e80] r[0] b[2] row[247] col[7]
run2.log:== New Transaction - Mapping Address [0x1495780] (Read)
run2.log: -- R0 Receiving On Bus    : BP [READ] pa[0x1ee0e80] r[0] b[2] row[247] col[7]
run2.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1495800] r[0] b[0] row[164] col[172] data[0]=NO DATA
run2.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1495800] r[0] b[0] row[164] col[172] data[0]=NO DATA
run2.log: -- MC Issuing to CPU bus : T [Data] [0x1495800] [0]
run2.log:      -Rank   0 : 
run2.log:        -Reads  : 45 (2880 bytes)
run2.log:        -Writes : 2 (128 bytes)
run2.log:        -Bandwidth / Latency  (Bank 0): 0.159 GB/s		111.750 ns
run2.log:        -Bandwidth / Latency  (Bank 1): 0.318 GB/s		72.750 ns
run2.log:        -Bandwidth / Latency  (Bank 2): 0.000 GB/s		-nan ns
run2.log:        -Bandwidth / Latency  (Bank 3): 0.000 GB/s		-nan ns
run2.log:        -Bandwidth / Latency  (Bank 4): 0.079 GB/s		-nan ns
run2.log:        -Bandwidth / Latency  (Bank 5): 0.477 GB/s		48.500 ns
run2.log:        -Bandwidth / Latency  (Bank 6): 0.517 GB/s		66.231 ns
run2.log:        -Bandwidth / Latency  (Bank 7): 0.318 GB/s		38.625 ns
run2.log:     -Background (watts)     : 1.167
run2.log:     -Act/Pre    (watts)     : 0.259
run2.log:     -Burst      (watts)     : 0.677
run2.log:     -Refresh    (watts)     : 0.000
run2.log: ---  Latency list (8)
run2.log:       [10-19] : 7
run2.log:       [20-29] : 12
run2.log:       [30-39] : 9
run2.log:       [40-49] : 5
run2.log:       [50-59] : 2
run2.log:       [60-69] : 1
run2.log:       [70-79] : 5
run2.log:       [80-89] : 4
run3.log:      -Rank   0 : 
run3.log:        -Reads  : 0 (0 bytes)
run3.log:        -Writes : 0 (0 bytes)
run3.log:        -Bandwidth / Latency  (Bank 0): 0.000 GB/s		-nan ns
run3.log:        -Bandwidth / Latency  (Bank 1): 0.000 GB/s		-nan ns
run3.log:        -Bandwidth / Latency  (Bank 2): 0.000 GB/s		-nan ns
run3.log:        -Bandwidth / Latency  (Bank 3): 0.000 GB/s		-nan ns
run3.log:        -Bandwidth / Latency  (Bank 4): 0.000 GB/s		-nan ns
run3.log:        -Bandwidth / Latency  (Bank 5): 0.000 GB/s		-nan ns
run3.log:        -Bandwidth / Latency  (Bank 6): 0.000 GB/s		-nan ns
run3.log:        -Bandwidth / Latency  (Bank 7): 0.000 GB/s		-nan ns
run3.log:     -Background (watts)     : 0.000
run3.log:     -Act/Pre    (watts)     : 0.000
run3.log:     -Burst      (watts)     : 0.000
run3.log:     -Refresh    (watts)     : 0.000
run3.log:== New Transaction - Mapping Address [0x18adb00] (Write)
run3.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x18adb00] r[0] b[4] row[197] col[109]
run3.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x18adb00] r[0] b[4] row[197] col[109]
run3.log:== New Transaction - Mapping Address [0x18adb00] (Write)
run3.log: -- MC Issuing On Command Bus : BP [WRITE_P] pa[0x18adb00] r[0] b[4] row[197] col[109]
run3.log: -- R0 Receiving On Bus    : BP [WRITE_P] pa[0x18adb00] r[0] b[4] row[197] col[109]
run3.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x18adb00] r[0] b[4] row[197] col[109] data[0]=NO DATA
run3.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x18adb00] r[0] b[4] row[197] col[109] data[0]=NO DATA
run3.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x18adb00] r[0] b[4] row[197] col[109]
run3.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x18adb00] r[0] b[4] row[197] col[109]
run3.log:== New Transaction - Mapping Address [0x1a5db40] (Read)
run3.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run3.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run3.log: -- MC Issuing On Command Bus : BP [WRITE_P] pa[0x18adb00] r[0] b[4] row[197] col[109]
run3.log: -- R0 Receiving On Bus    : BP [WRITE_P] pa[0x18adb00] r[0] b[4] row[197] col[109]
run3.log:== New Transaction - Mapping Address [0x1a5db40] (Read)
run3.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x18adb00] r[0] b[4] row[197] col[109] data[0]=NO DATA
run3.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x18adb00] r[0] b[4] row[197] col[109] data[0]=NO DATA
run3.log:== New Transaction - Mapping Address [0x1a5db40] (Read)
run3.log: -- MC Issuing On Command Bus : BP [READ_P] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run3.log: -- R0 Receiving On Bus    : BP [READ_P] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run3.log:== New Transaction - Mapping Address [0x1a5db40] (Read)
run3.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run3.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run3.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run3.log: -- MC Issuing to CPU bus : T [Data] [0x1a5db40] [0]
run3.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run3.log: -- MC Issuing On Command Bus : BP [READ_P] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run3.log: -- R0 Receiving On Bus    : BP [READ_P] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run3.log:== New Transaction - Mapping Address [0x1a5db40] (Read)
run3.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run3.log:== New Transaction - Mapping Address [0x1a5db40] (Read)
run3.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run3.log: -- MC Issuing to CPU bus : T [Data] [0x1a5db40] [0]
run3.log:== New Transaction - Mapping Address [0x1a5db40] (Read)
run3.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run3.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run3.log:== New Transaction - Mapping Address [0x1a5db40] (Read)
run3.log: -- MC Issuing On Command Bus : BP [READ_P] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run3.log: -- R0 Receiving On Bus    : BP [READ_P] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run3.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run3.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run3.log: -- MC Issuing to CPU bus : T [Data] [0x1a5db40] [0]
run3.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run3.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run3.log: -- MC Issuing On Command Bus : BP [READ_P] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run3.log: -- R0 Receiving On Bus    : BP [READ_P] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run3.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run3.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run3.log: -- MC Issuing to CPU bus : T [Data] [0x1a5db40] [0]
run3.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run3.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run3.log: -- MC Issuing On Command Bus : BP [READ_P] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run3.log: -- R0 Receiving On Bus    : BP [READ_P] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run3.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run3.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run3.log: -- MC Issuing to CPU bus : T [Data] [0x1a5db40] [0]
run3.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run3.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run3.log: -- MC Issuing On Command Bus : BP [READ_P] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run3.log: -- R0 Receiving On Bus    : BP [READ_P] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run3.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run3.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run3.log: -- MC Issuing to CPU bus : T [Data] [0x1a5db40] [0]
run3.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run3.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run3.log: -- MC Issuing On Command Bus : BP [READ_P] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run3.log: -- R0 Receiving On Bus    : BP [READ_P] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run3.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run3.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run3.log: -- MC Issuing to CPU bus : T [Data] [0x1a5db40] [0]
run3.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run3.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run3.log: -- MC Issuing On Command Bus : BP [READ_P] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run3.log: -- R0 Receiving On Bus    : BP [READ_P] pa[0x1a5db40] r[0] b[5] row[210] col[237]
run3.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run3.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1a5db40] r[0] b[5] row[210] col[237] data[0]=NO DATA
run3.log: -- MC Issuing to CPU bus : T [Data] [0x1a5db40] [0]
run3.log:== New Transaction - Mapping Address [0x196cf80] (Read)
run3.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x196cf80] r[0] b[6] row[203] col[103]
run3.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x196cf80] r[0] b[6] row[203] col[103]
run3.log:== New Transaction - Mapping Address [0x196cf80] (Read)
run3.log: -- MC Issuing On Command Bus : BP [READ_P] pa[0x196cf80] r[0] b[6] row[203] col[103]
run3.log: -- R0 Receiving On Bus    : BP [READ_P] pa[0x196cf80] r[0] b[6] row[203] col[103]
run3.log:== New Transaction - Mapping Address [0x196cf80] (Read)
run3.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run3.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run3.log:== New Transaction - Mapping Address [0x196cf80] (Read)
run3.log: -- MC Issuing to CPU bus : T [Data] [0x196cf80] [0]
run3.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x196cf80] r[0] b[6] row[203] col[103]
run3.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x196cf80] r[0] b[6] row[203] col[103]
run3.log: -- MC Issuing On Command Bus : BP [READ_P] pa[0x196cf80] r[0] b[6] row[203] col[103]
run3.log: -- R0 Receiving On Bus    : BP [READ_P] pa[0x196cf80] r[0] b[6] row[203] col[103]
run3.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run3.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run3.log: -- MC Issuing to CPU bus : T [Data] [0x196cf80] [0]
run3.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x196cf80] r[0] b[6] row[203] col[103]
run3.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x196cf80] r[0] b[6] row[203] col[103]
run3.log: -- MC Issuing On Command Bus : BP [READ_P] pa[0x196cf80] r[0] b[6] row[203] col[103]
run3.log: -- R0 Receiving On Bus    : BP [READ_P] pa[0x196cf80] r[0] b[6] row[203] col[103]
run3.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run3.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run3.log: -- MC Issuing to CPU bus : T [Data] [0x196cf80] [0]
run3.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x196cf80] r[0] b[6] row[203] col[103]
run3.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x196cf80] r[0] b[6] row[203] col[103]
run3.log: -- MC Issuing On Command Bus : BP [READ_P] pa[0x196cf80] r[0] b[6] row[203] col[103]
run3.log: -- R0 Receiving On Bus    : BP [READ_P] pa[0x196cf80] r[0] b[6] row[203] col[103]
run3.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run3.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run3.log: -- MC Issuing to CPU bus : T [Data] [0x196cf80] [0]
run3.log:== New Transaction - Mapping Address [0x14957c0] (Read)
run3.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x14957c0] r[0] b[7] row[164] col[171]
run3.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x14957c0] r[0] b[7] row[164] col[171]
run3.log:== New Transaction - Mapping Address [0x14957c0] (Read)
run3.log: -- MC Issuing On Command Bus : BP [READ_P] pa[0x14957c0] r[0] b[7] row[164] col[171]
run3.log: -- R0 Receiving On Bus    : BP [READ_P] pa[0x14957c0] r[0] b[7] row[164] col[171]
run3.log:== New Transaction - Mapping Address [0x14957c0] (Read)
run3.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run3.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run3.log: -- MC Issuing to CPU bus : T [Data] [0x14957c0] [0]
run3.log:== New Transaction - Mapping Address [0x14957c0] (Read)
run3.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x14957c0] r[0] b[7] row[164] col[171]
run3.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x14957c0] r[0] b[7] row[164] col[171]
run3.log: -- MC Issuing On Command Bus : BP [READ_P] pa[0x14957c0] r[0] b[7] row[164] col[171]
run3.log: -- R0 Receiving On Bus    : BP [READ_P] pa[0x14957c0] r[0] b[7] row[164] col[171]
run3.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run3.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run3.log: -- MC Issuing to CPU bus : T [Data] [0x14957c0] [0]
run3.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x14957c0] r[0] b[7] row[164] col[171]
run3.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x14957c0] r[0] b[7] row[164] col[171]
run3.log: -- MC Issuing On Command Bus : BP [READ_P] pa[0x14957c0] r[0] b[7] row[164] col[171]
run3.log: -- R0 Receiving On Bus    : BP [READ_P] pa[0x14957c0] r[0] b[7] row[164] col[171]
run3.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run3.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run3.log: -- MC Issuing to CPU bus : T [Data] [0x14957c0] [0]
run3.log:== New Transaction - Mapping Address [0x14957c0] (Read)
run3.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x14957c0] r[0] b[7] row[164] col[171]
run3.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x14957c0] r[0] b[7] row[164] col[171]
run3.log:== New Transaction - Mapping Address [0x14957c0] (Read)
run3.log: -- MC Issuing On Command Bus : BP [READ_P] pa[0x14957c0] r[0] b[7] row[164] col[171]
run3.log: -- R0 Receiving On Bus    : BP [READ_P] pa[0x14957c0] r[0] b[7] row[164] col[171]
run3.log:== New Transaction - Mapping Address [0x14957c0] (Read)
run3.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run3.log:== New Transaction - Mapping Address [0x14957c0] (Read)
run3.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run3.log: -- MC Issuing to CPU bus : T [Data] [0x14957c0] [0]
run3.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x14957c0] r[0] b[7] row[164] col[171]
run3.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x14957c0] r[0] b[7] row[164] col[171]
run3.log: -- MC Issuing On Command Bus : BP [READ_P] pa[0x14957c0] r[0] b[7] row[164] col[171]
run3.log: -- R0 Receiving On Bus    : BP [READ_P] pa[0x14957c0] r[0] b[7] row[164] col[171]
run3.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run3.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run3.log: -- MC Issuing to CPU bus : T [Data] [0x14957c0] [0]
run3.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x14957c0] r[0] b[7] row[164] col[171]
run3.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x14957c0] r[0] b[7] row[164] col[171]
run3.log: -- MC Issuing On Command Bus : BP [READ_P] pa[0x14957c0] r[0] b[7] row[164] col[171]
run3.log: -- R0 Receiving On Bus    : BP [READ_P] pa[0x14957c0] r[0] b[7] row[164] col[171]
run3.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run3.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run3.log: -- MC Issuing to CPU bus : T [Data] [0x14957c0] [0]
run3.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x14957c0] r[0] b[7] row[164] col[171]
run3.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x14957c0] r[0] b[7] row[164] col[171]
run3.log: -- MC Issuing On Command Bus : BP [READ_P] pa[0x14957c0] r[0] b[7] row[164] col[171]
run3.log: -- R0 Receiving On Bus    : BP [READ_P] pa[0x14957c0] r[0] b[7] row[164] col[171]
run3.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run3.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run3.log: -- MC Issuing to CPU bus : T [Data] [0x14957c0] [0]
run3.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x14957c0] r[0] b[7] row[164] col[171]
run3.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x14957c0] r[0] b[7] row[164] col[171]
run3.log: -- MC Issuing On Command Bus : BP [READ_P] pa[0x14957c0] r[0] b[7] row[164] col[171]
run3.log: -- R0 Receiving On Bus    : BP [READ_P] pa[0x14957c0] r[0] b[7] row[164] col[171]
run3.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run3.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x14957c0] r[0] b[7] row[164] col[171] data[0]=NO DATA
run3.log: -- MC Issuing to CPU bus : T [Data] [0x14957c0] [0]
run3.log:== New Transaction - Mapping Address [0x196cf80] (Read)
run3.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x196cf80] r[0] b[6] row[203] col[103]
run3.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x196cf80] r[0] b[6] row[203] col[103]
run3.log:== New Transaction - Mapping Address [0x196cf80] (Read)
run3.log: -- MC Issuing On Command Bus : BP [READ_P] pa[0x196cf80] r[0] b[6] row[203] col[103]
run3.log: -- R0 Receiving On Bus    : BP [READ_P] pa[0x196cf80] r[0] b[6] row[203] col[103]
run3.log:== New Transaction - Mapping Address [0x196cf80] (Read)
run3.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run3.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run3.log: -- MC Issuing to CPU bus : T [Data] [0x196cf80] [0]
run3.log:== New Transaction - Mapping Address [0x196cf80] (Read)
run3.log:== New Transaction - Mapping Address [0x1bff240] (Read)
run3.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x1bff240] r[0] b[1] row[223] col[249]
run3.log:== New Transaction - Mapping Address [0x1bff240] (Read)
run3.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x1bff240] r[0] b[1] row[223] col[249]
run3.log:== New Transaction - Mapping Address [0x1bff240] (Read)
run3.log:== New Transaction - Mapping Address [0x1bff240] (Read)
run3.log:== New Transaction - Mapping Address [0x1bff240] (Read)
run3.log:== New Transaction - Mapping Address [0x1bff240] (Read)
run3.log:== New Transaction - Mapping Address [0x1bff240] (Read)
run3.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x196cf80] r[0] b[6] row[203] col[103]
run3.log:== New Transaction - Mapping Address [0x1bff240] (Read)
run3.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x196cf80] r[0] b[6] row[203] col[103]
run3.log:== New Transaction - Mapping Address [0x6332140] (Read)
run3.log:== New Transaction - Mapping Address [0x6332140] (Read)
run3.log:== New Transaction - Mapping Address [0x6332140] (Read)
run3.log: -- MC Issuing On Command Bus : BP [READ_P] pa[0x1bff240] r[0] b[1] row[223] col[249]
run3.log:== New Transaction - Mapping Address [0x6332140] (Read)
run3.log: -- R0 Receiving On Bus    : BP [READ_P] pa[0x1bff240] r[0] b[1] row[223] col[249]
run3.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x6332140] r[0] b[5] row[793] col[144]
run3.log:== New Transaction - Mapping Address [0x6332180] (Read)
run3.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x6332140] r[0] b[5] row[793] col[144]
run3.log:== New Transaction - Mapping Address [0x6332180] (Read)
run3.log:== New Transaction - Mapping Address [0x6332180] (Read)
run3.log: -- MC Issuing On Command Bus : BP [READ_P] pa[0x196cf80] r[0] b[6] row[203] col[103]
run3.log: -- R0 Receiving On Bus    : BP [READ_P] pa[0x196cf80] r[0] b[6] row[203] col[103]
run3.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1bff240] r[0] b[1] row[223] col[249] data[0]=NO DATA
run3.log: -- MC Issuing On Command Bus : BP [READ_P] pa[0x6332140] r[0] b[5] row[793] col[144]
run3.log:== New Transaction - Mapping Address [0x6332180] (Read)
run3.log: -- R0 Receiving On Bus    : BP [READ_P] pa[0x6332140] r[0] b[5] row[793] col[144]
run3.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1bff240] r[0] b[1] row[223] col[249] data[0]=NO DATA
run3.log: -- MC Issuing to CPU bus : T [Data] [0x1bff240] [0]
run3.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run3.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run3.log: -- MC Issuing to CPU bus : T [Data] [0x196cf80] [0]
run3.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x6332140] r[0] b[5] row[793] col[144] data[0]=NO DATA
run3.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x1bff240] r[0] b[1] row[223] col[249]
run3.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x1bff240] r[0] b[1] row[223] col[249]
run3.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x6332140] r[0] b[5] row[793] col[144] data[0]=NO DATA
run3.log: -- MC Issuing to CPU bus : T [Data] [0x6332140] [0]
run3.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x196cf80] r[0] b[6] row[203] col[103]
run3.log:== New Transaction - Mapping Address [0x6332180] (Read)
run3.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x196cf80] r[0] b[6] row[203] col[103]
run3.log: -- MC Issuing On Command Bus : BP [READ_P] pa[0x1bff240] r[0] b[1] row[223] col[249]
run3.log: -- R0 Receiving On Bus    : BP [READ_P] pa[0x1bff240] r[0] b[1] row[223] col[249]
run3.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x6332140] r[0] b[5] row[793] col[144]
run3.log:== New Transaction - Mapping Address [0x6332180] (Read)
run3.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x6332140] r[0] b[5] row[793] col[144]
run3.log: -- MC Issuing On Command Bus : BP [READ_P] pa[0x196cf80] r[0] b[6] row[203] col[103]
run3.log: -- R0 Receiving On Bus    : BP [READ_P] pa[0x196cf80] r[0] b[6] row[203] col[103]
run3.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1bff240] r[0] b[1] row[223] col[249] data[0]=NO DATA
run3.log: -- MC Issuing On Command Bus : BP [READ_P] pa[0x6332140] r[0] b[5] row[793] col[144]
run3.log:== New Transaction - Mapping Address [0x6332180] (Read)
run3.log: -- R0 Receiving On Bus    : BP [READ_P] pa[0x6332140] r[0] b[5] row[793] col[144]
run3.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1bff240] r[0] b[1] row[223] col[249] data[0]=NO DATA
run3.log: -- MC Issuing to CPU bus : T [Data] [0x1bff240] [0]
run3.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run3.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run3.log: -- MC Issuing to CPU bus : T [Data] [0x196cf80] [0]
run3.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x6332140] r[0] b[5] row[793] col[144] data[0]=NO DATA
run3.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x1bff240] r[0] b[1] row[223] col[249]
run3.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x1bff240] r[0] b[1] row[223] col[249]
run3.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x6332140] r[0] b[5] row[793] col[144] data[0]=NO DATA
run3.log: -- MC Issuing to CPU bus : T [Data] [0x6332140] [0]
run3.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x196cf80] r[0] b[6] row[203] col[103]
run3.log:== New Transaction - Mapping Address [0x6332180] (Read)
run3.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x196cf80] r[0] b[6] row[203] col[103]
run3.log: -- MC Issuing On Command Bus : BP [READ_P] pa[0x1bff240] r[0] b[1] row[223] col[249]
run3.log: -- R0 Receiving On Bus    : BP [READ_P] pa[0x1bff240] r[0] b[1] row[223] col[249]
run3.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x6332140] r[0] b[5] row[793] col[144]
run3.log:== New Transaction - Mapping Address [0x1495800] (Read)
run3.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x6332140] r[0] b[5] row[793] col[144]
run3.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x1495800] r[0] b[0] row[164] col[172]
run3.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x1495800] r[0] b[0] row[164] col[172]
run3.log: -- MC Issuing On Command Bus : BP [READ_P] pa[0x196cf80] r[0] b[6] row[203] col[103]
run3.log:== New Transaction - Mapping Address [0x1495800] (Read)
run3.log: -- R0 Receiving On Bus    : BP [READ_P] pa[0x196cf80] r[0] b[6] row[203] col[103]
run3.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1bff240] r[0] b[1] row[223] col[249] data[0]=NO DATA
run3.log: -- MC Issuing On Command Bus : BP [READ_P] pa[0x6332140] r[0] b[5] row[793] col[144]
run3.log: -- R0 Receiving On Bus    : BP [READ_P] pa[0x6332140] r[0] b[5] row[793] col[144]
run3.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1bff240] r[0] b[1] row[223] col[249] data[0]=NO DATA
run3.log: -- MC Issuing On Command Bus : BP [READ_P] pa[0x1495800] r[0] b[0] row[164] col[172]
run3.log:== New Transaction - Mapping Address [0x1495800] (Read)
run3.log: -- MC Issuing to CPU bus : T [Data] [0x1bff240] [0]
run3.log: -- R0 Receiving On Bus    : BP [READ_P] pa[0x1495800] r[0] b[0] row[164] col[172]
run3.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run3.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x196cf80] r[0] b[6] row[203] col[103] data[0]=NO DATA
run3.log: -- MC Issuing to CPU bus : T [Data] [0x196cf80] [0]
run3.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x6332140] r[0] b[5] row[793] col[144] data[0]=NO DATA
run3.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x1bff240] r[0] b[1] row[223] col[249]
run3.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x1bff240] r[0] b[1] row[223] col[249]
run3.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x6332140] r[0] b[5] row[793] col[144] data[0]=NO DATA
run3.log: -- R0 Issuing On Data Bus : BP [DATA] pa[0x1495800] r[0] b[0] row[164] col[172] data[0]=NO DATA
run3.log: -- MC Issuing to CPU bus : T [Data] [0x6332140] [0]
run3.log: -- MC Receiving From Data Bus : BP [DATA] pa[0x1495800] r[0] b[0] row[164] col[172] data[0]=NO DATA
run3.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x6332180] r[0] b[6] row[793] col[144]
run3.log:== New Transaction - Mapping Address [0x1495800] (Read)
run3.log: -- MC Issuing to CPU bus : T [Data] [0x1495800] [0]
run3.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x6332180] r[0] b[6] row[793] col[144]
run3.log:      -Rank   0 : 
run3.log:        -Reads  : 31 (1984 bytes)
run3.log:        -Writes : 2 (128 bytes)
run3.log:        -Bandwidth / Latency  (Bank 0): 0.040 GB/s		133.500 ns
run3.log:        -Bandwidth / Latency  (Bank 1): 0.119 GB/s		88.500 ns
run3.log:        -Bandwidth / Latency  (Bank 2): 0.000 GB/s		-nan ns
run3.log:        -Bandwidth / Latency  (Bank 3): 0.000 GB/s		-nan ns
run3.log:        -Bandwidth / Latency  (Bank 4): 0.079 GB/s		-nan ns
run3.log:        -Bandwidth / Latency  (Bank 5): 0.437 GB/s		143.455 ns
run3.log:        -Bandwidth / Latency  (Bank 6): 0.318 GB/s		98.250 ns
run3.log:        -Bandwidth / Latency  (Bank 7): 0.318 GB/s		124.875 ns
run3.log:     -Background (watts)     : 1.692
run3.log:     -Act/Pre    (watts)     : 0.454
run3.log:     -Burst      (watts)     : 0.448
run3.log:     -Refresh    (watts)     : 0.000
run3.log: ---  Latency list (12)
run3.log:       [20-29] : 4
run3.log:       [30-39] : 2
run3.log:       [50-59] : 5
run3.log:       [60-69] : 2
run3.log:       [70-79] : 4
run3.log:       [80-89] : 2
run3.log:       [90-99] : 2
run3.log:       [100-109] : 4
run3.log:       [110-119] : 2
run3.log:       [130-139] : 2
run3.log:       [160-169] : 1
run3.log:       [180-189] : 1
run_test1_normal_closed.log:      -Rank   0 : 
run_test1_normal_closed.log:        -Reads  : 0 (0 bytes)
run_test1_normal_closed.log:        -Writes : 0 (0 bytes)
run_test1_normal_closed.log:        -Bandwidth / Latency  (Bank 0): 0.000 GB/s		-nan ns
run_test1_normal_closed.log:        -Bandwidth / Latency  (Bank 1): 0.000 GB/s		-nan ns
run_test1_normal_closed.log:        -Bandwidth / Latency  (Bank 2): 0.000 GB/s		-nan ns
run_test1_normal_closed.log:        -Bandwidth / Latency  (Bank 3): 0.000 GB/s		-nan ns
run_test1_normal_closed.log:        -Bandwidth / Latency  (Bank 4): 0.000 GB/s		-nan ns
run_test1_normal_closed.log:        -Bandwidth / Latency  (Bank 5): 0.000 GB/s		-nan ns
run_test1_normal_closed.log:        -Bandwidth / Latency  (Bank 6): 0.000 GB/s		-nan ns
run_test1_normal_closed.log:        -Bandwidth / Latency  (Bank 7): 0.000 GB/s		-nan ns
run_test1_normal_closed.log:     -Background (watts)     : 0.000
run_test1_normal_closed.log:     -Act/Pre    (watts)     : 0.000
run_test1_normal_closed.log:     -Burst      (watts)     : 0.000
run_test1_normal_closed.log:     -Refresh    (watts)     : 0.000
run_test1_normal_closed.log:== New Transaction - Mapping Address [0x0] (Write)
run_test1_normal_closed.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x0] r[0] b[0] row[0] col[0]
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x0] r[0] b[0] row[0] col[0]
run_test1_normal_closed.log:== New Transaction - Mapping Address [0x200] (Write)
run_test1_normal_closed.log: -- MC Issuing On Command Bus : BP [WRITE_P] pa[0x0] r[0] b[0] row[0] col[0]
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [WRITE_P] pa[0x0] r[0] b[0] row[0] col[0]
run_test1_normal_closed.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x0] r[0] b[0] row[0] col[0] data[0]=NO DATA
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x0] r[0] b[0] row[0] col[0] data[0]=NO DATA
run_test1_normal_closed.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x200] r[0] b[0] row[0] col[1]
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x200] r[0] b[0] row[0] col[1]
run_test1_normal_closed.log:== New Transaction - Mapping Address [0x400] (Write)
run_test1_normal_closed.log: -- MC Issuing On Command Bus : BP [WRITE_P] pa[0x200] r[0] b[0] row[0] col[1]
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [WRITE_P] pa[0x200] r[0] b[0] row[0] col[1]
run_test1_normal_closed.log:== New Transaction - Mapping Address [0x600] (Write)
run_test1_normal_closed.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x200] r[0] b[0] row[0] col[1] data[0]=NO DATA
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x200] r[0] b[0] row[0] col[1] data[0]=NO DATA
run_test1_normal_closed.log:== New Transaction - Mapping Address [0x20000] (Write)
run_test1_normal_closed.log:== New Transaction - Mapping Address [0x20200] (Write)
run_test1_normal_closed.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x400] r[0] b[0] row[0] col[2]
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x400] r[0] b[0] row[0] col[2]
run_test1_normal_closed.log: -- MC Issuing On Command Bus : BP [WRITE_P] pa[0x400] r[0] b[0] row[0] col[2]
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [WRITE_P] pa[0x400] r[0] b[0] row[0] col[2]
run_test1_normal_closed.log:== New Transaction - Mapping Address [0x20400] (Write)
run_test1_normal_closed.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x400] r[0] b[0] row[0] col[2] data[0]=NO DATA
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x400] r[0] b[0] row[0] col[2] data[0]=NO DATA
run_test1_normal_closed.log:== New Transaction - Mapping Address [0x20600] (Write)
run_test1_normal_closed.log:== New Transaction - Mapping Address [0x40000] (Write)
run_test1_normal_closed.log:== New Transaction - Mapping Address [0x40200] (Write)
run_test1_normal_closed.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x600] r[0] b[0] row[0] col[3]
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x600] r[0] b[0] row[0] col[3]
run_test1_normal_closed.log: -- MC Issuing On Command Bus : BP [WRITE_P] pa[0x600] r[0] b[0] row[0] col[3]
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [WRITE_P] pa[0x600] r[0] b[0] row[0] col[3]
run_test1_normal_closed.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x600] r[0] b[0] row[0] col[3] data[0]=NO DATA
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x600] r[0] b[0] row[0] col[3] data[0]=NO DATA
run_test1_normal_closed.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x20000] r[0] b[0] row[1] col[0]
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x20000] r[0] b[0] row[1] col[0]
run_test1_normal_closed.log: -- MC Issuing On Command Bus : BP [WRITE_P] pa[0x20000] r[0] b[0] row[1] col[0]
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [WRITE_P] pa[0x20000] r[0] b[0] row[1] col[0]
run_test1_normal_closed.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x20000] r[0] b[0] row[1] col[0] data[0]=NO DATA
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x20000] r[0] b[0] row[1] col[0] data[0]=NO DATA
run_test1_normal_closed.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x20200] r[0] b[0] row[1] col[1]
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x20200] r[0] b[0] row[1] col[1]
run_test1_normal_closed.log: -- MC Issuing On Command Bus : BP [WRITE_P] pa[0x20200] r[0] b[0] row[1] col[1]
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [WRITE_P] pa[0x20200] r[0] b[0] row[1] col[1]
run_test1_normal_closed.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x20200] r[0] b[0] row[1] col[1] data[0]=NO DATA
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x20200] r[0] b[0] row[1] col[1] data[0]=NO DATA
run_test1_normal_closed.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x20400] r[0] b[0] row[1] col[2]
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x20400] r[0] b[0] row[1] col[2]
run_test1_normal_closed.log: -- MC Issuing On Command Bus : BP [WRITE_P] pa[0x20400] r[0] b[0] row[1] col[2]
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [WRITE_P] pa[0x20400] r[0] b[0] row[1] col[2]
run_test1_normal_closed.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x20400] r[0] b[0] row[1] col[2] data[0]=NO DATA
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x20400] r[0] b[0] row[1] col[2] data[0]=NO DATA
run_test1_normal_closed.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x20600] r[0] b[0] row[1] col[3]
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x20600] r[0] b[0] row[1] col[3]
run_test1_normal_closed.log: -- MC Issuing On Command Bus : BP [WRITE_P] pa[0x20600] r[0] b[0] row[1] col[3]
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [WRITE_P] pa[0x20600] r[0] b[0] row[1] col[3]
run_test1_normal_closed.log:== New Transaction - Mapping Address [0x40400] (Write)
run_test1_normal_closed.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x20600] r[0] b[0] row[1] col[3] data[0]=NO DATA
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x20600] r[0] b[0] row[1] col[3] data[0]=NO DATA
run_test1_normal_closed.log:== New Transaction - Mapping Address [0x40600] (Write)
run_test1_normal_closed.log:== New Transaction - Mapping Address [0x60000] (Write)
run_test1_normal_closed.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x40000] r[0] b[0] row[2] col[0]
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x40000] r[0] b[0] row[2] col[0]
run_test1_normal_closed.log:== New Transaction - Mapping Address [0x60200] (Write)
run_test1_normal_closed.log: -- MC Issuing On Command Bus : BP [WRITE_P] pa[0x40000] r[0] b[0] row[2] col[0]
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [WRITE_P] pa[0x40000] r[0] b[0] row[2] col[0]
run_test1_normal_closed.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x40000] r[0] b[0] row[2] col[0] data[0]=NO DATA
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x40000] r[0] b[0] row[2] col[0] data[0]=NO DATA
run_test1_normal_closed.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x40200] r[0] b[0] row[2] col[1]
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x40200] r[0] b[0] row[2] col[1]
run_test1_normal_closed.log: -- MC Issuing On Command Bus : BP [WRITE_P] pa[0x40200] r[0] b[0] row[2] col[1]
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [WRITE_P] pa[0x40200] r[0] b[0] row[2] col[1]
run_test1_normal_closed.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x40200] r[0] b[0] row[2] col[1] data[0]=NO DATA
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x40200] r[0] b[0] row[2] col[1] data[0]=NO DATA
run_test1_normal_closed.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x40400] r[0] b[0] row[2] col[2]
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x40400] r[0] b[0] row[2] col[2]
run_test1_normal_closed.log: -- MC Issuing On Command Bus : BP [WRITE_P] pa[0x40400] r[0] b[0] row[2] col[2]
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [WRITE_P] pa[0x40400] r[0] b[0] row[2] col[2]
run_test1_normal_closed.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x40400] r[0] b[0] row[2] col[2] data[0]=NO DATA
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x40400] r[0] b[0] row[2] col[2] data[0]=NO DATA
run_test1_normal_closed.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x40600] r[0] b[0] row[2] col[3]
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x40600] r[0] b[0] row[2] col[3]
run_test1_normal_closed.log: -- MC Issuing On Command Bus : BP [WRITE_P] pa[0x40600] r[0] b[0] row[2] col[3]
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [WRITE_P] pa[0x40600] r[0] b[0] row[2] col[3]
run_test1_normal_closed.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x40600] r[0] b[0] row[2] col[3] data[0]=NO DATA
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x40600] r[0] b[0] row[2] col[3] data[0]=NO DATA
run_test1_normal_closed.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x60000] r[0] b[0] row[3] col[0]
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x60000] r[0] b[0] row[3] col[0]
run_test1_normal_closed.log:== New Transaction - Mapping Address [0x60400] (Write)
run_test1_normal_closed.log: -- MC Issuing On Command Bus : BP [WRITE_P] pa[0x60000] r[0] b[0] row[3] col[0]
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [WRITE_P] pa[0x60000] r[0] b[0] row[3] col[0]
run_test1_normal_closed.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x60000] r[0] b[0] row[3] col[0] data[0]=NO DATA
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x60000] r[0] b[0] row[3] col[0] data[0]=NO DATA
run_test1_normal_closed.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x60200] r[0] b[0] row[3] col[1]
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x60200] r[0] b[0] row[3] col[1]
run_test1_normal_closed.log: -- MC Issuing On Command Bus : BP [WRITE_P] pa[0x60200] r[0] b[0] row[3] col[1]
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [WRITE_P] pa[0x60200] r[0] b[0] row[3] col[1]
run_test1_normal_closed.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x60200] r[0] b[0] row[3] col[1] data[0]=NO DATA
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x60200] r[0] b[0] row[3] col[1] data[0]=NO DATA
run_test1_normal_closed.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x60400] r[0] b[0] row[3] col[2]
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x60400] r[0] b[0] row[3] col[2]
run_test1_normal_closed.log: -- MC Issuing On Command Bus : BP [WRITE_P] pa[0x60400] r[0] b[0] row[3] col[2]
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [WRITE_P] pa[0x60400] r[0] b[0] row[3] col[2]
run_test1_normal_closed.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x60400] r[0] b[0] row[3] col[2] data[0]=NO DATA
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x60400] r[0] b[0] row[3] col[2] data[0]=NO DATA
run_test1_normal_closed.log:== New Transaction - Mapping Address [0x60600] (Write)
run_test1_normal_closed.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x60600] r[0] b[0] row[3] col[3]
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x60600] r[0] b[0] row[3] col[3]
run_test1_normal_closed.log: -- MC Issuing On Command Bus : BP [WRITE_P] pa[0x60600] r[0] b[0] row[3] col[3]
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [WRITE_P] pa[0x60600] r[0] b[0] row[3] col[3]
run_test1_normal_closed.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x60600] r[0] b[0] row[3] col[3] data[0]=NO DATA
run_test1_normal_closed.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x60600] r[0] b[0] row[3] col[3] data[0]=NO DATA
run_test1_normal_closed.log:      -Rank   0 : 
run_test1_normal_closed.log:        -Reads  : 0 (0 bytes)
run_test1_normal_closed.log:        -Writes : 16 (1024 bytes)
run_test1_normal_closed.log:        -Bandwidth / Latency  (Bank 0): 0.636 GB/s		-nan ns
run_test1_normal_closed.log:        -Bandwidth / Latency  (Bank 1): 0.000 GB/s		-nan ns
run_test1_normal_closed.log:        -Bandwidth / Latency  (Bank 2): 0.000 GB/s		-nan ns
run_test1_normal_closed.log:        -Bandwidth / Latency  (Bank 3): 0.000 GB/s		-nan ns
run_test1_normal_closed.log:        -Bandwidth / Latency  (Bank 4): 0.000 GB/s		-nan ns
run_test1_normal_closed.log:        -Bandwidth / Latency  (Bank 5): 0.000 GB/s		-nan ns
run_test1_normal_closed.log:        -Bandwidth / Latency  (Bank 6): 0.000 GB/s		-nan ns
run_test1_normal_closed.log:        -Bandwidth / Latency  (Bank 7): 0.000 GB/s		-nan ns
run_test1_normal_closed.log:     -Background (watts)     : 1.491
run_test1_normal_closed.log:     -Act/Pre    (watts)     : 0.207
run_test1_normal_closed.log:     -Burst      (watts)     : 0.253
run_test1_normal_closed.log:     -Refresh    (watts)     : 0.000
run_test1_normal_closed.log: ---  Latency list (0)
run_test1_normal_open.log:      -Rank   0 : 
run_test1_normal_open.log:        -Reads  : 0 (0 bytes)
run_test1_normal_open.log:        -Writes : 0 (0 bytes)
run_test1_normal_open.log:        -Bandwidth / Latency  (Bank 0): 0.000 GB/s		-nan ns
run_test1_normal_open.log:        -Bandwidth / Latency  (Bank 1): 0.000 GB/s		-nan ns
run_test1_normal_open.log:        -Bandwidth / Latency  (Bank 2): 0.000 GB/s		-nan ns
run_test1_normal_open.log:        -Bandwidth / Latency  (Bank 3): 0.000 GB/s		-nan ns
run_test1_normal_open.log:        -Bandwidth / Latency  (Bank 4): 0.000 GB/s		-nan ns
run_test1_normal_open.log:        -Bandwidth / Latency  (Bank 5): 0.000 GB/s		-nan ns
run_test1_normal_open.log:        -Bandwidth / Latency  (Bank 6): 0.000 GB/s		-nan ns
run_test1_normal_open.log:        -Bandwidth / Latency  (Bank 7): 0.000 GB/s		-nan ns
run_test1_normal_open.log:     -Background (watts)     : 0.000
run_test1_normal_open.log:     -Act/Pre    (watts)     : 0.000
run_test1_normal_open.log:     -Burst      (watts)     : 0.000
run_test1_normal_open.log:     -Refresh    (watts)     : 0.000
run_test1_normal_open.log:== New Transaction - Mapping Address [0x0] (Write)
run_test1_normal_open.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x0] r[0] b[0] row[0] col[0]
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x0] r[0] b[0] row[0] col[0]
run_test1_normal_open.log:== New Transaction - Mapping Address [0x200] (Write)
run_test1_normal_open.log: -- MC Issuing On Command Bus : BP [WRITE] pa[0x0] r[0] b[0] row[0] col[0]
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [WRITE] pa[0x0] r[0] b[0] row[0] col[0]
run_test1_normal_open.log: -- MC Issuing On Command Bus : BP [WRITE] pa[0x200] r[0] b[0] row[0] col[1]
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [WRITE] pa[0x200] r[0] b[0] row[0] col[1]
run_test1_normal_open.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x0] r[0] b[0] row[0] col[0] data[0]=NO DATA
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x0] r[0] b[0] row[0] col[0] data[0]=NO DATA
run_test1_normal_open.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x200] r[0] b[0] row[0] col[1] data[0]=NO DATA
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x200] r[0] b[0] row[0] col[1] data[0]=NO DATA
run_test1_normal_open.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run_test1_normal_open.log:== New Transaction - Mapping Address [0x400] (Write)
run_test1_normal_open.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x400] r[0] b[0] row[0] col[2]
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x400] r[0] b[0] row[0] col[2]
run_test1_normal_open.log:== New Transaction - Mapping Address [0x600] (Write)
run_test1_normal_open.log: -- MC Issuing On Command Bus : BP [WRITE] pa[0x400] r[0] b[0] row[0] col[2]
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [WRITE] pa[0x400] r[0] b[0] row[0] col[2]
run_test1_normal_open.log: -- MC Issuing On Command Bus : BP [WRITE] pa[0x600] r[0] b[0] row[0] col[3]
run_test1_normal_open.log:== New Transaction - Mapping Address [0x20000] (Write)
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [WRITE] pa[0x600] r[0] b[0] row[0] col[3]
run_test1_normal_open.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x400] r[0] b[0] row[0] col[2] data[0]=NO DATA
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x400] r[0] b[0] row[0] col[2] data[0]=NO DATA
run_test1_normal_open.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x600] r[0] b[0] row[0] col[3] data[0]=NO DATA
run_test1_normal_open.log:== New Transaction - Mapping Address [0x20200] (Write)
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x600] r[0] b[0] row[0] col[3] data[0]=NO DATA
run_test1_normal_open.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run_test1_normal_open.log:== New Transaction - Mapping Address [0x20400] (Write)
run_test1_normal_open.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x20000] r[0] b[0] row[1] col[0]
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x20000] r[0] b[0] row[1] col[0]
run_test1_normal_open.log:== New Transaction - Mapping Address [0x20600] (Write)
run_test1_normal_open.log: -- MC Issuing On Command Bus : BP [WRITE] pa[0x20000] r[0] b[0] row[1] col[0]
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [WRITE] pa[0x20000] r[0] b[0] row[1] col[0]
run_test1_normal_open.log: -- MC Issuing On Command Bus : BP [WRITE] pa[0x20200] r[0] b[0] row[1] col[1]
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [WRITE] pa[0x20200] r[0] b[0] row[1] col[1]
run_test1_normal_open.log:== New Transaction - Mapping Address [0x40000] (Write)
run_test1_normal_open.log: -- MC Issuing On Command Bus : BP [WRITE] pa[0x20400] r[0] b[0] row[1] col[2]
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [WRITE] pa[0x20400] r[0] b[0] row[1] col[2]
run_test1_normal_open.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x20000] r[0] b[0] row[1] col[0] data[0]=NO DATA
run_test1_normal_open.log: -- MC Issuing On Command Bus : BP [WRITE] pa[0x20600] r[0] b[0] row[1] col[3]
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [WRITE] pa[0x20600] r[0] b[0] row[1] col[3]
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x20000] r[0] b[0] row[1] col[0] data[0]=NO DATA
run_test1_normal_open.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x20200] r[0] b[0] row[1] col[1] data[0]=NO DATA
run_test1_normal_open.log:== New Transaction - Mapping Address [0x40200] (Write)
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x20200] r[0] b[0] row[1] col[1] data[0]=NO DATA
run_test1_normal_open.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x20400] r[0] b[0] row[1] col[2] data[0]=NO DATA
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x20400] r[0] b[0] row[1] col[2] data[0]=NO DATA
run_test1_normal_open.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x20600] r[0] b[0] row[1] col[3] data[0]=NO DATA
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x20600] r[0] b[0] row[1] col[3] data[0]=NO DATA
run_test1_normal_open.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run_test1_normal_open.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x40000] r[0] b[0] row[2] col[0]
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x40000] r[0] b[0] row[2] col[0]
run_test1_normal_open.log: -- MC Issuing On Command Bus : BP [WRITE] pa[0x40000] r[0] b[0] row[2] col[0]
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [WRITE] pa[0x40000] r[0] b[0] row[2] col[0]
run_test1_normal_open.log: -- MC Issuing On Command Bus : BP [WRITE] pa[0x40200] r[0] b[0] row[2] col[1]
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [WRITE] pa[0x40200] r[0] b[0] row[2] col[1]
run_test1_normal_open.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x40000] r[0] b[0] row[2] col[0] data[0]=NO DATA
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x40000] r[0] b[0] row[2] col[0] data[0]=NO DATA
run_test1_normal_open.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x40200] r[0] b[0] row[2] col[1] data[0]=NO DATA
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x40200] r[0] b[0] row[2] col[1] data[0]=NO DATA
run_test1_normal_open.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run_test1_normal_open.log:== New Transaction - Mapping Address [0x40400] (Write)
run_test1_normal_open.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x40400] r[0] b[0] row[2] col[2]
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x40400] r[0] b[0] row[2] col[2]
run_test1_normal_open.log:== New Transaction - Mapping Address [0x40600] (Write)
run_test1_normal_open.log: -- MC Issuing On Command Bus : BP [WRITE] pa[0x40400] r[0] b[0] row[2] col[2]
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [WRITE] pa[0x40400] r[0] b[0] row[2] col[2]
run_test1_normal_open.log: -- MC Issuing On Command Bus : BP [WRITE] pa[0x40600] r[0] b[0] row[2] col[3]
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [WRITE] pa[0x40600] r[0] b[0] row[2] col[3]
run_test1_normal_open.log:== New Transaction - Mapping Address [0x60000] (Write)
run_test1_normal_open.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x40400] r[0] b[0] row[2] col[2] data[0]=NO DATA
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x40400] r[0] b[0] row[2] col[2] data[0]=NO DATA
run_test1_normal_open.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x40600] r[0] b[0] row[2] col[3] data[0]=NO DATA
run_test1_normal_open.log:== New Transaction - Mapping Address [0x60200] (Write)
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x40600] r[0] b[0] row[2] col[3] data[0]=NO DATA
run_test1_normal_open.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run_test1_normal_open.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x60000] r[0] b[0] row[3] col[0]
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x60000] r[0] b[0] row[3] col[0]
run_test1_normal_open.log: -- MC Issuing On Command Bus : BP [WRITE] pa[0x60000] r[0] b[0] row[3] col[0]
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [WRITE] pa[0x60000] r[0] b[0] row[3] col[0]
run_test1_normal_open.log: -- MC Issuing On Command Bus : BP [WRITE] pa[0x60200] r[0] b[0] row[3] col[1]
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [WRITE] pa[0x60200] r[0] b[0] row[3] col[1]
run_test1_normal_open.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x60000] r[0] b[0] row[3] col[0] data[0]=NO DATA
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x60000] r[0] b[0] row[3] col[0] data[0]=NO DATA
run_test1_normal_open.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x60200] r[0] b[0] row[3] col[1] data[0]=NO DATA
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x60200] r[0] b[0] row[3] col[1] data[0]=NO DATA
run_test1_normal_open.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run_test1_normal_open.log:== New Transaction - Mapping Address [0x60400] (Write)
run_test1_normal_open.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x60400] r[0] b[0] row[3] col[2]
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x60400] r[0] b[0] row[3] col[2]
run_test1_normal_open.log: -- MC Issuing On Command Bus : BP [WRITE] pa[0x60400] r[0] b[0] row[3] col[2]
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [WRITE] pa[0x60400] r[0] b[0] row[3] col[2]
run_test1_normal_open.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x60400] r[0] b[0] row[3] col[2] data[0]=NO DATA
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x60400] r[0] b[0] row[3] col[2] data[0]=NO DATA
run_test1_normal_open.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run_test1_normal_open.log:== New Transaction - Mapping Address [0x60600] (Write)
run_test1_normal_open.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x60600] r[0] b[0] row[3] col[3]
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x60600] r[0] b[0] row[3] col[3]
run_test1_normal_open.log: -- MC Issuing On Command Bus : BP [WRITE] pa[0x60600] r[0] b[0] row[3] col[3]
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [WRITE] pa[0x60600] r[0] b[0] row[3] col[3]
run_test1_normal_open.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x60600] r[0] b[0] row[3] col[3] data[0]=NO DATA
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x60600] r[0] b[0] row[3] col[3] data[0]=NO DATA
run_test1_normal_open.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run_test1_normal_open.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run_test1_normal_open.log:      -Rank   0 : 
run_test1_normal_open.log:        -Reads  : 0 (0 bytes)
run_test1_normal_open.log:        -Writes : 16 (1024 bytes)
run_test1_normal_open.log:        -Bandwidth / Latency  (Bank 0): 0.636 GB/s		-nan ns
run_test1_normal_open.log:        -Bandwidth / Latency  (Bank 1): 0.000 GB/s		-nan ns
run_test1_normal_open.log:        -Bandwidth / Latency  (Bank 2): 0.000 GB/s		-nan ns
run_test1_normal_open.log:        -Bandwidth / Latency  (Bank 3): 0.000 GB/s		-nan ns
run_test1_normal_open.log:        -Bandwidth / Latency  (Bank 4): 0.000 GB/s		-nan ns
run_test1_normal_open.log:        -Bandwidth / Latency  (Bank 5): 0.000 GB/s		-nan ns
run_test1_normal_open.log:        -Bandwidth / Latency  (Bank 6): 0.000 GB/s		-nan ns
run_test1_normal_open.log:        -Bandwidth / Latency  (Bank 7): 0.000 GB/s		-nan ns
run_test1_normal_open.log:     -Background (watts)     : 0.948
run_test1_normal_open.log:     -Act/Pre    (watts)     : 0.104
run_test1_normal_open.log:     -Burst      (watts)     : 0.253
run_test1_normal_open.log:     -Refresh    (watts)     : 0.000
run_test1_normal_open.log: ---  Latency list (0)
run_test2_normal_close.log:      -Rank   0 : 
run_test2_normal_close.log:        -Reads  : 0 (0 bytes)
run_test2_normal_close.log:        -Writes : 0 (0 bytes)
run_test2_normal_close.log:        -Bandwidth / Latency  (Bank 0): 0.000 GB/s		-nan ns
run_test2_normal_close.log:        -Bandwidth / Latency  (Bank 1): 0.000 GB/s		-nan ns
run_test2_normal_close.log:        -Bandwidth / Latency  (Bank 2): 0.000 GB/s		-nan ns
run_test2_normal_close.log:        -Bandwidth / Latency  (Bank 3): 0.000 GB/s		-nan ns
run_test2_normal_close.log:        -Bandwidth / Latency  (Bank 4): 0.000 GB/s		-nan ns
run_test2_normal_close.log:        -Bandwidth / Latency  (Bank 5): 0.000 GB/s		-nan ns
run_test2_normal_close.log:        -Bandwidth / Latency  (Bank 6): 0.000 GB/s		-nan ns
run_test2_normal_close.log:        -Bandwidth / Latency  (Bank 7): 0.000 GB/s		-nan ns
run_test2_normal_close.log:     -Background (watts)     : 0.000
run_test2_normal_close.log:     -Act/Pre    (watts)     : 0.000
run_test2_normal_close.log:     -Burst      (watts)     : 0.000
run_test2_normal_close.log:     -Refresh    (watts)     : 0.000
run_test2_normal_close.log:== New Transaction - Mapping Address [0x0] (Write)
run_test2_normal_close.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x0] r[0] b[0] row[0] col[0]
run_test2_normal_close.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x0] r[0] b[0] row[0] col[0]
run_test2_normal_close.log: -- MC Issuing On Command Bus : BP [WRITE_P] pa[0x0] r[0] b[0] row[0] col[0]
run_test2_normal_close.log: -- R0 Receiving On Bus    : BP [WRITE_P] pa[0x0] r[0] b[0] row[0] col[0]
run_test2_normal_close.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x0] r[0] b[0] row[0] col[0] data[0]=NO DATA
run_test2_normal_close.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x0] r[0] b[0] row[0] col[0] data[0]=NO DATA
run_test2_normal_close.log:== New Transaction - Mapping Address [0x200] (Write)
run_test2_normal_close.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x200] r[0] b[0] row[0] col[1]
run_test2_normal_close.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x200] r[0] b[0] row[0] col[1]
run_test2_normal_close.log: -- MC Issuing On Command Bus : BP [WRITE_P] pa[0x200] r[0] b[0] row[0] col[1]
run_test2_normal_close.log: -- R0 Receiving On Bus    : BP [WRITE_P] pa[0x200] r[0] b[0] row[0] col[1]
run_test2_normal_close.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x200] r[0] b[0] row[0] col[1] data[0]=NO DATA
run_test2_normal_close.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x200] r[0] b[0] row[0] col[1] data[0]=NO DATA
run_test2_normal_close.log:== New Transaction - Mapping Address [0x400] (Write)
run_test2_normal_close.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x400] r[0] b[0] row[0] col[2]
run_test2_normal_close.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x400] r[0] b[0] row[0] col[2]
run_test2_normal_close.log: -- MC Issuing On Command Bus : BP [WRITE_P] pa[0x400] r[0] b[0] row[0] col[2]
run_test2_normal_close.log: -- R0 Receiving On Bus    : BP [WRITE_P] pa[0x400] r[0] b[0] row[0] col[2]
run_test2_normal_close.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x400] r[0] b[0] row[0] col[2] data[0]=NO DATA
run_test2_normal_close.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x400] r[0] b[0] row[0] col[2] data[0]=NO DATA
run_test2_normal_close.log:== New Transaction - Mapping Address [0x600] (Write)
run_test2_normal_close.log:== New Transaction - Mapping Address [0x20000] (Write)
run_test2_normal_close.log:== New Transaction - Mapping Address [0x20200] (Write)
run_test2_normal_close.log:== New Transaction - Mapping Address [0x20400] (Write)
run_test2_normal_close.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x600] r[0] b[0] row[0] col[3]
run_test2_normal_close.log:== New Transaction - Mapping Address [0x20600] (Write)
run_test2_normal_close.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x600] r[0] b[0] row[0] col[3]
run_test2_normal_close.log: -- MC Issuing On Command Bus : BP [WRITE_P] pa[0x600] r[0] b[0] row[0] col[3]
run_test2_normal_close.log: -- R0 Receiving On Bus    : BP [WRITE_P] pa[0x600] r[0] b[0] row[0] col[3]
run_test2_normal_close.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x600] r[0] b[0] row[0] col[3] data[0]=NO DATA
run_test2_normal_close.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x600] r[0] b[0] row[0] col[3] data[0]=NO DATA
run_test2_normal_close.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x20000] r[0] b[0] row[1] col[0]
run_test2_normal_close.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x20000] r[0] b[0] row[1] col[0]
run_test2_normal_close.log: -- MC Issuing On Command Bus : BP [WRITE_P] pa[0x20000] r[0] b[0] row[1] col[0]
run_test2_normal_close.log: -- R0 Receiving On Bus    : BP [WRITE_P] pa[0x20000] r[0] b[0] row[1] col[0]
run_test2_normal_close.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x20000] r[0] b[0] row[1] col[0] data[0]=NO DATA
run_test2_normal_close.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x20000] r[0] b[0] row[1] col[0] data[0]=NO DATA
run_test2_normal_close.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x20200] r[0] b[0] row[1] col[1]
run_test2_normal_close.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x20200] r[0] b[0] row[1] col[1]
run_test2_normal_close.log: -- MC Issuing On Command Bus : BP [WRITE_P] pa[0x20200] r[0] b[0] row[1] col[1]
run_test2_normal_close.log: -- R0 Receiving On Bus    : BP [WRITE_P] pa[0x20200] r[0] b[0] row[1] col[1]
run_test2_normal_close.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x20200] r[0] b[0] row[1] col[1] data[0]=NO DATA
run_test2_normal_close.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x20200] r[0] b[0] row[1] col[1] data[0]=NO DATA
run_test2_normal_close.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x20400] r[0] b[0] row[1] col[2]
run_test2_normal_close.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x20400] r[0] b[0] row[1] col[2]
run_test2_normal_close.log: -- MC Issuing On Command Bus : BP [WRITE_P] pa[0x20400] r[0] b[0] row[1] col[2]
run_test2_normal_close.log: -- R0 Receiving On Bus    : BP [WRITE_P] pa[0x20400] r[0] b[0] row[1] col[2]
run_test2_normal_close.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x20400] r[0] b[0] row[1] col[2] data[0]=NO DATA
run_test2_normal_close.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x20400] r[0] b[0] row[1] col[2] data[0]=NO DATA
run_test2_normal_close.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x20600] r[0] b[0] row[1] col[3]
run_test2_normal_close.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x20600] r[0] b[0] row[1] col[3]
run_test2_normal_close.log: -- MC Issuing On Command Bus : BP [WRITE_P] pa[0x20600] r[0] b[0] row[1] col[3]
run_test2_normal_close.log: -- R0 Receiving On Bus    : BP [WRITE_P] pa[0x20600] r[0] b[0] row[1] col[3]
run_test2_normal_close.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x20600] r[0] b[0] row[1] col[3] data[0]=NO DATA
run_test2_normal_close.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x20600] r[0] b[0] row[1] col[3] data[0]=NO DATA
run_test2_normal_close.log:      -Rank   0 : 
run_test2_normal_close.log:        -Reads  : 0 (0 bytes)
run_test2_normal_close.log:        -Writes : 8 (512 bytes)
run_test2_normal_close.log:        -Bandwidth / Latency  (Bank 0): 0.318 GB/s		-nan ns
run_test2_normal_close.log:        -Bandwidth / Latency  (Bank 1): 0.000 GB/s		-nan ns
run_test2_normal_close.log:        -Bandwidth / Latency  (Bank 2): 0.000 GB/s		-nan ns
run_test2_normal_close.log:        -Bandwidth / Latency  (Bank 3): 0.000 GB/s		-nan ns
run_test2_normal_close.log:        -Bandwidth / Latency  (Bank 4): 0.000 GB/s		-nan ns
run_test2_normal_close.log:        -Bandwidth / Latency  (Bank 5): 0.000 GB/s		-nan ns
run_test2_normal_close.log:        -Bandwidth / Latency  (Bank 6): 0.000 GB/s		-nan ns
run_test2_normal_close.log:        -Bandwidth / Latency  (Bank 7): 0.000 GB/s		-nan ns
run_test2_normal_close.log:     -Background (watts)     : 0.881
run_test2_normal_close.log:     -Act/Pre    (watts)     : 0.104
run_test2_normal_close.log:     -Burst      (watts)     : 0.127
run_test2_normal_close.log:     -Refresh    (watts)     : 0.000
run_test2_normal_close.log: ---  Latency list (0)
run_test2_normal_open.log:      -Rank   0 : 
run_test2_normal_open.log:        -Reads  : 0 (0 bytes)
run_test2_normal_open.log:        -Writes : 0 (0 bytes)
run_test2_normal_open.log:        -Bandwidth / Latency  (Bank 0): 0.000 GB/s		-nan ns
run_test2_normal_open.log:        -Bandwidth / Latency  (Bank 1): 0.000 GB/s		-nan ns
run_test2_normal_open.log:        -Bandwidth / Latency  (Bank 2): 0.000 GB/s		-nan ns
run_test2_normal_open.log:        -Bandwidth / Latency  (Bank 3): 0.000 GB/s		-nan ns
run_test2_normal_open.log:        -Bandwidth / Latency  (Bank 4): 0.000 GB/s		-nan ns
run_test2_normal_open.log:        -Bandwidth / Latency  (Bank 5): 0.000 GB/s		-nan ns
run_test2_normal_open.log:        -Bandwidth / Latency  (Bank 6): 0.000 GB/s		-nan ns
run_test2_normal_open.log:        -Bandwidth / Latency  (Bank 7): 0.000 GB/s		-nan ns
run_test2_normal_open.log:     -Background (watts)     : 0.000
run_test2_normal_open.log:     -Act/Pre    (watts)     : 0.000
run_test2_normal_open.log:     -Burst      (watts)     : 0.000
run_test2_normal_open.log:     -Refresh    (watts)     : 0.000
run_test2_normal_open.log:== New Transaction - Mapping Address [0x0] (Write)
run_test2_normal_open.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x0] r[0] b[0] row[0] col[0]
run_test2_normal_open.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x0] r[0] b[0] row[0] col[0]
run_test2_normal_open.log: -- MC Issuing On Command Bus : BP [WRITE] pa[0x0] r[0] b[0] row[0] col[0]
run_test2_normal_open.log: -- R0 Receiving On Bus    : BP [WRITE] pa[0x0] r[0] b[0] row[0] col[0]
run_test2_normal_open.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x0] r[0] b[0] row[0] col[0] data[0]=NO DATA
run_test2_normal_open.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x0] r[0] b[0] row[0] col[0] data[0]=NO DATA
run_test2_normal_open.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run_test2_normal_open.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run_test2_normal_open.log:== New Transaction - Mapping Address [0x200] (Write)
run_test2_normal_open.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x200] r[0] b[0] row[0] col[1]
run_test2_normal_open.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x200] r[0] b[0] row[0] col[1]
run_test2_normal_open.log: -- MC Issuing On Command Bus : BP [WRITE] pa[0x200] r[0] b[0] row[0] col[1]
run_test2_normal_open.log: -- R0 Receiving On Bus    : BP [WRITE] pa[0x200] r[0] b[0] row[0] col[1]
run_test2_normal_open.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x200] r[0] b[0] row[0] col[1] data[0]=NO DATA
run_test2_normal_open.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x200] r[0] b[0] row[0] col[1] data[0]=NO DATA
run_test2_normal_open.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run_test2_normal_open.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run_test2_normal_open.log:== New Transaction - Mapping Address [0x400] (Write)
run_test2_normal_open.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x400] r[0] b[0] row[0] col[2]
run_test2_normal_open.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x400] r[0] b[0] row[0] col[2]
run_test2_normal_open.log: -- MC Issuing On Command Bus : BP [WRITE] pa[0x400] r[0] b[0] row[0] col[2]
run_test2_normal_open.log: -- R0 Receiving On Bus    : BP [WRITE] pa[0x400] r[0] b[0] row[0] col[2]
run_test2_normal_open.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x400] r[0] b[0] row[0] col[2] data[0]=NO DATA
run_test2_normal_open.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x400] r[0] b[0] row[0] col[2] data[0]=NO DATA
run_test2_normal_open.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run_test2_normal_open.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run_test2_normal_open.log:== New Transaction - Mapping Address [0x600] (Write)
run_test2_normal_open.log:== New Transaction - Mapping Address [0x20000] (Write)
run_test2_normal_open.log:== New Transaction - Mapping Address [0x20200] (Write)
run_test2_normal_open.log:== New Transaction - Mapping Address [0x20400] (Write)
run_test2_normal_open.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x600] r[0] b[0] row[0] col[3]
run_test2_normal_open.log:== New Transaction - Mapping Address [0x20600] (Write)
run_test2_normal_open.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x600] r[0] b[0] row[0] col[3]
run_test2_normal_open.log: -- MC Issuing On Command Bus : BP [WRITE] pa[0x600] r[0] b[0] row[0] col[3]
run_test2_normal_open.log: -- R0 Receiving On Bus    : BP [WRITE] pa[0x600] r[0] b[0] row[0] col[3]
run_test2_normal_open.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x600] r[0] b[0] row[0] col[3] data[0]=NO DATA
run_test2_normal_open.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x600] r[0] b[0] row[0] col[3] data[0]=NO DATA
run_test2_normal_open.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run_test2_normal_open.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run_test2_normal_open.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x20000] r[0] b[0] row[1] col[0]
run_test2_normal_open.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x20000] r[0] b[0] row[1] col[0]
run_test2_normal_open.log: -- MC Issuing On Command Bus : BP [WRITE] pa[0x20000] r[0] b[0] row[1] col[0]
run_test2_normal_open.log: -- R0 Receiving On Bus    : BP [WRITE] pa[0x20000] r[0] b[0] row[1] col[0]
run_test2_normal_open.log: -- MC Issuing On Command Bus : BP [WRITE] pa[0x20200] r[0] b[0] row[1] col[1]
run_test2_normal_open.log: -- R0 Receiving On Bus    : BP [WRITE] pa[0x20200] r[0] b[0] row[1] col[1]
run_test2_normal_open.log: -- MC Issuing On Command Bus : BP [WRITE] pa[0x20400] r[0] b[0] row[1] col[2]
run_test2_normal_open.log: -- R0 Receiving On Bus    : BP [WRITE] pa[0x20400] r[0] b[0] row[1] col[2]
run_test2_normal_open.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x20000] r[0] b[0] row[1] col[0] data[0]=NO DATA
run_test2_normal_open.log: -- MC Issuing On Command Bus : BP [WRITE] pa[0x20600] r[0] b[0] row[1] col[3]
run_test2_normal_open.log: -- R0 Receiving On Bus    : BP [WRITE] pa[0x20600] r[0] b[0] row[1] col[3]
run_test2_normal_open.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x20000] r[0] b[0] row[1] col[0] data[0]=NO DATA
run_test2_normal_open.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x20200] r[0] b[0] row[1] col[1] data[0]=NO DATA
run_test2_normal_open.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x20200] r[0] b[0] row[1] col[1] data[0]=NO DATA
run_test2_normal_open.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x20400] r[0] b[0] row[1] col[2] data[0]=NO DATA
run_test2_normal_open.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x20400] r[0] b[0] row[1] col[2] data[0]=NO DATA
run_test2_normal_open.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x20600] r[0] b[0] row[1] col[3] data[0]=NO DATA
run_test2_normal_open.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x20600] r[0] b[0] row[1] col[3] data[0]=NO DATA
run_test2_normal_open.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run_test2_normal_open.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run_test2_normal_open.log:      -Rank   0 : 
run_test2_normal_open.log:        -Reads  : 0 (0 bytes)
run_test2_normal_open.log:        -Writes : 8 (512 bytes)
run_test2_normal_open.log:        -Bandwidth / Latency  (Bank 0): 0.318 GB/s		-nan ns
run_test2_normal_open.log:        -Bandwidth / Latency  (Bank 1): 0.000 GB/s		-nan ns
run_test2_normal_open.log:        -Bandwidth / Latency  (Bank 2): 0.000 GB/s		-nan ns
run_test2_normal_open.log:        -Bandwidth / Latency  (Bank 3): 0.000 GB/s		-nan ns
run_test2_normal_open.log:        -Bandwidth / Latency  (Bank 4): 0.000 GB/s		-nan ns
run_test2_normal_open.log:        -Bandwidth / Latency  (Bank 5): 0.000 GB/s		-nan ns
run_test2_normal_open.log:        -Bandwidth / Latency  (Bank 6): 0.000 GB/s		-nan ns
run_test2_normal_open.log:        -Bandwidth / Latency  (Bank 7): 0.000 GB/s		-nan ns
run_test2_normal_open.log:     -Background (watts)     : 0.671
run_test2_normal_open.log:     -Act/Pre    (watts)     : 0.065
run_test2_normal_open.log:     -Burst      (watts)     : 0.127
run_test2_normal_open.log:     -Refresh    (watts)     : 0.000
run_test2_normal_open.log: ---  Latency list (0)
run_test2_symm_open.log:      -Rank   0 : 
run_test2_symm_open.log:        -Reads  : 0 (0 bytes)
run_test2_symm_open.log:        -Writes : 0 (0 bytes)
run_test2_symm_open.log:        -Bandwidth / Latency  (Bank 0): 0.000 GB/s		-nan ns
run_test2_symm_open.log:        -Bandwidth / Latency  (Bank 1): 0.000 GB/s		-nan ns
run_test2_symm_open.log:        -Bandwidth / Latency  (Bank 2): 0.000 GB/s		-nan ns
run_test2_symm_open.log:        -Bandwidth / Latency  (Bank 3): 0.000 GB/s		-nan ns
run_test2_symm_open.log:        -Bandwidth / Latency  (Bank 4): 0.000 GB/s		-nan ns
run_test2_symm_open.log:        -Bandwidth / Latency  (Bank 5): 0.000 GB/s		-nan ns
run_test2_symm_open.log:        -Bandwidth / Latency  (Bank 6): 0.000 GB/s		-nan ns
run_test2_symm_open.log:        -Bandwidth / Latency  (Bank 7): 0.000 GB/s		-nan ns
run_test2_symm_open.log:     -Background (watts)     : 0.000
run_test2_symm_open.log:     -Act/Pre    (watts)     : 0.000
run_test2_symm_open.log:     -Burst      (watts)     : 0.000
run_test2_symm_open.log:     -Refresh    (watts)     : 0.000
run_test2_symm_open.log:== New Transaction - Mapping Address [0x0] (Write)
run_test2_symm_open.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x0] r[0] b[0] row[0] col[0]
run_test2_symm_open.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x0] r[0] b[0] row[0] col[0]
run_test2_symm_open.log: -- MC Issuing On Command Bus : BP [WRITE] pa[0x0] r[0] b[0] row[0] col[0]
run_test2_symm_open.log: -- R0 Receiving On Bus    : BP [WRITE] pa[0x0] r[0] b[0] row[0] col[0]
run_test2_symm_open.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x0] r[0] b[0] row[0] col[0] data[0]=NO DATA
run_test2_symm_open.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x0] r[0] b[0] row[0] col[0] data[0]=NO DATA
run_test2_symm_open.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run_test2_symm_open.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run_test2_symm_open.log:== New Transaction - Mapping Address [0x20000] (Write)
run_test2_symm_open.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x20000] r[0] b[0] row[1] col[0]
run_test2_symm_open.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x20000] r[0] b[0] row[1] col[0]
run_test2_symm_open.log: -- MC Issuing On Command Bus : BP [WRITE] pa[0x20000] r[0] b[0] row[1] col[0]
run_test2_symm_open.log: -- R0 Receiving On Bus    : BP [WRITE] pa[0x20000] r[0] b[0] row[1] col[0]
run_test2_symm_open.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x20000] r[0] b[0] row[1] col[0] data[0]=NO DATA
run_test2_symm_open.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x20000] r[0] b[0] row[1] col[0] data[0]=NO DATA
run_test2_symm_open.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run_test2_symm_open.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run_test2_symm_open.log:== New Transaction - Mapping Address [0x40000] (Write)
run_test2_symm_open.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x40000] r[0] b[0] row[2] col[0]
run_test2_symm_open.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x40000] r[0] b[0] row[2] col[0]
run_test2_symm_open.log: -- MC Issuing On Command Bus : BP [WRITE] pa[0x40000] r[0] b[0] row[2] col[0]
run_test2_symm_open.log: -- R0 Receiving On Bus    : BP [WRITE] pa[0x40000] r[0] b[0] row[2] col[0]
run_test2_symm_open.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x40000] r[0] b[0] row[2] col[0] data[0]=NO DATA
run_test2_symm_open.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x40000] r[0] b[0] row[2] col[0] data[0]=NO DATA
run_test2_symm_open.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run_test2_symm_open.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run_test2_symm_open.log:== New Transaction - Mapping Address [0x60000] (Write)
run_test2_symm_open.log: -- MC Issuing On Command Bus : BP [ACT] pa[0x60000] r[0] b[0] row[3] col[0]
run_test2_symm_open.log: -- R0 Receiving On Bus    : BP [ACT] pa[0x60000] r[0] b[0] row[3] col[0]
run_test2_symm_open.log: -- MC Issuing On Command Bus : BP [WRITE] pa[0x60000] r[0] b[0] row[3] col[0]
run_test2_symm_open.log: -- R0 Receiving On Bus    : BP [WRITE] pa[0x60000] r[0] b[0] row[3] col[0]
run_test2_symm_open.log: -- MC Issuing On Data Bus    : BP [DATA] pa[0x60000] r[0] b[0] row[3] col[0] data[0]=NO DATA
run_test2_symm_open.log: -- R0 Receiving On Bus    : BP [DATA] pa[0x60000] r[0] b[0] row[3] col[0] data[0]=NO DATA
run_test2_symm_open.log: -- MC Issuing On Command Bus : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run_test2_symm_open.log: -- R0 Receiving On Bus    : BP [PRE] pa[0x0] r[0] b[0] row[0] col[0]
run_test2_symm_open.log:      -Rank   0 : 
run_test2_symm_open.log:        -Reads  : 0 (0 bytes)
run_test2_symm_open.log:        -Writes : 4 (256 bytes)
run_test2_symm_open.log:        -Bandwidth / Latency  (Bank 0): 0.159 GB/s		-nan ns
run_test2_symm_open.log:        -Bandwidth / Latency  (Bank 1): 0.000 GB/s		-nan ns
run_test2_symm_open.log:        -Bandwidth / Latency  (Bank 2): 0.000 GB/s		-nan ns
run_test2_symm_open.log:        -Bandwidth / Latency  (Bank 3): 0.000 GB/s		-nan ns
run_test2_symm_open.log:        -Bandwidth / Latency  (Bank 4): 0.000 GB/s		-nan ns
run_test2_symm_open.log:        -Bandwidth / Latency  (Bank 5): 0.000 GB/s		-nan ns
run_test2_symm_open.log:        -Bandwidth / Latency  (Bank 6): 0.000 GB/s		-nan ns
run_test2_symm_open.log:        -Bandwidth / Latency  (Bank 7): 0.000 GB/s		-nan ns
run_test2_symm_open.log:     -Background (watts)     : 0.570
run_test2_symm_open.log:     -Act/Pre    (watts)     : 0.052
run_test2_symm_open.log:     -Burst      (watts)     : 0.063
run_test2_symm_open.log:     -Refresh    (watts)     : 0.000
run_test2_symm_open.log: ---  Latency list (0)
SimulatorObject.cpp:*  Copyright (c) 2010-2011, Elliott Cooper-Balis
SimulatorObject.dep:SimulatorObject.o: SimulatorObject.cpp /usr/include/stdc-predef.h \
SimulatorObject.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++config.h \
SimulatorObject.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/os_defines.h \
SimulatorObject.dep: /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
SimulatorObject.dep: /usr/include/x86_64-linux-gnu/bits/wordsize.h \
SimulatorObject.dep: /usr/include/x86_64-linux-gnu/gnu/stubs.h \
SimulatorObject.dep: /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
SimulatorObject.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/cpu_defines.h \
SimulatorObject.dep: /usr/include/stdlib.h /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h \
SimulatorObject.dep: /usr/include/x86_64-linux-gnu/bits/waitflags.h \
SimulatorObject.dep: /usr/include/x86_64-linux-gnu/bits/waitstatus.h /usr/include/endian.h \
SimulatorObject.dep: /usr/include/x86_64-linux-gnu/bits/endian.h \
SimulatorObject.dep: /usr/include/x86_64-linux-gnu/bits/byteswap.h \
SimulatorObject.dep: /usr/include/x86_64-linux-gnu/bits/types.h \
SimulatorObject.dep: /usr/include/x86_64-linux-gnu/bits/typesizes.h \
SimulatorObject.dep: /usr/include/x86_64-linux-gnu/bits/byteswap-16.h /usr/include/xlocale.h \
SimulatorObject.dep: /usr/include/x86_64-linux-gnu/sys/types.h /usr/include/time.h \
SimulatorObject.dep: /usr/include/x86_64-linux-gnu/sys/select.h \
SimulatorObject.dep: /usr/include/x86_64-linux-gnu/bits/select.h \
SimulatorObject.dep: /usr/include/x86_64-linux-gnu/bits/sigset.h \
SimulatorObject.dep: /usr/include/x86_64-linux-gnu/bits/time.h \
SimulatorObject.dep: /usr/include/x86_64-linux-gnu/bits/select2.h \
SimulatorObject.dep: /usr/include/x86_64-linux-gnu/sys/sysmacros.h \
SimulatorObject.dep: /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h /usr/include/alloca.h \
SimulatorObject.dep: /usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h \
SimulatorObject.dep: /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
SimulatorObject.dep: /usr/include/x86_64-linux-gnu/bits/stdlib.h SimulatorObject.h \
SimulatorObject.dep: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdint.h /usr/include/stdint.h \
SimulatorObject.dep: /usr/include/x86_64-linux-gnu/bits/wchar.h
SimulatorObject.deppo:SimulatorObject.po: SimulatorObject.cpp /usr/include/stdc-predef.h \
SimulatorObject.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++config.h \
SimulatorObject.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/os_defines.h \
SimulatorObject.deppo: /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
SimulatorObject.deppo: /usr/include/x86_64-linux-gnu/bits/wordsize.h \
SimulatorObject.deppo: /usr/include/x86_64-linux-gnu/gnu/stubs.h \
SimulatorObject.deppo: /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
SimulatorObject.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/cpu_defines.h \
SimulatorObject.deppo: /usr/include/stdlib.h /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h \
SimulatorObject.deppo: /usr/include/x86_64-linux-gnu/bits/waitflags.h \
SimulatorObject.deppo: /usr/include/x86_64-linux-gnu/bits/waitstatus.h /usr/include/endian.h \
SimulatorObject.deppo: /usr/include/x86_64-linux-gnu/bits/endian.h \
SimulatorObject.deppo: /usr/include/x86_64-linux-gnu/bits/byteswap.h \
SimulatorObject.deppo: /usr/include/x86_64-linux-gnu/bits/types.h \
SimulatorObject.deppo: /usr/include/x86_64-linux-gnu/bits/typesizes.h \
SimulatorObject.deppo: /usr/include/x86_64-linux-gnu/bits/byteswap-16.h /usr/include/xlocale.h \
SimulatorObject.deppo: /usr/include/x86_64-linux-gnu/sys/types.h /usr/include/time.h \
SimulatorObject.deppo: /usr/include/x86_64-linux-gnu/sys/select.h \
SimulatorObject.deppo: /usr/include/x86_64-linux-gnu/bits/select.h \
SimulatorObject.deppo: /usr/include/x86_64-linux-gnu/bits/sigset.h \
SimulatorObject.deppo: /usr/include/x86_64-linux-gnu/bits/time.h \
SimulatorObject.deppo: /usr/include/x86_64-linux-gnu/bits/select2.h \
SimulatorObject.deppo: /usr/include/x86_64-linux-gnu/sys/sysmacros.h \
SimulatorObject.deppo: /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h /usr/include/alloca.h \
SimulatorObject.deppo: /usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h \
SimulatorObject.deppo: /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
SimulatorObject.deppo: /usr/include/x86_64-linux-gnu/bits/stdlib.h SimulatorObject.h \
SimulatorObject.deppo: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdint.h /usr/include/stdint.h \
SimulatorObject.deppo: /usr/include/x86_64-linux-gnu/bits/wchar.h
SimulatorObject.h:*  Copyright (c) 2010-2011, Elliott Cooper-Balis
Binary file SimulatorObject.o matches
Binary file SimulatorObject.po matches
SystemConfiguration.h:*  Copyright (c) 2010-2011, Elliott Cooper-Balis
SystemConfiguration.h:#define WL (RL-1)
SystemConfiguration.h:#define READ_TO_PRE_DELAY (AL+BL/2+ max(tRTP,tCCD)-tCCD)
SystemConfiguration.h:#define READ_TO_WRITE_DELAY (RL+BL/2+tRTRS-WL)
SystemConfiguration.h:#define WRITE_TO_READ_DELAY_R (WL+BL/2+tRTRS-RL) //interrank
system.ini:TRANS_QUEUE_DEPTH=32					; transaction queue, i.e., CPU-level commands such as:  READ 0xbeef
system.ini:CMD_QUEUE_DEPTH=32						; command queue, i.e., DRAM-level commands such as: CAS 544, RAS 4
system.ini:ADDRESS_MAPPING_SCHEME=scheme2	;valid schemes 1-7; For multiple independent channels, use scheme7 since it has the most parallelism 
system.ini.example:TRANS_QUEUE_DEPTH=32					; transaction queue, i.e., CPU-level commands such as:  READ 0xbeef
system.ini.example:CMD_QUEUE_DEPTH=32						; command queue, i.e., DRAM-level commands such as: CAS 544, RAS 4
system.ini.example:ADDRESS_MAPPING_SCHEME=scheme2	;valid schemes 1-7; For multiple independent channels, use scheme7 since it has the most parallelism 
TraceBasedSim.cpp:*  Copyright (c) 2010-2011, Elliott Cooper-Balis
TraceBasedSim.cpp://File to run a trace-based simulation
TraceBasedSim.cpp:				exit(-1);
TraceBasedSim.cpp:				exit(-1);
TraceBasedSim.cpp:				if (it->second.size() == 0)
TraceBasedSim.cpp:					exit(-1); 
TraceBasedSim.cpp:			uint64_t latency = done_cycle - added_cycle;
TraceBasedSim.cpp:			cout << "Read Callback:  0x"<< std::hex << address << std::dec << " latency="<<latency<<"cycles ("<< done_cycle<< "->"<<added_cycle<<")"<<endl;
TraceBasedSim.cpp:				exit(-1);
TraceBasedSim.cpp:				if (it->second.size() == 0)
TraceBasedSim.cpp:					exit(-1); 
TraceBasedSim.cpp:			uint64_t latency = done_cycle - added_cycle;
TraceBasedSim.cpp:			cout << "Write Callback: 0x"<< std::hex << address << std::dec << " latency="<<latency<<"cycles ("<< done_cycle<< "->"<<added_cycle<<")"<<endl;
TraceBasedSim.cpp:	cout << "DRAMSim -t tracefile -s system.ini -d ini/device.ini [-c #] [-p pwd] [-q] [-S 2048] [-n] [-o OPTION_A=1234,tRC=14,tFAW=19]" <<endl;
TraceBasedSim.cpp:	cout << "\t-t, --tracefile=FILENAME \tspecify a tracefile to run  "<<endl;
TraceBasedSim.cpp:	cout << "\t-s, --systemini=FILENAME \tspecify an ini file that describes the memory system parameters  "<<endl;
TraceBasedSim.cpp:	cout << "\t-d, --deviceini=FILENAME \tspecify an ini file that describes the device-level parameters"<<endl;
TraceBasedSim.cpp:	cout << "\t-c, --numcycles=# \t\tspecify number of cycles to run the simulation for [default=30] "<<endl;
TraceBasedSim.cpp:	cout << "\t-q, --quiet \t\t\tflag to suppress simulation output (except final stats) [default=no]"<<endl;
TraceBasedSim.cpp:	cout << "\t-o, --option=OPTION_A=234,tFAW=14\t\t\toverwrite any ini file option from the command line"<<endl;
TraceBasedSim.cpp:	cout << "\t-p, --pwd=DIRECTORY\t\tSet the working directory (i.e. usually DRAMSim directory where ini/ and results/ are)"<<endl;
TraceBasedSim.cpp:	cout << "\t-S, --size=# \t\t\tSize of the memory system in megabytes [default=2048M]"<<endl;
TraceBasedSim.cpp:	cout << "\t-n, --notiming \t\t\tDo not use the clock cycle information in the trace file"<<endl;
TraceBasedSim.cpp:	cout << "\t-v, --visfile \t\t\tVis output filename"<<endl;
TraceBasedSim.cpp:		cmdStr = line.substr(spaceIndex, line.find_first_of(" ", spaceIndex) - spaceIndex);
TraceBasedSim.cpp:		ccStr = line.substr(spaceIndex, line.find_first_of(" ", spaceIndex) - spaceIndex);
TraceBasedSim.cpp:		cmdStr = line.substr(spaceIndex, line.find_first_of(" ", spaceIndex) - spaceIndex);
TraceBasedSim.cpp:		ccStr = line.substr(spaceIndex, line.find_first_of(" ", spaceIndex) - spaceIndex);
TraceBasedSim.cpp:			cmdStr = line.substr(previousIndex+1,spaceIndex-previousIndex-1);
TraceBasedSim.cpp:		//convert address string -> number
TraceBasedSim.cpp:			exit(-1);
TraceBasedSim.cpp:				size_t charsLeft = min(((size_t)16), strlen - startIndex + 1);
TraceBasedSim.cpp: * Override options can be specified on the command line as -o key1=value1,key2=value2
TraceBasedSim.cpp: * this method should parse the key-value pairs and put them into a map 
TraceBasedSim.cpp:		string key = kv_str.substr(start, equal_sign-start);
TraceBasedSim.cpp:		string value = kv_str.substr(equal_sign+1, comma-equal_sign-1); 
TraceBasedSim.cpp:		if (c == -1)
TraceBasedSim.cpp:			exit(-1);
TraceBasedSim.cpp:		exit(-1);
TraceBasedSim.cpp:	memorySystem->setCPUClockSpeed(0); 
TraceBasedSim.cpp:	memorySystem->RegisterCallbacks(read_cb, write_cb, NULL);
TraceBasedSim.cpp:		cout << "== Error - Could not open trace file"<<endl;
TraceBasedSim.cpp:	memorySystem->printStats(true);
TraceBasedSim.dep:TraceBasedSim.o: TraceBasedSim.cpp /usr/include/stdc-predef.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++config.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/os_defines.h \
TraceBasedSim.dep: /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/bits/wordsize.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/gnu/stubs.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/cpu_defines.h \
TraceBasedSim.dep: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdarg.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/bits/wchar.h \
TraceBasedSim.dep: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h \
TraceBasedSim.dep: /usr/include/xlocale.h /usr/include/x86_64-linux-gnu/bits/wchar2.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++locale.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/bits/locale.h /usr/include/c++/4.8/cctype \
TraceBasedSim.dep: /usr/include/ctype.h /usr/include/x86_64-linux-gnu/bits/types.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/bits/typesizes.h /usr/include/endian.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/bits/endian.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/bits/byteswap.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr-default.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/bits/sched.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/bits/time.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/bits/timex.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/bits/setjmp.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/atomic_word.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++allocator.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_base.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_inline.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/bits/stdio.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/bits/stdio2.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/basic_file.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++io.h \
TraceBasedSim.dep: /usr/include/stdlib.h /usr/include/x86_64-linux-gnu/bits/waitflags.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/sys/types.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/sys/select.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/bits/select.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/bits/sigset.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/bits/select2.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/sys/sysmacros.h /usr/include/alloca.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/bits/stdlib.h \
TraceBasedSim.dep: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdint.h /usr/include/stdint.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/bits/string3.h Callback.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/bits/huge_val.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/bits/huge_valf.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/bits/huge_vall.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/bits/inf.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/bits/nan.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/bits/mathdef.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/bits/mathcalls.h \
TraceBasedSim.dep: /usr/include/x86_64-linux-gnu/bits/mathinline.h
Binary file TraceBasedSim.o matches
Transaction.cpp:*  Copyright (c) 2010-2011, Elliott Cooper-Balis
Transaction.dep:Transaction.o: Transaction.cpp /usr/include/stdc-predef.h Transaction.h \
Transaction.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++config.h \
Transaction.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/os_defines.h \
Transaction.dep: /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
Transaction.dep: /usr/include/x86_64-linux-gnu/bits/wordsize.h \
Transaction.dep: /usr/include/x86_64-linux-gnu/gnu/stubs.h \
Transaction.dep: /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
Transaction.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/cpu_defines.h \
Transaction.dep: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdarg.h \
Transaction.dep: /usr/include/x86_64-linux-gnu/bits/wchar.h \
Transaction.dep: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h \
Transaction.dep: /usr/include/xlocale.h /usr/include/x86_64-linux-gnu/bits/wchar2.h \
Transaction.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++locale.h \
Transaction.dep: /usr/include/x86_64-linux-gnu/bits/locale.h /usr/include/c++/4.8/cctype \
Transaction.dep: /usr/include/ctype.h /usr/include/x86_64-linux-gnu/bits/types.h \
Transaction.dep: /usr/include/x86_64-linux-gnu/bits/typesizes.h /usr/include/endian.h \
Transaction.dep: /usr/include/x86_64-linux-gnu/bits/endian.h \
Transaction.dep: /usr/include/x86_64-linux-gnu/bits/byteswap.h \
Transaction.dep: /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
Transaction.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr.h \
Transaction.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr-default.h \
Transaction.dep: /usr/include/x86_64-linux-gnu/bits/sched.h \
Transaction.dep: /usr/include/x86_64-linux-gnu/bits/time.h \
Transaction.dep: /usr/include/x86_64-linux-gnu/bits/timex.h \
Transaction.dep: /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
Transaction.dep: /usr/include/x86_64-linux-gnu/bits/setjmp.h \
Transaction.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/atomic_word.h \
Transaction.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++allocator.h \
Transaction.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_base.h \
Transaction.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_inline.h \
Transaction.dep: /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
Transaction.dep: /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
Transaction.dep: /usr/include/x86_64-linux-gnu/bits/stdio.h \
Transaction.dep: /usr/include/x86_64-linux-gnu/bits/stdio2.h \
Transaction.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/basic_file.h \
Transaction.dep: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++io.h \
Transaction.dep: /usr/include/stdlib.h /usr/include/x86_64-linux-gnu/bits/waitflags.h \
Transaction.dep: /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
Transaction.dep: /usr/include/x86_64-linux-gnu/sys/types.h \
Transaction.dep: /usr/include/x86_64-linux-gnu/sys/select.h \
Transaction.dep: /usr/include/x86_64-linux-gnu/bits/select.h \
Transaction.dep: /usr/include/x86_64-linux-gnu/bits/sigset.h \
Transaction.dep: /usr/include/x86_64-linux-gnu/bits/select2.h \
Transaction.dep: /usr/include/x86_64-linux-gnu/sys/sysmacros.h /usr/include/alloca.h \
Transaction.dep: /usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h \
Transaction.dep: /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
Transaction.dep: /usr/include/x86_64-linux-gnu/bits/stdlib.h \
Transaction.dep: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdint.h /usr/include/stdint.h \
Transaction.deppo:Transaction.po: Transaction.cpp /usr/include/stdc-predef.h Transaction.h \
Transaction.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++config.h \
Transaction.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/os_defines.h \
Transaction.deppo: /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
Transaction.deppo: /usr/include/x86_64-linux-gnu/bits/wordsize.h \
Transaction.deppo: /usr/include/x86_64-linux-gnu/gnu/stubs.h \
Transaction.deppo: /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
Transaction.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/cpu_defines.h \
Transaction.deppo: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdarg.h \
Transaction.deppo: /usr/include/x86_64-linux-gnu/bits/wchar.h \
Transaction.deppo: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h \
Transaction.deppo: /usr/include/xlocale.h /usr/include/x86_64-linux-gnu/bits/wchar2.h \
Transaction.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++locale.h \
Transaction.deppo: /usr/include/x86_64-linux-gnu/bits/locale.h /usr/include/c++/4.8/cctype \
Transaction.deppo: /usr/include/ctype.h /usr/include/x86_64-linux-gnu/bits/types.h \
Transaction.deppo: /usr/include/x86_64-linux-gnu/bits/typesizes.h /usr/include/endian.h \
Transaction.deppo: /usr/include/x86_64-linux-gnu/bits/endian.h \
Transaction.deppo: /usr/include/x86_64-linux-gnu/bits/byteswap.h \
Transaction.deppo: /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
Transaction.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr.h \
Transaction.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr-default.h \
Transaction.deppo: /usr/include/x86_64-linux-gnu/bits/sched.h \
Transaction.deppo: /usr/include/x86_64-linux-gnu/bits/time.h \
Transaction.deppo: /usr/include/x86_64-linux-gnu/bits/timex.h \
Transaction.deppo: /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
Transaction.deppo: /usr/include/x86_64-linux-gnu/bits/setjmp.h \
Transaction.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/atomic_word.h \
Transaction.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++allocator.h \
Transaction.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_base.h \
Transaction.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/ctype_inline.h \
Transaction.deppo: /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
Transaction.deppo: /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
Transaction.deppo: /usr/include/x86_64-linux-gnu/bits/stdio.h \
Transaction.deppo: /usr/include/x86_64-linux-gnu/bits/stdio2.h \
Transaction.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/basic_file.h \
Transaction.deppo: /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++io.h \
Transaction.deppo: /usr/include/stdlib.h /usr/include/x86_64-linux-gnu/bits/waitflags.h \
Transaction.deppo: /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
Transaction.deppo: /usr/include/x86_64-linux-gnu/sys/types.h \
Transaction.deppo: /usr/include/x86_64-linux-gnu/sys/select.h \
Transaction.deppo: /usr/include/x86_64-linux-gnu/bits/select.h \
Transaction.deppo: /usr/include/x86_64-linux-gnu/bits/sigset.h \
Transaction.deppo: /usr/include/x86_64-linux-gnu/bits/select2.h \
Transaction.deppo: /usr/include/x86_64-linux-gnu/sys/sysmacros.h /usr/include/alloca.h \
Transaction.deppo: /usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h \
Transaction.deppo: /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
Transaction.deppo: /usr/include/x86_64-linux-gnu/bits/stdlib.h \
Transaction.deppo: /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdint.h /usr/include/stdint.h \
Transaction.h:*  Copyright (c) 2010-2011, Elliott Cooper-Balis
Binary file Transaction.o matches
Binary file Transaction.po matches
